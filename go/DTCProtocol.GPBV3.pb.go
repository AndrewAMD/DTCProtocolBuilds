// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DTCProtocol.GPBV3.proto

package DTC_PB

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//============================================================================
// DTC protocol version
type DTCVersion int32

const (
	DTCVersion_DTC_VERSION_UNSET DTCVersion = 0
	DTCVersion_CURRENT_VERSION   DTCVersion = 8
)

var DTCVersion_name = map[int32]string{
	0: "DTC_VERSION_UNSET",
	8: "CURRENT_VERSION",
}

var DTCVersion_value = map[string]int32{
	"DTC_VERSION_UNSET": 0,
	"CURRENT_VERSION":   8,
}

func (x DTCVersion) String() string {
	return proto.EnumName(DTCVersion_name, int32(x))
}

func (DTCVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{0}
}

type DTCMessageType int32

const (
	DTCMessageType_MESSAGE_TYPE_UNSET DTCMessageType = 0
	// Authentication and connection monitoring
	DTCMessageType_LOGON_REQUEST     DTCMessageType = 1
	DTCMessageType_LOGON_RESPONSE    DTCMessageType = 2
	DTCMessageType_HEARTBEAT         DTCMessageType = 3
	DTCMessageType_LOGOFF            DTCMessageType = 5
	DTCMessageType_ENCODING_REQUEST  DTCMessageType = 6
	DTCMessageType_ENCODING_RESPONSE DTCMessageType = 7
	// Market data
	DTCMessageType_MARKET_DATA_REQUEST                       DTCMessageType = 101
	DTCMessageType_MARKET_DATA_REJECT                        DTCMessageType = 103
	DTCMessageType_MARKET_DATA_SNAPSHOT                      DTCMessageType = 104
	DTCMessageType_MARKET_DATA_SNAPSHOT_INT                  DTCMessageType = 125
	DTCMessageType_MARKET_DATA_UPDATE_TRADE                  DTCMessageType = 107
	DTCMessageType_MARKET_DATA_UPDATE_TRADE_COMPACT          DTCMessageType = 112
	DTCMessageType_MARKET_DATA_UPDATE_TRADE_INT              DTCMessageType = 126
	DTCMessageType_MARKET_DATA_UPDATE_LAST_TRADE_SNAPSHOT    DTCMessageType = 134
	DTCMessageType_MARKET_DATA_UPDATE_BID_ASK                DTCMessageType = 108
	DTCMessageType_MARKET_DATA_UPDATE_BID_ASK_COMPACT        DTCMessageType = 117
	DTCMessageType_MARKET_DATA_UPDATE_BID_ASK_INT            DTCMessageType = 127
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_OPEN           DTCMessageType = 120
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_OPEN_INT       DTCMessageType = 128
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_HIGH           DTCMessageType = 114
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_HIGH_INT       DTCMessageType = 129
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_LOW            DTCMessageType = 115
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_LOW_INT        DTCMessageType = 130
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_VOLUME         DTCMessageType = 113
	DTCMessageType_MARKET_DATA_UPDATE_OPEN_INTEREST          DTCMessageType = 124
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_SETTLEMENT     DTCMessageType = 119
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_SETTLEMENT_INT DTCMessageType = 131
	DTCMessageType_MARKET_DATA_UPDATE_SESSION_NUM_TRADES     DTCMessageType = 135
	DTCMessageType_MARKET_DATA_UPDATE_TRADING_SESSION_DATE   DTCMessageType = 136
	DTCMessageType_MARKET_DEPTH_REQUEST                      DTCMessageType = 102
	DTCMessageType_MARKET_DEPTH_REJECT                       DTCMessageType = 121
	DTCMessageType_MARKET_DEPTH_SNAPSHOT_LEVEL               DTCMessageType = 122
	DTCMessageType_MARKET_DEPTH_SNAPSHOT_LEVEL_INT           DTCMessageType = 132
	DTCMessageType_MARKET_DEPTH_UPDATE_LEVEL                 DTCMessageType = 106
	DTCMessageType_MARKET_DEPTH_UPDATE_LEVEL_COMPACT         DTCMessageType = 118
	DTCMessageType_MARKET_DEPTH_UPDATE_LEVEL_INT             DTCMessageType = 133
	DTCMessageType_MARKET_DEPTH_FULL_UPDATE_10               DTCMessageType = 123
	DTCMessageType_MARKET_DEPTH_FULL_UPDATE_20               DTCMessageType = 105
	DTCMessageType_MARKET_DATA_FEED_STATUS                   DTCMessageType = 100
	DTCMessageType_MARKET_DATA_FEED_SYMBOL_STATUS            DTCMessageType = 116
	// Order entry and modification
	DTCMessageType_SUBMIT_NEW_SINGLE_ORDER     DTCMessageType = 208
	DTCMessageType_SUBMIT_NEW_SINGLE_ORDER_INT DTCMessageType = 206
	DTCMessageType_SUBMIT_NEW_OCO_ORDER        DTCMessageType = 201
	DTCMessageType_SUBMIT_NEW_OCO_ORDER_INT    DTCMessageType = 207
	DTCMessageType_CANCEL_ORDER                DTCMessageType = 203
	DTCMessageType_CANCEL_REPLACE_ORDER        DTCMessageType = 204
	DTCMessageType_CANCEL_REPLACE_ORDER_INT    DTCMessageType = 205
	// Trading related
	DTCMessageType_OPEN_ORDERS_REQUEST            DTCMessageType = 300
	DTCMessageType_OPEN_ORDERS_REJECT             DTCMessageType = 302
	DTCMessageType_ORDER_UPDATE                   DTCMessageType = 301
	DTCMessageType_HISTORICAL_ORDER_FILLS_REQUEST DTCMessageType = 303
	DTCMessageType_HISTORICAL_ORDER_FILL_RESPONSE DTCMessageType = 304
	DTCMessageType_HISTORICAL_ORDER_FILLS_REJECT  DTCMessageType = 308
	DTCMessageType_CURRENT_POSITIONS_REQUEST      DTCMessageType = 305
	DTCMessageType_CURRENT_POSITIONS_REJECT       DTCMessageType = 307
	DTCMessageType_POSITION_UPDATE                DTCMessageType = 306
	// Account list
	DTCMessageType_TRADE_ACCOUNTS_REQUEST DTCMessageType = 400
	DTCMessageType_TRADE_ACCOUNT_RESPONSE DTCMessageType = 401
	// Symbol discovery and security definitions
	DTCMessageType_EXCHANGE_LIST_REQUEST                   DTCMessageType = 500
	DTCMessageType_EXCHANGE_LIST_RESPONSE                  DTCMessageType = 501
	DTCMessageType_SYMBOLS_FOR_EXCHANGE_REQUEST            DTCMessageType = 502
	DTCMessageType_UNDERLYING_SYMBOLS_FOR_EXCHANGE_REQUEST DTCMessageType = 503
	DTCMessageType_SYMBOLS_FOR_UNDERLYING_REQUEST          DTCMessageType = 504
	DTCMessageType_SECURITY_DEFINITION_FOR_SYMBOL_REQUEST  DTCMessageType = 506
	DTCMessageType_SECURITY_DEFINITION_RESPONSE            DTCMessageType = 507
	DTCMessageType_SYMBOL_SEARCH_REQUEST                   DTCMessageType = 508
	DTCMessageType_SECURITY_DEFINITION_REJECT              DTCMessageType = 509
	// Account balance
	DTCMessageType_ACCOUNT_BALANCE_REQUEST DTCMessageType = 601
	DTCMessageType_ACCOUNT_BALANCE_REJECT  DTCMessageType = 602
	DTCMessageType_ACCOUNT_BALANCE_UPDATE  DTCMessageType = 600
	// Logging
	DTCMessageType_USER_MESSAGE        DTCMessageType = 700
	DTCMessageType_GENERAL_LOG_MESSAGE DTCMessageType = 701
	// Historical price data
	DTCMessageType_HISTORICAL_PRICE_DATA_REQUEST                  DTCMessageType = 800
	DTCMessageType_HISTORICAL_PRICE_DATA_RESPONSE_HEADER          DTCMessageType = 801
	DTCMessageType_HISTORICAL_PRICE_DATA_REJECT                   DTCMessageType = 802
	DTCMessageType_HISTORICAL_PRICE_DATA_RECORD_RESPONSE          DTCMessageType = 803
	DTCMessageType_HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE     DTCMessageType = 804
	DTCMessageType_HISTORICAL_PRICE_DATA_RECORD_RESPONSE_INT      DTCMessageType = 805
	DTCMessageType_HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE_INT DTCMessageType = 806
)

var DTCMessageType_name = map[int32]string{
	0:   "MESSAGE_TYPE_UNSET",
	1:   "LOGON_REQUEST",
	2:   "LOGON_RESPONSE",
	3:   "HEARTBEAT",
	5:   "LOGOFF",
	6:   "ENCODING_REQUEST",
	7:   "ENCODING_RESPONSE",
	101: "MARKET_DATA_REQUEST",
	103: "MARKET_DATA_REJECT",
	104: "MARKET_DATA_SNAPSHOT",
	125: "MARKET_DATA_SNAPSHOT_INT",
	107: "MARKET_DATA_UPDATE_TRADE",
	112: "MARKET_DATA_UPDATE_TRADE_COMPACT",
	126: "MARKET_DATA_UPDATE_TRADE_INT",
	134: "MARKET_DATA_UPDATE_LAST_TRADE_SNAPSHOT",
	108: "MARKET_DATA_UPDATE_BID_ASK",
	117: "MARKET_DATA_UPDATE_BID_ASK_COMPACT",
	127: "MARKET_DATA_UPDATE_BID_ASK_INT",
	120: "MARKET_DATA_UPDATE_SESSION_OPEN",
	128: "MARKET_DATA_UPDATE_SESSION_OPEN_INT",
	114: "MARKET_DATA_UPDATE_SESSION_HIGH",
	129: "MARKET_DATA_UPDATE_SESSION_HIGH_INT",
	115: "MARKET_DATA_UPDATE_SESSION_LOW",
	130: "MARKET_DATA_UPDATE_SESSION_LOW_INT",
	113: "MARKET_DATA_UPDATE_SESSION_VOLUME",
	124: "MARKET_DATA_UPDATE_OPEN_INTEREST",
	119: "MARKET_DATA_UPDATE_SESSION_SETTLEMENT",
	131: "MARKET_DATA_UPDATE_SESSION_SETTLEMENT_INT",
	135: "MARKET_DATA_UPDATE_SESSION_NUM_TRADES",
	136: "MARKET_DATA_UPDATE_TRADING_SESSION_DATE",
	102: "MARKET_DEPTH_REQUEST",
	121: "MARKET_DEPTH_REJECT",
	122: "MARKET_DEPTH_SNAPSHOT_LEVEL",
	132: "MARKET_DEPTH_SNAPSHOT_LEVEL_INT",
	106: "MARKET_DEPTH_UPDATE_LEVEL",
	118: "MARKET_DEPTH_UPDATE_LEVEL_COMPACT",
	133: "MARKET_DEPTH_UPDATE_LEVEL_INT",
	123: "MARKET_DEPTH_FULL_UPDATE_10",
	105: "MARKET_DEPTH_FULL_UPDATE_20",
	100: "MARKET_DATA_FEED_STATUS",
	116: "MARKET_DATA_FEED_SYMBOL_STATUS",
	208: "SUBMIT_NEW_SINGLE_ORDER",
	206: "SUBMIT_NEW_SINGLE_ORDER_INT",
	201: "SUBMIT_NEW_OCO_ORDER",
	207: "SUBMIT_NEW_OCO_ORDER_INT",
	203: "CANCEL_ORDER",
	204: "CANCEL_REPLACE_ORDER",
	205: "CANCEL_REPLACE_ORDER_INT",
	300: "OPEN_ORDERS_REQUEST",
	302: "OPEN_ORDERS_REJECT",
	301: "ORDER_UPDATE",
	303: "HISTORICAL_ORDER_FILLS_REQUEST",
	304: "HISTORICAL_ORDER_FILL_RESPONSE",
	308: "HISTORICAL_ORDER_FILLS_REJECT",
	305: "CURRENT_POSITIONS_REQUEST",
	307: "CURRENT_POSITIONS_REJECT",
	306: "POSITION_UPDATE",
	400: "TRADE_ACCOUNTS_REQUEST",
	401: "TRADE_ACCOUNT_RESPONSE",
	500: "EXCHANGE_LIST_REQUEST",
	501: "EXCHANGE_LIST_RESPONSE",
	502: "SYMBOLS_FOR_EXCHANGE_REQUEST",
	503: "UNDERLYING_SYMBOLS_FOR_EXCHANGE_REQUEST",
	504: "SYMBOLS_FOR_UNDERLYING_REQUEST",
	506: "SECURITY_DEFINITION_FOR_SYMBOL_REQUEST",
	507: "SECURITY_DEFINITION_RESPONSE",
	508: "SYMBOL_SEARCH_REQUEST",
	509: "SECURITY_DEFINITION_REJECT",
	601: "ACCOUNT_BALANCE_REQUEST",
	602: "ACCOUNT_BALANCE_REJECT",
	600: "ACCOUNT_BALANCE_UPDATE",
	700: "USER_MESSAGE",
	701: "GENERAL_LOG_MESSAGE",
	800: "HISTORICAL_PRICE_DATA_REQUEST",
	801: "HISTORICAL_PRICE_DATA_RESPONSE_HEADER",
	802: "HISTORICAL_PRICE_DATA_REJECT",
	803: "HISTORICAL_PRICE_DATA_RECORD_RESPONSE",
	804: "HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE",
	805: "HISTORICAL_PRICE_DATA_RECORD_RESPONSE_INT",
	806: "HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE_INT",
}

var DTCMessageType_value = map[string]int32{
	"MESSAGE_TYPE_UNSET":                             0,
	"LOGON_REQUEST":                                  1,
	"LOGON_RESPONSE":                                 2,
	"HEARTBEAT":                                      3,
	"LOGOFF":                                         5,
	"ENCODING_REQUEST":                               6,
	"ENCODING_RESPONSE":                              7,
	"MARKET_DATA_REQUEST":                            101,
	"MARKET_DATA_REJECT":                             103,
	"MARKET_DATA_SNAPSHOT":                           104,
	"MARKET_DATA_SNAPSHOT_INT":                       125,
	"MARKET_DATA_UPDATE_TRADE":                       107,
	"MARKET_DATA_UPDATE_TRADE_COMPACT":               112,
	"MARKET_DATA_UPDATE_TRADE_INT":                   126,
	"MARKET_DATA_UPDATE_LAST_TRADE_SNAPSHOT":         134,
	"MARKET_DATA_UPDATE_BID_ASK":                     108,
	"MARKET_DATA_UPDATE_BID_ASK_COMPACT":             117,
	"MARKET_DATA_UPDATE_BID_ASK_INT":                 127,
	"MARKET_DATA_UPDATE_SESSION_OPEN":                120,
	"MARKET_DATA_UPDATE_SESSION_OPEN_INT":            128,
	"MARKET_DATA_UPDATE_SESSION_HIGH":                114,
	"MARKET_DATA_UPDATE_SESSION_HIGH_INT":            129,
	"MARKET_DATA_UPDATE_SESSION_LOW":                 115,
	"MARKET_DATA_UPDATE_SESSION_LOW_INT":             130,
	"MARKET_DATA_UPDATE_SESSION_VOLUME":              113,
	"MARKET_DATA_UPDATE_OPEN_INTEREST":               124,
	"MARKET_DATA_UPDATE_SESSION_SETTLEMENT":          119,
	"MARKET_DATA_UPDATE_SESSION_SETTLEMENT_INT":      131,
	"MARKET_DATA_UPDATE_SESSION_NUM_TRADES":          135,
	"MARKET_DATA_UPDATE_TRADING_SESSION_DATE":        136,
	"MARKET_DEPTH_REQUEST":                           102,
	"MARKET_DEPTH_REJECT":                            121,
	"MARKET_DEPTH_SNAPSHOT_LEVEL":                    122,
	"MARKET_DEPTH_SNAPSHOT_LEVEL_INT":                132,
	"MARKET_DEPTH_UPDATE_LEVEL":                      106,
	"MARKET_DEPTH_UPDATE_LEVEL_COMPACT":              118,
	"MARKET_DEPTH_UPDATE_LEVEL_INT":                  133,
	"MARKET_DEPTH_FULL_UPDATE_10":                    123,
	"MARKET_DEPTH_FULL_UPDATE_20":                    105,
	"MARKET_DATA_FEED_STATUS":                        100,
	"MARKET_DATA_FEED_SYMBOL_STATUS":                 116,
	"SUBMIT_NEW_SINGLE_ORDER":                        208,
	"SUBMIT_NEW_SINGLE_ORDER_INT":                    206,
	"SUBMIT_NEW_OCO_ORDER":                           201,
	"SUBMIT_NEW_OCO_ORDER_INT":                       207,
	"CANCEL_ORDER":                                   203,
	"CANCEL_REPLACE_ORDER":                           204,
	"CANCEL_REPLACE_ORDER_INT":                       205,
	"OPEN_ORDERS_REQUEST":                            300,
	"OPEN_ORDERS_REJECT":                             302,
	"ORDER_UPDATE":                                   301,
	"HISTORICAL_ORDER_FILLS_REQUEST":                 303,
	"HISTORICAL_ORDER_FILL_RESPONSE":                 304,
	"HISTORICAL_ORDER_FILLS_REJECT":                  308,
	"CURRENT_POSITIONS_REQUEST":                      305,
	"CURRENT_POSITIONS_REJECT":                       307,
	"POSITION_UPDATE":                                306,
	"TRADE_ACCOUNTS_REQUEST":                         400,
	"TRADE_ACCOUNT_RESPONSE":                         401,
	"EXCHANGE_LIST_REQUEST":                          500,
	"EXCHANGE_LIST_RESPONSE":                         501,
	"SYMBOLS_FOR_EXCHANGE_REQUEST":                   502,
	"UNDERLYING_SYMBOLS_FOR_EXCHANGE_REQUEST":        503,
	"SYMBOLS_FOR_UNDERLYING_REQUEST":                 504,
	"SECURITY_DEFINITION_FOR_SYMBOL_REQUEST":         506,
	"SECURITY_DEFINITION_RESPONSE":                   507,
	"SYMBOL_SEARCH_REQUEST":                          508,
	"SECURITY_DEFINITION_REJECT":                     509,
	"ACCOUNT_BALANCE_REQUEST":                        601,
	"ACCOUNT_BALANCE_REJECT":                         602,
	"ACCOUNT_BALANCE_UPDATE":                         600,
	"USER_MESSAGE":                                   700,
	"GENERAL_LOG_MESSAGE":                            701,
	"HISTORICAL_PRICE_DATA_REQUEST":                  800,
	"HISTORICAL_PRICE_DATA_RESPONSE_HEADER":          801,
	"HISTORICAL_PRICE_DATA_REJECT":                   802,
	"HISTORICAL_PRICE_DATA_RECORD_RESPONSE":          803,
	"HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE":     804,
	"HISTORICAL_PRICE_DATA_RECORD_RESPONSE_INT":      805,
	"HISTORICAL_PRICE_DATA_TICK_RECORD_RESPONSE_INT": 806,
}

func (x DTCMessageType) String() string {
	return proto.EnumName(DTCMessageType_name, int32(x))
}

func (DTCMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{1}
}

//============================================================================
type EncodingEnum int32

const (
	EncodingEnum_BINARY_ENCODING                     EncodingEnum = 0
	EncodingEnum_BINARY_WITH_VARIABLE_LENGTH_STRINGS EncodingEnum = 1
	EncodingEnum_JSON_ENCODING                       EncodingEnum = 2
	EncodingEnum_JSON_COMPACT_ENCODING               EncodingEnum = 3
	EncodingEnum_PROTOCOL_BUFFERS                    EncodingEnum = 4
)

var EncodingEnum_name = map[int32]string{
	0: "BINARY_ENCODING",
	1: "BINARY_WITH_VARIABLE_LENGTH_STRINGS",
	2: "JSON_ENCODING",
	3: "JSON_COMPACT_ENCODING",
	4: "PROTOCOL_BUFFERS",
}

var EncodingEnum_value = map[string]int32{
	"BINARY_ENCODING":                     0,
	"BINARY_WITH_VARIABLE_LENGTH_STRINGS": 1,
	"JSON_ENCODING":                       2,
	"JSON_COMPACT_ENCODING":               3,
	"PROTOCOL_BUFFERS":                    4,
}

func (x EncodingEnum) String() string {
	return proto.EnumName(EncodingEnum_name, int32(x))
}

func (EncodingEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{2}
}

//============================================================================
type LogonStatusEnum int32

const (
	LogonStatusEnum_LOGON_STATUS_UNSET          LogonStatusEnum = 0
	LogonStatusEnum_LOGON_SUCCESS               LogonStatusEnum = 1
	LogonStatusEnum_LOGON_ERROR                 LogonStatusEnum = 2
	LogonStatusEnum_LOGON_ERROR_NO_RECONNECT    LogonStatusEnum = 3
	LogonStatusEnum_LOGON_RECONNECT_NEW_ADDRESS LogonStatusEnum = 4
)

var LogonStatusEnum_name = map[int32]string{
	0: "LOGON_STATUS_UNSET",
	1: "LOGON_SUCCESS",
	2: "LOGON_ERROR",
	3: "LOGON_ERROR_NO_RECONNECT",
	4: "LOGON_RECONNECT_NEW_ADDRESS",
}

var LogonStatusEnum_value = map[string]int32{
	"LOGON_STATUS_UNSET":          0,
	"LOGON_SUCCESS":               1,
	"LOGON_ERROR":                 2,
	"LOGON_ERROR_NO_RECONNECT":    3,
	"LOGON_RECONNECT_NEW_ADDRESS": 4,
}

func (x LogonStatusEnum) String() string {
	return proto.EnumName(LogonStatusEnum_name, int32(x))
}

func (LogonStatusEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{3}
}

//============================================================================
type MessageSupportedEnum int32

const (
	MessageSupportedEnum_MESSAGE_UNSUPPORTED MessageSupportedEnum = 0
	MessageSupportedEnum_MESSAGE_SUPPORTED   MessageSupportedEnum = 1
)

var MessageSupportedEnum_name = map[int32]string{
	0: "MESSAGE_UNSUPPORTED",
	1: "MESSAGE_SUPPORTED",
}

var MessageSupportedEnum_value = map[string]int32{
	"MESSAGE_UNSUPPORTED": 0,
	"MESSAGE_SUPPORTED":   1,
}

func (x MessageSupportedEnum) String() string {
	return proto.EnumName(MessageSupportedEnum_name, int32(x))
}

func (MessageSupportedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{4}
}

//============================================================================
type TradeModeEnum int32

const (
	TradeModeEnum_TRADE_MODE_UNSET     TradeModeEnum = 0
	TradeModeEnum_TRADE_MODE_DEMO      TradeModeEnum = 1
	TradeModeEnum_TRADE_MODE_SIMULATED TradeModeEnum = 2
	TradeModeEnum_TRADE_MODE_LIVE      TradeModeEnum = 3
)

var TradeModeEnum_name = map[int32]string{
	0: "TRADE_MODE_UNSET",
	1: "TRADE_MODE_DEMO",
	2: "TRADE_MODE_SIMULATED",
	3: "TRADE_MODE_LIVE",
}

var TradeModeEnum_value = map[string]int32{
	"TRADE_MODE_UNSET":     0,
	"TRADE_MODE_DEMO":      1,
	"TRADE_MODE_SIMULATED": 2,
	"TRADE_MODE_LIVE":      3,
}

func (x TradeModeEnum) String() string {
	return proto.EnumName(TradeModeEnum_name, int32(x))
}

func (TradeModeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{5}
}

//============================================================================
type RequestActionEnum int32

const (
	RequestActionEnum_REQUEST_ACTION_UNSET RequestActionEnum = 0
	RequestActionEnum_SUBSCRIBE            RequestActionEnum = 1
	RequestActionEnum_UNSUBSCRIBE          RequestActionEnum = 2
	RequestActionEnum_SNAPSHOT             RequestActionEnum = 3
)

var RequestActionEnum_name = map[int32]string{
	0: "REQUEST_ACTION_UNSET",
	1: "SUBSCRIBE",
	2: "UNSUBSCRIBE",
	3: "SNAPSHOT",
}

var RequestActionEnum_value = map[string]int32{
	"REQUEST_ACTION_UNSET": 0,
	"SUBSCRIBE":            1,
	"UNSUBSCRIBE":          2,
	"SNAPSHOT":             3,
}

func (x RequestActionEnum) String() string {
	return proto.EnumName(RequestActionEnum_name, int32(x))
}

func (RequestActionEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{6}
}

//==========================================================================
type UnbundledTradeIndicatorEnum int32

const (
	UnbundledTradeIndicatorEnum_UNBUNDLED_TRADE_NONE               UnbundledTradeIndicatorEnum = 0
	UnbundledTradeIndicatorEnum_FIRST_SUB_TRADE_OF_UNBUNDLED_TRADE UnbundledTradeIndicatorEnum = 1
	UnbundledTradeIndicatorEnum_LAST_SUB_TRADE_OF_UNBUNDLED_TRADE  UnbundledTradeIndicatorEnum = 2
)

var UnbundledTradeIndicatorEnum_name = map[int32]string{
	0: "UNBUNDLED_TRADE_NONE",
	1: "FIRST_SUB_TRADE_OF_UNBUNDLED_TRADE",
	2: "LAST_SUB_TRADE_OF_UNBUNDLED_TRADE",
}

var UnbundledTradeIndicatorEnum_value = map[string]int32{
	"UNBUNDLED_TRADE_NONE":               0,
	"FIRST_SUB_TRADE_OF_UNBUNDLED_TRADE": 1,
	"LAST_SUB_TRADE_OF_UNBUNDLED_TRADE":  2,
}

func (x UnbundledTradeIndicatorEnum) String() string {
	return proto.EnumName(UnbundledTradeIndicatorEnum_name, int32(x))
}

func (UnbundledTradeIndicatorEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{7}
}

//============================================================================
type OrderStatusEnum int32

const (
	OrderStatusEnum_ORDER_STATUS_UNSPECIFIED            OrderStatusEnum = 0
	OrderStatusEnum_ORDER_STATUS_ORDER_SENT             OrderStatusEnum = 1
	OrderStatusEnum_ORDER_STATUS_PENDING_OPEN           OrderStatusEnum = 2
	OrderStatusEnum_ORDER_STATUS_PENDING_CHILD          OrderStatusEnum = 3
	OrderStatusEnum_ORDER_STATUS_OPEN                   OrderStatusEnum = 4
	OrderStatusEnum_ORDER_STATUS_PENDING_CANCEL_REPLACE OrderStatusEnum = 5
	OrderStatusEnum_ORDER_STATUS_PENDING_CANCEL         OrderStatusEnum = 6
	OrderStatusEnum_ORDER_STATUS_FILLED                 OrderStatusEnum = 7
	OrderStatusEnum_ORDER_STATUS_CANCELED               OrderStatusEnum = 8
	OrderStatusEnum_ORDER_STATUS_REJECTED               OrderStatusEnum = 9
	OrderStatusEnum_ORDER_STATUS_PARTIALLY_FILLED       OrderStatusEnum = 10
)

var OrderStatusEnum_name = map[int32]string{
	0:  "ORDER_STATUS_UNSPECIFIED",
	1:  "ORDER_STATUS_ORDER_SENT",
	2:  "ORDER_STATUS_PENDING_OPEN",
	3:  "ORDER_STATUS_PENDING_CHILD",
	4:  "ORDER_STATUS_OPEN",
	5:  "ORDER_STATUS_PENDING_CANCEL_REPLACE",
	6:  "ORDER_STATUS_PENDING_CANCEL",
	7:  "ORDER_STATUS_FILLED",
	8:  "ORDER_STATUS_CANCELED",
	9:  "ORDER_STATUS_REJECTED",
	10: "ORDER_STATUS_PARTIALLY_FILLED",
}

var OrderStatusEnum_value = map[string]int32{
	"ORDER_STATUS_UNSPECIFIED":            0,
	"ORDER_STATUS_ORDER_SENT":             1,
	"ORDER_STATUS_PENDING_OPEN":           2,
	"ORDER_STATUS_PENDING_CHILD":          3,
	"ORDER_STATUS_OPEN":                   4,
	"ORDER_STATUS_PENDING_CANCEL_REPLACE": 5,
	"ORDER_STATUS_PENDING_CANCEL":         6,
	"ORDER_STATUS_FILLED":                 7,
	"ORDER_STATUS_CANCELED":               8,
	"ORDER_STATUS_REJECTED":               9,
	"ORDER_STATUS_PARTIALLY_FILLED":       10,
}

func (x OrderStatusEnum) String() string {
	return proto.EnumName(OrderStatusEnum_name, int32(x))
}

func (OrderStatusEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{8}
}

//============================================================================
type OrderUpdateReasonEnum int32

const (
	OrderUpdateReasonEnum_ORDER_UPDATE_REASON_UNSET     OrderUpdateReasonEnum = 0
	OrderUpdateReasonEnum_OPEN_ORDERS_REQUEST_RESPONSE  OrderUpdateReasonEnum = 1
	OrderUpdateReasonEnum_NEW_ORDER_ACCEPTED            OrderUpdateReasonEnum = 2
	OrderUpdateReasonEnum_GENERAL_ORDER_UPDATE          OrderUpdateReasonEnum = 3
	OrderUpdateReasonEnum_ORDER_FILLED                  OrderUpdateReasonEnum = 4
	OrderUpdateReasonEnum_ORDER_FILLED_PARTIALLY        OrderUpdateReasonEnum = 5
	OrderUpdateReasonEnum_ORDER_CANCELED                OrderUpdateReasonEnum = 6
	OrderUpdateReasonEnum_ORDER_CANCEL_REPLACE_COMPLETE OrderUpdateReasonEnum = 7
	OrderUpdateReasonEnum_NEW_ORDER_REJECTED            OrderUpdateReasonEnum = 8
	OrderUpdateReasonEnum_ORDER_CANCEL_REJECTED         OrderUpdateReasonEnum = 9
	OrderUpdateReasonEnum_ORDER_CANCEL_REPLACE_REJECTED OrderUpdateReasonEnum = 10
)

var OrderUpdateReasonEnum_name = map[int32]string{
	0:  "ORDER_UPDATE_REASON_UNSET",
	1:  "OPEN_ORDERS_REQUEST_RESPONSE",
	2:  "NEW_ORDER_ACCEPTED",
	3:  "GENERAL_ORDER_UPDATE",
	4:  "ORDER_FILLED",
	5:  "ORDER_FILLED_PARTIALLY",
	6:  "ORDER_CANCELED",
	7:  "ORDER_CANCEL_REPLACE_COMPLETE",
	8:  "NEW_ORDER_REJECTED",
	9:  "ORDER_CANCEL_REJECTED",
	10: "ORDER_CANCEL_REPLACE_REJECTED",
}

var OrderUpdateReasonEnum_value = map[string]int32{
	"ORDER_UPDATE_REASON_UNSET":     0,
	"OPEN_ORDERS_REQUEST_RESPONSE":  1,
	"NEW_ORDER_ACCEPTED":            2,
	"GENERAL_ORDER_UPDATE":          3,
	"ORDER_FILLED":                  4,
	"ORDER_FILLED_PARTIALLY":        5,
	"ORDER_CANCELED":                6,
	"ORDER_CANCEL_REPLACE_COMPLETE": 7,
	"NEW_ORDER_REJECTED":            8,
	"ORDER_CANCEL_REJECTED":         9,
	"ORDER_CANCEL_REPLACE_REJECTED": 10,
}

func (x OrderUpdateReasonEnum) String() string {
	return proto.EnumName(OrderUpdateReasonEnum_name, int32(x))
}

func (OrderUpdateReasonEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{9}
}

//============================================================================
type AtBidOrAskEnum int32

const (
	AtBidOrAskEnum_BID_ASK_UNSET AtBidOrAskEnum = 0
	AtBidOrAskEnum_AT_BID        AtBidOrAskEnum = 1
	AtBidOrAskEnum_AT_ASK        AtBidOrAskEnum = 2
)

var AtBidOrAskEnum_name = map[int32]string{
	0: "BID_ASK_UNSET",
	1: "AT_BID",
	2: "AT_ASK",
}

var AtBidOrAskEnum_value = map[string]int32{
	"BID_ASK_UNSET": 0,
	"AT_BID":        1,
	"AT_ASK":        2,
}

func (x AtBidOrAskEnum) String() string {
	return proto.EnumName(AtBidOrAskEnum_name, int32(x))
}

func (AtBidOrAskEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{10}
}

//============================================================================
type AtBidOrAskEnum8 int32

const (
	AtBidOrAskEnum8_BID_ASK_UNSET_8 AtBidOrAskEnum8 = 0
	AtBidOrAskEnum8_AT_BID_8        AtBidOrAskEnum8 = 1
	AtBidOrAskEnum8_AT_ASK_8        AtBidOrAskEnum8 = 2
)

var AtBidOrAskEnum8_name = map[int32]string{
	0: "BID_ASK_UNSET_8",
	1: "AT_BID_8",
	2: "AT_ASK_8",
}

var AtBidOrAskEnum8_value = map[string]int32{
	"BID_ASK_UNSET_8": 0,
	"AT_BID_8":        1,
	"AT_ASK_8":        2,
}

func (x AtBidOrAskEnum8) String() string {
	return proto.EnumName(AtBidOrAskEnum8_name, int32(x))
}

func (AtBidOrAskEnum8) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{11}
}

//============================================================================
type MarketDepthUpdateTypeEnum int32

const (
	MarketDepthUpdateTypeEnum_DEPTH_UNSET                      MarketDepthUpdateTypeEnum = 0
	MarketDepthUpdateTypeEnum_MARKET_DEPTH_INSERT_UPDATE_LEVEL MarketDepthUpdateTypeEnum = 1
	MarketDepthUpdateTypeEnum_MARKET_DEPTH_DELETE_LEVEL        MarketDepthUpdateTypeEnum = 2
)

var MarketDepthUpdateTypeEnum_name = map[int32]string{
	0: "DEPTH_UNSET",
	1: "MARKET_DEPTH_INSERT_UPDATE_LEVEL",
	2: "MARKET_DEPTH_DELETE_LEVEL",
}

var MarketDepthUpdateTypeEnum_value = map[string]int32{
	"DEPTH_UNSET":                      0,
	"MARKET_DEPTH_INSERT_UPDATE_LEVEL": 1,
	"MARKET_DEPTH_DELETE_LEVEL":        2,
}

func (x MarketDepthUpdateTypeEnum) String() string {
	return proto.EnumName(MarketDepthUpdateTypeEnum_name, int32(x))
}

func (MarketDepthUpdateTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{12}
}

//============================================================================
type OrderTypeEnum int32

const (
	OrderTypeEnum_ORDER_TYPE_UNSET             OrderTypeEnum = 0
	OrderTypeEnum_ORDER_TYPE_MARKET            OrderTypeEnum = 1
	OrderTypeEnum_ORDER_TYPE_LIMIT             OrderTypeEnum = 2
	OrderTypeEnum_ORDER_TYPE_STOP              OrderTypeEnum = 3
	OrderTypeEnum_ORDER_TYPE_STOP_LIMIT        OrderTypeEnum = 4
	OrderTypeEnum_ORDER_TYPE_MARKET_IF_TOUCHED OrderTypeEnum = 5
	OrderTypeEnum_ORDER_TYPE_LIMIT_IF_TOUCHED  OrderTypeEnum = 6
)

var OrderTypeEnum_name = map[int32]string{
	0: "ORDER_TYPE_UNSET",
	1: "ORDER_TYPE_MARKET",
	2: "ORDER_TYPE_LIMIT",
	3: "ORDER_TYPE_STOP",
	4: "ORDER_TYPE_STOP_LIMIT",
	5: "ORDER_TYPE_MARKET_IF_TOUCHED",
	6: "ORDER_TYPE_LIMIT_IF_TOUCHED",
}

var OrderTypeEnum_value = map[string]int32{
	"ORDER_TYPE_UNSET":             0,
	"ORDER_TYPE_MARKET":            1,
	"ORDER_TYPE_LIMIT":             2,
	"ORDER_TYPE_STOP":              3,
	"ORDER_TYPE_STOP_LIMIT":        4,
	"ORDER_TYPE_MARKET_IF_TOUCHED": 5,
	"ORDER_TYPE_LIMIT_IF_TOUCHED":  6,
}

func (x OrderTypeEnum) String() string {
	return proto.EnumName(OrderTypeEnum_name, int32(x))
}

func (OrderTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{13}
}

//============================================================================
type TimeInForceEnum int32

const (
	TimeInForceEnum_TIF_UNSET               TimeInForceEnum = 0
	TimeInForceEnum_TIF_DAY                 TimeInForceEnum = 1
	TimeInForceEnum_TIF_GOOD_TILL_CANCELED  TimeInForceEnum = 2
	TimeInForceEnum_TIF_GOOD_TILL_DATE_TIME TimeInForceEnum = 3
	TimeInForceEnum_TIF_IMMEDIATE_OR_CANCEL TimeInForceEnum = 4
	TimeInForceEnum_TIF_ALL_OR_NONE         TimeInForceEnum = 5
	TimeInForceEnum_TIF_FILL_OR_KILL        TimeInForceEnum = 6
)

var TimeInForceEnum_name = map[int32]string{
	0: "TIF_UNSET",
	1: "TIF_DAY",
	2: "TIF_GOOD_TILL_CANCELED",
	3: "TIF_GOOD_TILL_DATE_TIME",
	4: "TIF_IMMEDIATE_OR_CANCEL",
	5: "TIF_ALL_OR_NONE",
	6: "TIF_FILL_OR_KILL",
}

var TimeInForceEnum_value = map[string]int32{
	"TIF_UNSET":               0,
	"TIF_DAY":                 1,
	"TIF_GOOD_TILL_CANCELED":  2,
	"TIF_GOOD_TILL_DATE_TIME": 3,
	"TIF_IMMEDIATE_OR_CANCEL": 4,
	"TIF_ALL_OR_NONE":         5,
	"TIF_FILL_OR_KILL":        6,
}

func (x TimeInForceEnum) String() string {
	return proto.EnumName(TimeInForceEnum_name, int32(x))
}

func (TimeInForceEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{14}
}

//============================================================================
type BuySellEnum int32

const (
	BuySellEnum_BUY_SELL_UNSET BuySellEnum = 0
	BuySellEnum_BUY            BuySellEnum = 1
	BuySellEnum_SELL           BuySellEnum = 2
)

var BuySellEnum_name = map[int32]string{
	0: "BUY_SELL_UNSET",
	1: "BUY",
	2: "SELL",
}

var BuySellEnum_value = map[string]int32{
	"BUY_SELL_UNSET": 0,
	"BUY":            1,
	"SELL":           2,
}

func (x BuySellEnum) String() string {
	return proto.EnumName(BuySellEnum_name, int32(x))
}

func (BuySellEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{15}
}

//============================================================================
type OpenCloseTradeEnum int32

const (
	OpenCloseTradeEnum_TRADE_UNSET OpenCloseTradeEnum = 0
	OpenCloseTradeEnum_TRADE_OPEN  OpenCloseTradeEnum = 1
	OpenCloseTradeEnum_TRADE_CLOSE OpenCloseTradeEnum = 2
)

var OpenCloseTradeEnum_name = map[int32]string{
	0: "TRADE_UNSET",
	1: "TRADE_OPEN",
	2: "TRADE_CLOSE",
}

var OpenCloseTradeEnum_value = map[string]int32{
	"TRADE_UNSET": 0,
	"TRADE_OPEN":  1,
	"TRADE_CLOSE": 2,
}

func (x OpenCloseTradeEnum) String() string {
	return proto.EnumName(OpenCloseTradeEnum_name, int32(x))
}

func (OpenCloseTradeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{16}
}

//============================================================================
type PartialFillHandlingEnum int32

const (
	PartialFillHandlingEnum_PARTIAL_FILL_UNSET                     PartialFillHandlingEnum = 0
	PartialFillHandlingEnum_PARTIAL_FILL_HANDLING_REDUCE_QUANTITY  PartialFillHandlingEnum = 1
	PartialFillHandlingEnum_PARTIAL_FILL_HANDLING_IMMEDIATE_CANCEL PartialFillHandlingEnum = 2
)

var PartialFillHandlingEnum_name = map[int32]string{
	0: "PARTIAL_FILL_UNSET",
	1: "PARTIAL_FILL_HANDLING_REDUCE_QUANTITY",
	2: "PARTIAL_FILL_HANDLING_IMMEDIATE_CANCEL",
}

var PartialFillHandlingEnum_value = map[string]int32{
	"PARTIAL_FILL_UNSET":                     0,
	"PARTIAL_FILL_HANDLING_REDUCE_QUANTITY":  1,
	"PARTIAL_FILL_HANDLING_IMMEDIATE_CANCEL": 2,
}

func (x PartialFillHandlingEnum) String() string {
	return proto.EnumName(PartialFillHandlingEnum_name, int32(x))
}

func (PartialFillHandlingEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{17}
}

//============================================================================
type MarketDataFeedStatusEnum int32

const (
	MarketDataFeedStatusEnum_MARKET_DATA_FEED_STATUS_UNSET MarketDataFeedStatusEnum = 0
	MarketDataFeedStatusEnum_MARKET_DATA_FEED_UNAVAILABLE  MarketDataFeedStatusEnum = 1
	MarketDataFeedStatusEnum_MARKET_DATA_FEED_AVAILABLE    MarketDataFeedStatusEnum = 2
)

var MarketDataFeedStatusEnum_name = map[int32]string{
	0: "MARKET_DATA_FEED_STATUS_UNSET",
	1: "MARKET_DATA_FEED_UNAVAILABLE",
	2: "MARKET_DATA_FEED_AVAILABLE",
}

var MarketDataFeedStatusEnum_value = map[string]int32{
	"MARKET_DATA_FEED_STATUS_UNSET": 0,
	"MARKET_DATA_FEED_UNAVAILABLE":  1,
	"MARKET_DATA_FEED_AVAILABLE":    2,
}

func (x MarketDataFeedStatusEnum) String() string {
	return proto.EnumName(MarketDataFeedStatusEnum_name, int32(x))
}

func (MarketDataFeedStatusEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{18}
}

//============================================================================
type PriceDisplayFormatEnum int32

const (
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_0               PriceDisplayFormatEnum = 0
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_1               PriceDisplayFormatEnum = 1
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_2               PriceDisplayFormatEnum = 2
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_3               PriceDisplayFormatEnum = 3
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_4               PriceDisplayFormatEnum = 4
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_5               PriceDisplayFormatEnum = 5
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_6               PriceDisplayFormatEnum = 6
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_7               PriceDisplayFormatEnum = 7
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_8               PriceDisplayFormatEnum = 8
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_9               PriceDisplayFormatEnum = 9
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_256         PriceDisplayFormatEnum = 356
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_128         PriceDisplayFormatEnum = 228
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_64          PriceDisplayFormatEnum = 164
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_32_QUARTERS PriceDisplayFormatEnum = 136
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_32_HALVES   PriceDisplayFormatEnum = 134
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_32          PriceDisplayFormatEnum = 132
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_16          PriceDisplayFormatEnum = 116
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_8           PriceDisplayFormatEnum = 108
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_4           PriceDisplayFormatEnum = 104
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DENOMINATOR_2           PriceDisplayFormatEnum = 102
	PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_UNSET                   PriceDisplayFormatEnum = -1
)

var PriceDisplayFormatEnum_name = map[int32]string{
	0:   "PRICE_DISPLAY_FORMAT_DECIMAL_0",
	1:   "PRICE_DISPLAY_FORMAT_DECIMAL_1",
	2:   "PRICE_DISPLAY_FORMAT_DECIMAL_2",
	3:   "PRICE_DISPLAY_FORMAT_DECIMAL_3",
	4:   "PRICE_DISPLAY_FORMAT_DECIMAL_4",
	5:   "PRICE_DISPLAY_FORMAT_DECIMAL_5",
	6:   "PRICE_DISPLAY_FORMAT_DECIMAL_6",
	7:   "PRICE_DISPLAY_FORMAT_DECIMAL_7",
	8:   "PRICE_DISPLAY_FORMAT_DECIMAL_8",
	9:   "PRICE_DISPLAY_FORMAT_DECIMAL_9",
	356: "PRICE_DISPLAY_FORMAT_DENOMINATOR_256",
	228: "PRICE_DISPLAY_FORMAT_DENOMINATOR_128",
	164: "PRICE_DISPLAY_FORMAT_DENOMINATOR_64",
	136: "PRICE_DISPLAY_FORMAT_DENOMINATOR_32_QUARTERS",
	134: "PRICE_DISPLAY_FORMAT_DENOMINATOR_32_HALVES",
	132: "PRICE_DISPLAY_FORMAT_DENOMINATOR_32",
	116: "PRICE_DISPLAY_FORMAT_DENOMINATOR_16",
	108: "PRICE_DISPLAY_FORMAT_DENOMINATOR_8",
	104: "PRICE_DISPLAY_FORMAT_DENOMINATOR_4",
	102: "PRICE_DISPLAY_FORMAT_DENOMINATOR_2",
	-1:  "PRICE_DISPLAY_FORMAT_UNSET",
}

var PriceDisplayFormatEnum_value = map[string]int32{
	"PRICE_DISPLAY_FORMAT_DECIMAL_0":               0,
	"PRICE_DISPLAY_FORMAT_DECIMAL_1":               1,
	"PRICE_DISPLAY_FORMAT_DECIMAL_2":               2,
	"PRICE_DISPLAY_FORMAT_DECIMAL_3":               3,
	"PRICE_DISPLAY_FORMAT_DECIMAL_4":               4,
	"PRICE_DISPLAY_FORMAT_DECIMAL_5":               5,
	"PRICE_DISPLAY_FORMAT_DECIMAL_6":               6,
	"PRICE_DISPLAY_FORMAT_DECIMAL_7":               7,
	"PRICE_DISPLAY_FORMAT_DECIMAL_8":               8,
	"PRICE_DISPLAY_FORMAT_DECIMAL_9":               9,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_256":         356,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_128":         228,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_64":          164,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_32_QUARTERS": 136,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_32_HALVES":   134,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_32":          132,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_16":          116,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_8":           108,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_4":           104,
	"PRICE_DISPLAY_FORMAT_DENOMINATOR_2":           102,
	"PRICE_DISPLAY_FORMAT_UNSET":                   -1,
}

func (x PriceDisplayFormatEnum) String() string {
	return proto.EnumName(PriceDisplayFormatEnum_name, int32(x))
}

func (PriceDisplayFormatEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{19}
}

//============================================================================
type SecurityTypeEnum int32

const (
	SecurityTypeEnum_SECURITY_TYPE_UNSET            SecurityTypeEnum = 0
	SecurityTypeEnum_SECURITY_TYPE_FUTURE           SecurityTypeEnum = 1
	SecurityTypeEnum_SECURITY_TYPE_STOCK            SecurityTypeEnum = 2
	SecurityTypeEnum_SECURITY_TYPE_FOREX            SecurityTypeEnum = 3
	SecurityTypeEnum_SECURITY_TYPE_INDEX            SecurityTypeEnum = 4
	SecurityTypeEnum_SECURITY_TYPE_FUTURES_STRATEGY SecurityTypeEnum = 5
	SecurityTypeEnum_SECURITY_TYPE_FUTURES_OPTION   SecurityTypeEnum = 7
	SecurityTypeEnum_SECURITY_TYPE_STOCK_OPTION     SecurityTypeEnum = 6
	SecurityTypeEnum_SECURITY_TYPE_INDEX_OPTION     SecurityTypeEnum = 8
	SecurityTypeEnum_SECURITY_TYPE_BOND             SecurityTypeEnum = 9
	SecurityTypeEnum_SECURITY_TYPE_MUTUAL_FUND      SecurityTypeEnum = 10
)

var SecurityTypeEnum_name = map[int32]string{
	0:  "SECURITY_TYPE_UNSET",
	1:  "SECURITY_TYPE_FUTURE",
	2:  "SECURITY_TYPE_STOCK",
	3:  "SECURITY_TYPE_FOREX",
	4:  "SECURITY_TYPE_INDEX",
	5:  "SECURITY_TYPE_FUTURES_STRATEGY",
	7:  "SECURITY_TYPE_FUTURES_OPTION",
	6:  "SECURITY_TYPE_STOCK_OPTION",
	8:  "SECURITY_TYPE_INDEX_OPTION",
	9:  "SECURITY_TYPE_BOND",
	10: "SECURITY_TYPE_MUTUAL_FUND",
}

var SecurityTypeEnum_value = map[string]int32{
	"SECURITY_TYPE_UNSET":            0,
	"SECURITY_TYPE_FUTURE":           1,
	"SECURITY_TYPE_STOCK":            2,
	"SECURITY_TYPE_FOREX":            3,
	"SECURITY_TYPE_INDEX":            4,
	"SECURITY_TYPE_FUTURES_STRATEGY": 5,
	"SECURITY_TYPE_FUTURES_OPTION":   7,
	"SECURITY_TYPE_STOCK_OPTION":     6,
	"SECURITY_TYPE_INDEX_OPTION":     8,
	"SECURITY_TYPE_BOND":             9,
	"SECURITY_TYPE_MUTUAL_FUND":      10,
}

func (x SecurityTypeEnum) String() string {
	return proto.EnumName(SecurityTypeEnum_name, int32(x))
}

func (SecurityTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{20}
}

//============================================================================
type PutCallEnum int32

const (
	PutCallEnum_PC_UNSET PutCallEnum = 0
	PutCallEnum_PC_CALL  PutCallEnum = 1
	PutCallEnum_PC_PUT   PutCallEnum = 2
)

var PutCallEnum_name = map[int32]string{
	0: "PC_UNSET",
	1: "PC_CALL",
	2: "PC_PUT",
}

var PutCallEnum_value = map[string]int32{
	"PC_UNSET": 0,
	"PC_CALL":  1,
	"PC_PUT":   2,
}

func (x PutCallEnum) String() string {
	return proto.EnumName(PutCallEnum_name, int32(x))
}

func (PutCallEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{21}
}

//============================================================================
type SearchTypeEnum int32

const (
	SearchTypeEnum_SEARCH_TYPE_UNSET          SearchTypeEnum = 0
	SearchTypeEnum_SEARCH_TYPE_BY_SYMBOL      SearchTypeEnum = 1
	SearchTypeEnum_SEARCH_TYPE_BY_DESCRIPTION SearchTypeEnum = 2
)

var SearchTypeEnum_name = map[int32]string{
	0: "SEARCH_TYPE_UNSET",
	1: "SEARCH_TYPE_BY_SYMBOL",
	2: "SEARCH_TYPE_BY_DESCRIPTION",
}

var SearchTypeEnum_value = map[string]int32{
	"SEARCH_TYPE_UNSET":          0,
	"SEARCH_TYPE_BY_SYMBOL":      1,
	"SEARCH_TYPE_BY_DESCRIPTION": 2,
}

func (x SearchTypeEnum) String() string {
	return proto.EnumName(SearchTypeEnum_name, int32(x))
}

func (SearchTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{22}
}

//============================================================================
type HistoricalDataIntervalEnum int32

const (
	HistoricalDataIntervalEnum_INTERVAL_TICK       HistoricalDataIntervalEnum = 0
	HistoricalDataIntervalEnum_INTERVAL_1_SECOND   HistoricalDataIntervalEnum = 1
	HistoricalDataIntervalEnum_INTERVAL_2_SECONDS  HistoricalDataIntervalEnum = 2
	HistoricalDataIntervalEnum_INTERVAL_4_SECONDS  HistoricalDataIntervalEnum = 4
	HistoricalDataIntervalEnum_INTERVAL_5_SECONDS  HistoricalDataIntervalEnum = 5
	HistoricalDataIntervalEnum_INTERVAL_10_SECONDS HistoricalDataIntervalEnum = 10
	HistoricalDataIntervalEnum_INTERVAL_30_SECONDS HistoricalDataIntervalEnum = 30
	HistoricalDataIntervalEnum_INTERVAL_1_MINUTE   HistoricalDataIntervalEnum = 60
	HistoricalDataIntervalEnum_INTERVAL_1_DAY      HistoricalDataIntervalEnum = 86400
	HistoricalDataIntervalEnum_INTERVAL_1_WEEK     HistoricalDataIntervalEnum = 604800
)

var HistoricalDataIntervalEnum_name = map[int32]string{
	0:      "INTERVAL_TICK",
	1:      "INTERVAL_1_SECOND",
	2:      "INTERVAL_2_SECONDS",
	4:      "INTERVAL_4_SECONDS",
	5:      "INTERVAL_5_SECONDS",
	10:     "INTERVAL_10_SECONDS",
	30:     "INTERVAL_30_SECONDS",
	60:     "INTERVAL_1_MINUTE",
	86400:  "INTERVAL_1_DAY",
	604800: "INTERVAL_1_WEEK",
}

var HistoricalDataIntervalEnum_value = map[string]int32{
	"INTERVAL_TICK":       0,
	"INTERVAL_1_SECOND":   1,
	"INTERVAL_2_SECONDS":  2,
	"INTERVAL_4_SECONDS":  4,
	"INTERVAL_5_SECONDS":  5,
	"INTERVAL_10_SECONDS": 10,
	"INTERVAL_30_SECONDS": 30,
	"INTERVAL_1_MINUTE":   60,
	"INTERVAL_1_DAY":      86400,
	"INTERVAL_1_WEEK":     604800,
}

func (x HistoricalDataIntervalEnum) String() string {
	return proto.EnumName(HistoricalDataIntervalEnum_name, int32(x))
}

func (HistoricalDataIntervalEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{23}
}

//============================================================================
type HistoricalPriceDataRejectReasonCodeEnum int32

const (
	HistoricalPriceDataRejectReasonCodeEnum_HPDR_UNSET                                         HistoricalPriceDataRejectReasonCodeEnum = 0
	HistoricalPriceDataRejectReasonCodeEnum_HPDR_UNABLE_TO_SERVE_DATA_RETRY_LATER              HistoricalPriceDataRejectReasonCodeEnum = 1
	HistoricalPriceDataRejectReasonCodeEnum_HPDR_UNABLE_TO_SERVE_DATA_DO_NOT_RETRY             HistoricalPriceDataRejectReasonCodeEnum = 2
	HistoricalPriceDataRejectReasonCodeEnum_HPDR_DATA_REQUEST_OUTSIDE_BOUNDS_OF_AVAILABLE_DATA HistoricalPriceDataRejectReasonCodeEnum = 3
	HistoricalPriceDataRejectReasonCodeEnum_HPDR_GENERAL_REJECT_ERROR                          HistoricalPriceDataRejectReasonCodeEnum = 4
)

var HistoricalPriceDataRejectReasonCodeEnum_name = map[int32]string{
	0: "HPDR_UNSET",
	1: "HPDR_UNABLE_TO_SERVE_DATA_RETRY_LATER",
	2: "HPDR_UNABLE_TO_SERVE_DATA_DO_NOT_RETRY",
	3: "HPDR_DATA_REQUEST_OUTSIDE_BOUNDS_OF_AVAILABLE_DATA",
	4: "HPDR_GENERAL_REJECT_ERROR",
}

var HistoricalPriceDataRejectReasonCodeEnum_value = map[string]int32{
	"HPDR_UNSET":                                         0,
	"HPDR_UNABLE_TO_SERVE_DATA_RETRY_LATER":              1,
	"HPDR_UNABLE_TO_SERVE_DATA_DO_NOT_RETRY":             2,
	"HPDR_DATA_REQUEST_OUTSIDE_BOUNDS_OF_AVAILABLE_DATA": 3,
	"HPDR_GENERAL_REJECT_ERROR":                          4,
}

func (x HistoricalPriceDataRejectReasonCodeEnum) String() string {
	return proto.EnumName(HistoricalPriceDataRejectReasonCodeEnum_name, int32(x))
}

func (HistoricalPriceDataRejectReasonCodeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{24}
}

//============================================================================
type EncodingRequest struct {
	ProtocolVersion      int32        `protobuf:"varint,1,opt,name=ProtocolVersion,proto3" json:"ProtocolVersion,omitempty"`
	Encoding             EncodingEnum `protobuf:"varint,2,opt,name=Encoding,proto3,enum=DTC_PB.EncodingEnum" json:"Encoding,omitempty"`
	ProtocolType         string       `protobuf:"bytes,3,opt,name=ProtocolType,proto3" json:"ProtocolType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EncodingRequest) Reset()         { *m = EncodingRequest{} }
func (m *EncodingRequest) String() string { return proto.CompactTextString(m) }
func (*EncodingRequest) ProtoMessage()    {}
func (*EncodingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{0}
}

func (m *EncodingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncodingRequest.Unmarshal(m, b)
}
func (m *EncodingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncodingRequest.Marshal(b, m, deterministic)
}
func (m *EncodingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodingRequest.Merge(m, src)
}
func (m *EncodingRequest) XXX_Size() int {
	return xxx_messageInfo_EncodingRequest.Size(m)
}
func (m *EncodingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EncodingRequest proto.InternalMessageInfo

func (m *EncodingRequest) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *EncodingRequest) GetEncoding() EncodingEnum {
	if m != nil {
		return m.Encoding
	}
	return EncodingEnum_BINARY_ENCODING
}

func (m *EncodingRequest) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

//============================================================================
type EncodingResponse struct {
	ProtocolVersion      int32        `protobuf:"varint,1,opt,name=ProtocolVersion,proto3" json:"ProtocolVersion,omitempty"`
	Encoding             EncodingEnum `protobuf:"varint,2,opt,name=Encoding,proto3,enum=DTC_PB.EncodingEnum" json:"Encoding,omitempty"`
	ProtocolType         string       `protobuf:"bytes,3,opt,name=ProtocolType,proto3" json:"ProtocolType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EncodingResponse) Reset()         { *m = EncodingResponse{} }
func (m *EncodingResponse) String() string { return proto.CompactTextString(m) }
func (*EncodingResponse) ProtoMessage()    {}
func (*EncodingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{1}
}

func (m *EncodingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncodingResponse.Unmarshal(m, b)
}
func (m *EncodingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncodingResponse.Marshal(b, m, deterministic)
}
func (m *EncodingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodingResponse.Merge(m, src)
}
func (m *EncodingResponse) XXX_Size() int {
	return xxx_messageInfo_EncodingResponse.Size(m)
}
func (m *EncodingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EncodingResponse proto.InternalMessageInfo

func (m *EncodingResponse) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *EncodingResponse) GetEncoding() EncodingEnum {
	if m != nil {
		return m.Encoding
	}
	return EncodingEnum_BINARY_ENCODING
}

func (m *EncodingResponse) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

//============================================================================
type LogonRequest struct {
	ProtocolVersion            int32         `protobuf:"varint,1,opt,name=ProtocolVersion,proto3" json:"ProtocolVersion,omitempty"`
	Username                   string        `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Password                   string        `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	GeneralTextData            string        `protobuf:"bytes,4,opt,name=GeneralTextData,proto3" json:"GeneralTextData,omitempty"`
	Integer_1                  int32         `protobuf:"varint,5,opt,name=Integer_1,json=Integer1,proto3" json:"Integer_1,omitempty"`
	Integer_2                  int32         `protobuf:"varint,6,opt,name=Integer_2,json=Integer2,proto3" json:"Integer_2,omitempty"`
	HeartbeatIntervalInSeconds int32         `protobuf:"varint,7,opt,name=HeartbeatIntervalInSeconds,proto3" json:"HeartbeatIntervalInSeconds,omitempty"`
	TradeMode                  TradeModeEnum `protobuf:"varint,8,opt,name=TradeMode,proto3,enum=DTC_PB.TradeModeEnum" json:"TradeMode,omitempty"`
	TradeAccount               string        `protobuf:"bytes,9,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	HardwareIdentifier         string        `protobuf:"bytes,10,opt,name=HardwareIdentifier,proto3" json:"HardwareIdentifier,omitempty"`
	ClientName                 string        `protobuf:"bytes,11,opt,name=ClientName,proto3" json:"ClientName,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}      `json:"-"`
	XXX_unrecognized           []byte        `json:"-"`
	XXX_sizecache              int32         `json:"-"`
}

func (m *LogonRequest) Reset()         { *m = LogonRequest{} }
func (m *LogonRequest) String() string { return proto.CompactTextString(m) }
func (*LogonRequest) ProtoMessage()    {}
func (*LogonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{2}
}

func (m *LogonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogonRequest.Unmarshal(m, b)
}
func (m *LogonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogonRequest.Marshal(b, m, deterministic)
}
func (m *LogonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogonRequest.Merge(m, src)
}
func (m *LogonRequest) XXX_Size() int {
	return xxx_messageInfo_LogonRequest.Size(m)
}
func (m *LogonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogonRequest proto.InternalMessageInfo

func (m *LogonRequest) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *LogonRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LogonRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LogonRequest) GetGeneralTextData() string {
	if m != nil {
		return m.GeneralTextData
	}
	return ""
}

func (m *LogonRequest) GetInteger_1() int32 {
	if m != nil {
		return m.Integer_1
	}
	return 0
}

func (m *LogonRequest) GetInteger_2() int32 {
	if m != nil {
		return m.Integer_2
	}
	return 0
}

func (m *LogonRequest) GetHeartbeatIntervalInSeconds() int32 {
	if m != nil {
		return m.HeartbeatIntervalInSeconds
	}
	return 0
}

func (m *LogonRequest) GetTradeMode() TradeModeEnum {
	if m != nil {
		return m.TradeMode
	}
	return TradeModeEnum_TRADE_MODE_UNSET
}

func (m *LogonRequest) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *LogonRequest) GetHardwareIdentifier() string {
	if m != nil {
		return m.HardwareIdentifier
	}
	return ""
}

func (m *LogonRequest) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

//============================================================================
type LogonResponse struct {
	ProtocolVersion                               int32           `protobuf:"varint,1,opt,name=ProtocolVersion,proto3" json:"ProtocolVersion,omitempty"`
	Result                                        LogonStatusEnum `protobuf:"varint,2,opt,name=Result,proto3,enum=DTC_PB.LogonStatusEnum" json:"Result,omitempty"`
	ResultText                                    string          `protobuf:"bytes,3,opt,name=ResultText,proto3" json:"ResultText,omitempty"`
	ReconnectAddress                              string          `protobuf:"bytes,4,opt,name=ReconnectAddress,proto3" json:"ReconnectAddress,omitempty"`
	Integer_1                                     int32           `protobuf:"varint,5,opt,name=Integer_1,json=Integer1,proto3" json:"Integer_1,omitempty"`
	ServerName                                    string          `protobuf:"bytes,6,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
	MarketDepthUpdatesBestBidAndAsk               uint32          `protobuf:"varint,7,opt,name=MarketDepthUpdatesBestBidAndAsk,proto3" json:"MarketDepthUpdatesBestBidAndAsk,omitempty"`
	TradingIsSupported                            uint32          `protobuf:"varint,8,opt,name=TradingIsSupported,proto3" json:"TradingIsSupported,omitempty"`
	OCOOrdersSupported                            uint32          `protobuf:"varint,9,opt,name=OCOOrdersSupported,proto3" json:"OCOOrdersSupported,omitempty"`
	OrderCancelReplaceSupported                   uint32          `protobuf:"varint,10,opt,name=OrderCancelReplaceSupported,proto3" json:"OrderCancelReplaceSupported,omitempty"`
	SymbolExchangeDelimiter                       string          `protobuf:"bytes,11,opt,name=SymbolExchangeDelimiter,proto3" json:"SymbolExchangeDelimiter,omitempty"`
	SecurityDefinitionsSupported                  uint32          `protobuf:"varint,12,opt,name=SecurityDefinitionsSupported,proto3" json:"SecurityDefinitionsSupported,omitempty"`
	HistoricalPriceDataSupported                  uint32          `protobuf:"varint,13,opt,name=HistoricalPriceDataSupported,proto3" json:"HistoricalPriceDataSupported,omitempty"`
	ResubscribeWhenMarketDataFeedAvailable        uint32          `protobuf:"varint,14,opt,name=ResubscribeWhenMarketDataFeedAvailable,proto3" json:"ResubscribeWhenMarketDataFeedAvailable,omitempty"`
	MarketDepthIsSupported                        uint32          `protobuf:"varint,15,opt,name=MarketDepthIsSupported,proto3" json:"MarketDepthIsSupported,omitempty"`
	OneHistoricalPriceDataRequestPerConnection    uint32          `protobuf:"varint,16,opt,name=OneHistoricalPriceDataRequestPerConnection,proto3" json:"OneHistoricalPriceDataRequestPerConnection,omitempty"`
	BracketOrdersSupported                        uint32          `protobuf:"varint,17,opt,name=BracketOrdersSupported,proto3" json:"BracketOrdersSupported,omitempty"`
	UseIntegerPriceOrderMessages                  uint32          `protobuf:"varint,18,opt,name=UseIntegerPriceOrderMessages,proto3" json:"UseIntegerPriceOrderMessages,omitempty"`
	UsesMultiplePositionsPerSymbolAndTradeAccount uint32          `protobuf:"varint,19,opt,name=UsesMultiplePositionsPerSymbolAndTradeAccount,proto3" json:"UsesMultiplePositionsPerSymbolAndTradeAccount,omitempty"`
	MarketDataSupported                           uint32          `protobuf:"varint,20,opt,name=MarketDataSupported,proto3" json:"MarketDataSupported,omitempty"`
	XXX_NoUnkeyedLiteral                          struct{}        `json:"-"`
	XXX_unrecognized                              []byte          `json:"-"`
	XXX_sizecache                                 int32           `json:"-"`
}

func (m *LogonResponse) Reset()         { *m = LogonResponse{} }
func (m *LogonResponse) String() string { return proto.CompactTextString(m) }
func (*LogonResponse) ProtoMessage()    {}
func (*LogonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{3}
}

func (m *LogonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogonResponse.Unmarshal(m, b)
}
func (m *LogonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogonResponse.Marshal(b, m, deterministic)
}
func (m *LogonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogonResponse.Merge(m, src)
}
func (m *LogonResponse) XXX_Size() int {
	return xxx_messageInfo_LogonResponse.Size(m)
}
func (m *LogonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogonResponse proto.InternalMessageInfo

func (m *LogonResponse) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *LogonResponse) GetResult() LogonStatusEnum {
	if m != nil {
		return m.Result
	}
	return LogonStatusEnum_LOGON_STATUS_UNSET
}

func (m *LogonResponse) GetResultText() string {
	if m != nil {
		return m.ResultText
	}
	return ""
}

func (m *LogonResponse) GetReconnectAddress() string {
	if m != nil {
		return m.ReconnectAddress
	}
	return ""
}

func (m *LogonResponse) GetInteger_1() int32 {
	if m != nil {
		return m.Integer_1
	}
	return 0
}

func (m *LogonResponse) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *LogonResponse) GetMarketDepthUpdatesBestBidAndAsk() uint32 {
	if m != nil {
		return m.MarketDepthUpdatesBestBidAndAsk
	}
	return 0
}

func (m *LogonResponse) GetTradingIsSupported() uint32 {
	if m != nil {
		return m.TradingIsSupported
	}
	return 0
}

func (m *LogonResponse) GetOCOOrdersSupported() uint32 {
	if m != nil {
		return m.OCOOrdersSupported
	}
	return 0
}

func (m *LogonResponse) GetOrderCancelReplaceSupported() uint32 {
	if m != nil {
		return m.OrderCancelReplaceSupported
	}
	return 0
}

func (m *LogonResponse) GetSymbolExchangeDelimiter() string {
	if m != nil {
		return m.SymbolExchangeDelimiter
	}
	return ""
}

func (m *LogonResponse) GetSecurityDefinitionsSupported() uint32 {
	if m != nil {
		return m.SecurityDefinitionsSupported
	}
	return 0
}

func (m *LogonResponse) GetHistoricalPriceDataSupported() uint32 {
	if m != nil {
		return m.HistoricalPriceDataSupported
	}
	return 0
}

func (m *LogonResponse) GetResubscribeWhenMarketDataFeedAvailable() uint32 {
	if m != nil {
		return m.ResubscribeWhenMarketDataFeedAvailable
	}
	return 0
}

func (m *LogonResponse) GetMarketDepthIsSupported() uint32 {
	if m != nil {
		return m.MarketDepthIsSupported
	}
	return 0
}

func (m *LogonResponse) GetOneHistoricalPriceDataRequestPerConnection() uint32 {
	if m != nil {
		return m.OneHistoricalPriceDataRequestPerConnection
	}
	return 0
}

func (m *LogonResponse) GetBracketOrdersSupported() uint32 {
	if m != nil {
		return m.BracketOrdersSupported
	}
	return 0
}

func (m *LogonResponse) GetUseIntegerPriceOrderMessages() uint32 {
	if m != nil {
		return m.UseIntegerPriceOrderMessages
	}
	return 0
}

func (m *LogonResponse) GetUsesMultiplePositionsPerSymbolAndTradeAccount() uint32 {
	if m != nil {
		return m.UsesMultiplePositionsPerSymbolAndTradeAccount
	}
	return 0
}

func (m *LogonResponse) GetMarketDataSupported() uint32 {
	if m != nil {
		return m.MarketDataSupported
	}
	return 0
}

//============================================================================
type Logoff struct {
	Reason               string   `protobuf:"bytes,1,opt,name=Reason,proto3" json:"Reason,omitempty"`
	DoNotReconnect       uint32   `protobuf:"varint,2,opt,name=DoNotReconnect,proto3" json:"DoNotReconnect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Logoff) Reset()         { *m = Logoff{} }
func (m *Logoff) String() string { return proto.CompactTextString(m) }
func (*Logoff) ProtoMessage()    {}
func (*Logoff) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{4}
}

func (m *Logoff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logoff.Unmarshal(m, b)
}
func (m *Logoff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logoff.Marshal(b, m, deterministic)
}
func (m *Logoff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logoff.Merge(m, src)
}
func (m *Logoff) XXX_Size() int {
	return xxx_messageInfo_Logoff.Size(m)
}
func (m *Logoff) XXX_DiscardUnknown() {
	xxx_messageInfo_Logoff.DiscardUnknown(m)
}

var xxx_messageInfo_Logoff proto.InternalMessageInfo

func (m *Logoff) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Logoff) GetDoNotReconnect() uint32 {
	if m != nil {
		return m.DoNotReconnect
	}
	return 0
}

//============================================================================
type Heartbeat struct {
	NumDroppedMessages   uint32   `protobuf:"varint,1,opt,name=NumDroppedMessages,proto3" json:"NumDroppedMessages,omitempty"`
	CurrentDateTime      int64    `protobuf:"fixed64,2,opt,name=CurrentDateTime,proto3" json:"CurrentDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{5}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetNumDroppedMessages() uint32 {
	if m != nil {
		return m.NumDroppedMessages
	}
	return 0
}

func (m *Heartbeat) GetCurrentDateTime() int64 {
	if m != nil {
		return m.CurrentDateTime
	}
	return 0
}

//============================================================================
type MarketDataFeedStatus struct {
	Status               MarketDataFeedStatusEnum `protobuf:"varint,1,opt,name=Status,proto3,enum=DTC_PB.MarketDataFeedStatusEnum" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MarketDataFeedStatus) Reset()         { *m = MarketDataFeedStatus{} }
func (m *MarketDataFeedStatus) String() string { return proto.CompactTextString(m) }
func (*MarketDataFeedStatus) ProtoMessage()    {}
func (*MarketDataFeedStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{6}
}

func (m *MarketDataFeedStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataFeedStatus.Unmarshal(m, b)
}
func (m *MarketDataFeedStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataFeedStatus.Marshal(b, m, deterministic)
}
func (m *MarketDataFeedStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataFeedStatus.Merge(m, src)
}
func (m *MarketDataFeedStatus) XXX_Size() int {
	return xxx_messageInfo_MarketDataFeedStatus.Size(m)
}
func (m *MarketDataFeedStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataFeedStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataFeedStatus proto.InternalMessageInfo

func (m *MarketDataFeedStatus) GetStatus() MarketDataFeedStatusEnum {
	if m != nil {
		return m.Status
	}
	return MarketDataFeedStatusEnum_MARKET_DATA_FEED_STATUS_UNSET
}

//============================================================================
type MarketDataFeedSymbolStatus struct {
	SymbolID             uint32                   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Status               MarketDataFeedStatusEnum `protobuf:"varint,2,opt,name=Status,proto3,enum=DTC_PB.MarketDataFeedStatusEnum" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MarketDataFeedSymbolStatus) Reset()         { *m = MarketDataFeedSymbolStatus{} }
func (m *MarketDataFeedSymbolStatus) String() string { return proto.CompactTextString(m) }
func (*MarketDataFeedSymbolStatus) ProtoMessage()    {}
func (*MarketDataFeedSymbolStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{7}
}

func (m *MarketDataFeedSymbolStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataFeedSymbolStatus.Unmarshal(m, b)
}
func (m *MarketDataFeedSymbolStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataFeedSymbolStatus.Marshal(b, m, deterministic)
}
func (m *MarketDataFeedSymbolStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataFeedSymbolStatus.Merge(m, src)
}
func (m *MarketDataFeedSymbolStatus) XXX_Size() int {
	return xxx_messageInfo_MarketDataFeedSymbolStatus.Size(m)
}
func (m *MarketDataFeedSymbolStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataFeedSymbolStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataFeedSymbolStatus proto.InternalMessageInfo

func (m *MarketDataFeedSymbolStatus) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataFeedSymbolStatus) GetStatus() MarketDataFeedStatusEnum {
	if m != nil {
		return m.Status
	}
	return MarketDataFeedStatusEnum_MARKET_DATA_FEED_STATUS_UNSET
}

//============================================================================
type MarketDataRequest struct {
	RequestAction        RequestActionEnum `protobuf:"varint,1,opt,name=RequestAction,proto3,enum=DTC_PB.RequestActionEnum" json:"RequestAction,omitempty"`
	SymbolID             uint32            `protobuf:"varint,2,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Symbol               string            `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string            `protobuf:"bytes,4,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MarketDataRequest) Reset()         { *m = MarketDataRequest{} }
func (m *MarketDataRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDataRequest) ProtoMessage()    {}
func (*MarketDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{8}
}

func (m *MarketDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataRequest.Unmarshal(m, b)
}
func (m *MarketDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataRequest.Marshal(b, m, deterministic)
}
func (m *MarketDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataRequest.Merge(m, src)
}
func (m *MarketDataRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDataRequest.Size(m)
}
func (m *MarketDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataRequest proto.InternalMessageInfo

func (m *MarketDataRequest) GetRequestAction() RequestActionEnum {
	if m != nil {
		return m.RequestAction
	}
	return RequestActionEnum_REQUEST_ACTION_UNSET
}

func (m *MarketDataRequest) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MarketDataRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

//============================================================================
type MarketDepthRequest struct {
	RequestAction        RequestActionEnum `protobuf:"varint,1,opt,name=RequestAction,proto3,enum=DTC_PB.RequestActionEnum" json:"RequestAction,omitempty"`
	SymbolID             uint32            `protobuf:"varint,2,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Symbol               string            `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string            `protobuf:"bytes,4,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	NumLevels            int32             `protobuf:"varint,5,opt,name=NumLevels,proto3" json:"NumLevels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MarketDepthRequest) Reset()         { *m = MarketDepthRequest{} }
func (m *MarketDepthRequest) String() string { return proto.CompactTextString(m) }
func (*MarketDepthRequest) ProtoMessage()    {}
func (*MarketDepthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{9}
}

func (m *MarketDepthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthRequest.Unmarshal(m, b)
}
func (m *MarketDepthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthRequest.Marshal(b, m, deterministic)
}
func (m *MarketDepthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthRequest.Merge(m, src)
}
func (m *MarketDepthRequest) XXX_Size() int {
	return xxx_messageInfo_MarketDepthRequest.Size(m)
}
func (m *MarketDepthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthRequest proto.InternalMessageInfo

func (m *MarketDepthRequest) GetRequestAction() RequestActionEnum {
	if m != nil {
		return m.RequestAction
	}
	return RequestActionEnum_REQUEST_ACTION_UNSET
}

func (m *MarketDepthRequest) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MarketDepthRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *MarketDepthRequest) GetNumLevels() int32 {
	if m != nil {
		return m.NumLevels
	}
	return 0
}

//============================================================================
type MarketDataReject struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataReject) Reset()         { *m = MarketDataReject{} }
func (m *MarketDataReject) String() string { return proto.CompactTextString(m) }
func (*MarketDataReject) ProtoMessage()    {}
func (*MarketDataReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{10}
}

func (m *MarketDataReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataReject.Unmarshal(m, b)
}
func (m *MarketDataReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataReject.Marshal(b, m, deterministic)
}
func (m *MarketDataReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataReject.Merge(m, src)
}
func (m *MarketDataReject) XXX_Size() int {
	return xxx_messageInfo_MarketDataReject.Size(m)
}
func (m *MarketDataReject) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataReject.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataReject proto.InternalMessageInfo

func (m *MarketDataReject) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type MarketDataSnapshot struct {
	SymbolID                  uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	SessionSettlementPrice    float64  `protobuf:"fixed64,2,opt,name=SessionSettlementPrice,proto3" json:"SessionSettlementPrice,omitempty"`
	SessionOpenPrice          float64  `protobuf:"fixed64,3,opt,name=SessionOpenPrice,proto3" json:"SessionOpenPrice,omitempty"`
	SessionHighPrice          float64  `protobuf:"fixed64,4,opt,name=SessionHighPrice,proto3" json:"SessionHighPrice,omitempty"`
	SessionLowPrice           float64  `protobuf:"fixed64,5,opt,name=SessionLowPrice,proto3" json:"SessionLowPrice,omitempty"`
	SessionVolume             float64  `protobuf:"fixed64,6,opt,name=SessionVolume,proto3" json:"SessionVolume,omitempty"`
	SessionNumTrades          uint32   `protobuf:"varint,7,opt,name=SessionNumTrades,proto3" json:"SessionNumTrades,omitempty"`
	OpenInterest              uint32   `protobuf:"varint,8,opt,name=OpenInterest,proto3" json:"OpenInterest,omitempty"`
	BidPrice                  float64  `protobuf:"fixed64,9,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	AskPrice                  float64  `protobuf:"fixed64,10,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQuantity               float64  `protobuf:"fixed64,11,opt,name=AskQuantity,proto3" json:"AskQuantity,omitempty"`
	BidQuantity               float64  `protobuf:"fixed64,12,opt,name=BidQuantity,proto3" json:"BidQuantity,omitempty"`
	LastTradePrice            float64  `protobuf:"fixed64,13,opt,name=LastTradePrice,proto3" json:"LastTradePrice,omitempty"`
	LastTradeVolume           float64  `protobuf:"fixed64,14,opt,name=LastTradeVolume,proto3" json:"LastTradeVolume,omitempty"`
	LastTradeDateTime         float64  `protobuf:"fixed64,15,opt,name=LastTradeDateTime,proto3" json:"LastTradeDateTime,omitempty"`
	BidAskDateTime            float64  `protobuf:"fixed64,16,opt,name=BidAskDateTime,proto3" json:"BidAskDateTime,omitempty"`
	SessionSettlementDateTime uint32   `protobuf:"varint,17,opt,name=SessionSettlementDateTime,proto3" json:"SessionSettlementDateTime,omitempty"`
	TradingSessionDate        uint32   `protobuf:"varint,18,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *MarketDataSnapshot) Reset()         { *m = MarketDataSnapshot{} }
func (m *MarketDataSnapshot) String() string { return proto.CompactTextString(m) }
func (*MarketDataSnapshot) ProtoMessage()    {}
func (*MarketDataSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{11}
}

func (m *MarketDataSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataSnapshot.Unmarshal(m, b)
}
func (m *MarketDataSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataSnapshot.Marshal(b, m, deterministic)
}
func (m *MarketDataSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataSnapshot.Merge(m, src)
}
func (m *MarketDataSnapshot) XXX_Size() int {
	return xxx_messageInfo_MarketDataSnapshot.Size(m)
}
func (m *MarketDataSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataSnapshot proto.InternalMessageInfo

func (m *MarketDataSnapshot) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionSettlementPrice() float64 {
	if m != nil {
		return m.SessionSettlementPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionOpenPrice() float64 {
	if m != nil {
		return m.SessionOpenPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionHighPrice() float64 {
	if m != nil {
		return m.SessionHighPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionLowPrice() float64 {
	if m != nil {
		return m.SessionLowPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionVolume() float64 {
	if m != nil {
		return m.SessionVolume
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionNumTrades() uint32 {
	if m != nil {
		return m.SessionNumTrades
	}
	return 0
}

func (m *MarketDataSnapshot) GetOpenInterest() uint32 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *MarketDataSnapshot) GetBidPrice() float64 {
	if m != nil {
		return m.BidPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetAskPrice() float64 {
	if m != nil {
		return m.AskPrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetAskQuantity() float64 {
	if m != nil {
		return m.AskQuantity
	}
	return 0
}

func (m *MarketDataSnapshot) GetBidQuantity() float64 {
	if m != nil {
		return m.BidQuantity
	}
	return 0
}

func (m *MarketDataSnapshot) GetLastTradePrice() float64 {
	if m != nil {
		return m.LastTradePrice
	}
	return 0
}

func (m *MarketDataSnapshot) GetLastTradeVolume() float64 {
	if m != nil {
		return m.LastTradeVolume
	}
	return 0
}

func (m *MarketDataSnapshot) GetLastTradeDateTime() float64 {
	if m != nil {
		return m.LastTradeDateTime
	}
	return 0
}

func (m *MarketDataSnapshot) GetBidAskDateTime() float64 {
	if m != nil {
		return m.BidAskDateTime
	}
	return 0
}

func (m *MarketDataSnapshot) GetSessionSettlementDateTime() uint32 {
	if m != nil {
		return m.SessionSettlementDateTime
	}
	return 0
}

func (m *MarketDataSnapshot) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataSnapshot_Int struct {
	SymbolID                  uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	SessionSettlementPrice    int32    `protobuf:"varint,2,opt,name=SessionSettlementPrice,proto3" json:"SessionSettlementPrice,omitempty"`
	SessionOpenPrice          int32    `protobuf:"varint,3,opt,name=SessionOpenPrice,proto3" json:"SessionOpenPrice,omitempty"`
	SessionHighPrice          int32    `protobuf:"varint,4,opt,name=SessionHighPrice,proto3" json:"SessionHighPrice,omitempty"`
	SessionLowPrice           int32    `protobuf:"varint,5,opt,name=SessionLowPrice,proto3" json:"SessionLowPrice,omitempty"`
	SessionVolume             int32    `protobuf:"varint,6,opt,name=SessionVolume,proto3" json:"SessionVolume,omitempty"`
	SessionNumTrades          uint32   `protobuf:"varint,7,opt,name=SessionNumTrades,proto3" json:"SessionNumTrades,omitempty"`
	OpenInterest              uint32   `protobuf:"varint,8,opt,name=OpenInterest,proto3" json:"OpenInterest,omitempty"`
	BidPrice                  int32    `protobuf:"varint,9,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	AskPrice                  int32    `protobuf:"varint,10,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQuantity               int32    `protobuf:"varint,11,opt,name=AskQuantity,proto3" json:"AskQuantity,omitempty"`
	BidQuantity               int32    `protobuf:"varint,12,opt,name=BidQuantity,proto3" json:"BidQuantity,omitempty"`
	LastTradePrice            int32    `protobuf:"varint,13,opt,name=LastTradePrice,proto3" json:"LastTradePrice,omitempty"`
	LastTradeVolume           int32    `protobuf:"varint,14,opt,name=LastTradeVolume,proto3" json:"LastTradeVolume,omitempty"`
	LastTradeDateTime         float64  `protobuf:"fixed64,15,opt,name=LastTradeDateTime,proto3" json:"LastTradeDateTime,omitempty"`
	BidAskDateTime            float64  `protobuf:"fixed64,16,opt,name=BidAskDateTime,proto3" json:"BidAskDateTime,omitempty"`
	SessionSettlementDateTime uint32   `protobuf:"varint,17,opt,name=SessionSettlementDateTime,proto3" json:"SessionSettlementDateTime,omitempty"`
	TradingSessionDate        uint32   `protobuf:"varint,18,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *MarketDataSnapshot_Int) Reset()         { *m = MarketDataSnapshot_Int{} }
func (m *MarketDataSnapshot_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataSnapshot_Int) ProtoMessage()    {}
func (*MarketDataSnapshot_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{12}
}

func (m *MarketDataSnapshot_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataSnapshot_Int.Unmarshal(m, b)
}
func (m *MarketDataSnapshot_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataSnapshot_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataSnapshot_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataSnapshot_Int.Merge(m, src)
}
func (m *MarketDataSnapshot_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataSnapshot_Int.Size(m)
}
func (m *MarketDataSnapshot_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataSnapshot_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataSnapshot_Int proto.InternalMessageInfo

func (m *MarketDataSnapshot_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionSettlementPrice() int32 {
	if m != nil {
		return m.SessionSettlementPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionOpenPrice() int32 {
	if m != nil {
		return m.SessionOpenPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionHighPrice() int32 {
	if m != nil {
		return m.SessionHighPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionLowPrice() int32 {
	if m != nil {
		return m.SessionLowPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionVolume() int32 {
	if m != nil {
		return m.SessionVolume
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionNumTrades() uint32 {
	if m != nil {
		return m.SessionNumTrades
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetOpenInterest() uint32 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetBidPrice() int32 {
	if m != nil {
		return m.BidPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetAskPrice() int32 {
	if m != nil {
		return m.AskPrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetAskQuantity() int32 {
	if m != nil {
		return m.AskQuantity
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetBidQuantity() int32 {
	if m != nil {
		return m.BidQuantity
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetLastTradePrice() int32 {
	if m != nil {
		return m.LastTradePrice
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetLastTradeVolume() int32 {
	if m != nil {
		return m.LastTradeVolume
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetLastTradeDateTime() float64 {
	if m != nil {
		return m.LastTradeDateTime
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetBidAskDateTime() float64 {
	if m != nil {
		return m.BidAskDateTime
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetSessionSettlementDateTime() uint32 {
	if m != nil {
		return m.SessionSettlementDateTime
	}
	return 0
}

func (m *MarketDataSnapshot_Int) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type DepthEntry struct {
	Price                float64  `protobuf:"fixed64,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             float32  `protobuf:"fixed32,12,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepthEntry) Reset()         { *m = DepthEntry{} }
func (m *DepthEntry) String() string { return proto.CompactTextString(m) }
func (*DepthEntry) ProtoMessage()    {}
func (*DepthEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{13}
}

func (m *DepthEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepthEntry.Unmarshal(m, b)
}
func (m *DepthEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepthEntry.Marshal(b, m, deterministic)
}
func (m *DepthEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepthEntry.Merge(m, src)
}
func (m *DepthEntry) XXX_Size() int {
	return xxx_messageInfo_DepthEntry.Size(m)
}
func (m *DepthEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DepthEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DepthEntry proto.InternalMessageInfo

func (m *DepthEntry) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *DepthEntry) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

//============================================================================
type MarketDepthFullUpdate20 struct {
	SymbolID             uint32        `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	BidDepth             []*DepthEntry `protobuf:"bytes,2,rep,name=BidDepth,proto3" json:"BidDepth,omitempty"`
	AskDepth             []*DepthEntry `protobuf:"bytes,3,rep,name=AskDepth,proto3" json:"AskDepth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MarketDepthFullUpdate20) Reset()         { *m = MarketDepthFullUpdate20{} }
func (m *MarketDepthFullUpdate20) String() string { return proto.CompactTextString(m) }
func (*MarketDepthFullUpdate20) ProtoMessage()    {}
func (*MarketDepthFullUpdate20) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{14}
}

func (m *MarketDepthFullUpdate20) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthFullUpdate20.Unmarshal(m, b)
}
func (m *MarketDepthFullUpdate20) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthFullUpdate20.Marshal(b, m, deterministic)
}
func (m *MarketDepthFullUpdate20) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthFullUpdate20.Merge(m, src)
}
func (m *MarketDepthFullUpdate20) XXX_Size() int {
	return xxx_messageInfo_MarketDepthFullUpdate20.Size(m)
}
func (m *MarketDepthFullUpdate20) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthFullUpdate20.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthFullUpdate20 proto.InternalMessageInfo

func (m *MarketDepthFullUpdate20) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthFullUpdate20) GetBidDepth() []*DepthEntry {
	if m != nil {
		return m.BidDepth
	}
	return nil
}

func (m *MarketDepthFullUpdate20) GetAskDepth() []*DepthEntry {
	if m != nil {
		return m.AskDepth
	}
	return nil
}

//============================================================================
type MarketDepthFullUpdate10 struct {
	SymbolID             uint32        `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	BidDepth             []*DepthEntry `protobuf:"bytes,2,rep,name=BidDepth,proto3" json:"BidDepth,omitempty"`
	AskDepth             []*DepthEntry `protobuf:"bytes,3,rep,name=AskDepth,proto3" json:"AskDepth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MarketDepthFullUpdate10) Reset()         { *m = MarketDepthFullUpdate10{} }
func (m *MarketDepthFullUpdate10) String() string { return proto.CompactTextString(m) }
func (*MarketDepthFullUpdate10) ProtoMessage()    {}
func (*MarketDepthFullUpdate10) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{15}
}

func (m *MarketDepthFullUpdate10) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthFullUpdate10.Unmarshal(m, b)
}
func (m *MarketDepthFullUpdate10) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthFullUpdate10.Marshal(b, m, deterministic)
}
func (m *MarketDepthFullUpdate10) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthFullUpdate10.Merge(m, src)
}
func (m *MarketDepthFullUpdate10) XXX_Size() int {
	return xxx_messageInfo_MarketDepthFullUpdate10.Size(m)
}
func (m *MarketDepthFullUpdate10) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthFullUpdate10.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthFullUpdate10 proto.InternalMessageInfo

func (m *MarketDepthFullUpdate10) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthFullUpdate10) GetBidDepth() []*DepthEntry {
	if m != nil {
		return m.BidDepth
	}
	return nil
}

func (m *MarketDepthFullUpdate10) GetAskDepth() []*DepthEntry {
	if m != nil {
		return m.AskDepth
	}
	return nil
}

//============================================================================
type MarketDepthSnapshotLevel struct {
	SymbolID              uint32         `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Side                  AtBidOrAskEnum `protobuf:"varint,2,opt,name=Side,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"Side,omitempty"`
	Price                 float64        `protobuf:"fixed64,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity              float64        `protobuf:"fixed64,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Level                 uint32         `protobuf:"varint,5,opt,name=Level,proto3" json:"Level,omitempty"`
	IsFirstMessageInBatch uint32         `protobuf:"varint,6,opt,name=IsFirstMessageInBatch,proto3" json:"IsFirstMessageInBatch,omitempty"`
	IsLastMessageInBatch  uint32         `protobuf:"varint,7,opt,name=IsLastMessageInBatch,proto3" json:"IsLastMessageInBatch,omitempty"`
	DateTime              float64        `protobuf:"fixed64,8,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	NumOrders             uint32         `protobuf:"varint,9,opt,name=NumOrders,proto3" json:"NumOrders,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}       `json:"-"`
	XXX_unrecognized      []byte         `json:"-"`
	XXX_sizecache         int32          `json:"-"`
}

func (m *MarketDepthSnapshotLevel) Reset()         { *m = MarketDepthSnapshotLevel{} }
func (m *MarketDepthSnapshotLevel) String() string { return proto.CompactTextString(m) }
func (*MarketDepthSnapshotLevel) ProtoMessage()    {}
func (*MarketDepthSnapshotLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{16}
}

func (m *MarketDepthSnapshotLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthSnapshotLevel.Unmarshal(m, b)
}
func (m *MarketDepthSnapshotLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthSnapshotLevel.Marshal(b, m, deterministic)
}
func (m *MarketDepthSnapshotLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthSnapshotLevel.Merge(m, src)
}
func (m *MarketDepthSnapshotLevel) XXX_Size() int {
	return xxx_messageInfo_MarketDepthSnapshotLevel.Size(m)
}
func (m *MarketDepthSnapshotLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthSnapshotLevel.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthSnapshotLevel proto.InternalMessageInfo

func (m *MarketDepthSnapshotLevel) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetSide() AtBidOrAskEnum {
	if m != nil {
		return m.Side
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDepthSnapshotLevel) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetIsFirstMessageInBatch() uint32 {
	if m != nil {
		return m.IsFirstMessageInBatch
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetIsLastMessageInBatch() uint32 {
	if m != nil {
		return m.IsLastMessageInBatch
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDepthSnapshotLevel) GetNumOrders() uint32 {
	if m != nil {
		return m.NumOrders
	}
	return 0
}

//============================================================================
type MarketDepthSnapshotLevel_Int struct {
	SymbolID              uint32         `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Side                  AtBidOrAskEnum `protobuf:"varint,2,opt,name=Side,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"Side,omitempty"`
	Price                 int32          `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity              int32          `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Level                 uint32         `protobuf:"varint,5,opt,name=Level,proto3" json:"Level,omitempty"`
	IsFirstMessageInBatch uint32         `protobuf:"varint,6,opt,name=IsFirstMessageInBatch,proto3" json:"IsFirstMessageInBatch,omitempty"`
	IsLastMessageInBatch  uint32         `protobuf:"varint,7,opt,name=IsLastMessageInBatch,proto3" json:"IsLastMessageInBatch,omitempty"`
	DateTime              float64        `protobuf:"fixed64,8,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	NumOrders             uint32         `protobuf:"varint,9,opt,name=NumOrders,proto3" json:"NumOrders,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}       `json:"-"`
	XXX_unrecognized      []byte         `json:"-"`
	XXX_sizecache         int32          `json:"-"`
}

func (m *MarketDepthSnapshotLevel_Int) Reset()         { *m = MarketDepthSnapshotLevel_Int{} }
func (m *MarketDepthSnapshotLevel_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDepthSnapshotLevel_Int) ProtoMessage()    {}
func (*MarketDepthSnapshotLevel_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{17}
}

func (m *MarketDepthSnapshotLevel_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthSnapshotLevel_Int.Unmarshal(m, b)
}
func (m *MarketDepthSnapshotLevel_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthSnapshotLevel_Int.Marshal(b, m, deterministic)
}
func (m *MarketDepthSnapshotLevel_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthSnapshotLevel_Int.Merge(m, src)
}
func (m *MarketDepthSnapshotLevel_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDepthSnapshotLevel_Int.Size(m)
}
func (m *MarketDepthSnapshotLevel_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthSnapshotLevel_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthSnapshotLevel_Int proto.InternalMessageInfo

func (m *MarketDepthSnapshotLevel_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetSide() AtBidOrAskEnum {
	if m != nil {
		return m.Side
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDepthSnapshotLevel_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetIsFirstMessageInBatch() uint32 {
	if m != nil {
		return m.IsFirstMessageInBatch
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetIsLastMessageInBatch() uint32 {
	if m != nil {
		return m.IsLastMessageInBatch
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDepthSnapshotLevel_Int) GetNumOrders() uint32 {
	if m != nil {
		return m.NumOrders
	}
	return 0
}

//============================================================================
type MarketDepthUpdateLevel struct {
	SymbolID             uint32                    `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Side                 AtBidOrAskEnum            `protobuf:"varint,2,opt,name=Side,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"Side,omitempty"`
	Price                float64                   `protobuf:"fixed64,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             float64                   `protobuf:"fixed64,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	UpdateType           MarketDepthUpdateTypeEnum `protobuf:"varint,5,opt,name=UpdateType,proto3,enum=DTC_PB.MarketDepthUpdateTypeEnum" json:"UpdateType,omitempty"`
	DateTime             float64                   `protobuf:"fixed64,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	NumOrders            uint32                    `protobuf:"varint,7,opt,name=NumOrders,proto3" json:"NumOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MarketDepthUpdateLevel) Reset()         { *m = MarketDepthUpdateLevel{} }
func (m *MarketDepthUpdateLevel) String() string { return proto.CompactTextString(m) }
func (*MarketDepthUpdateLevel) ProtoMessage()    {}
func (*MarketDepthUpdateLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{18}
}

func (m *MarketDepthUpdateLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthUpdateLevel.Unmarshal(m, b)
}
func (m *MarketDepthUpdateLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthUpdateLevel.Marshal(b, m, deterministic)
}
func (m *MarketDepthUpdateLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthUpdateLevel.Merge(m, src)
}
func (m *MarketDepthUpdateLevel) XXX_Size() int {
	return xxx_messageInfo_MarketDepthUpdateLevel.Size(m)
}
func (m *MarketDepthUpdateLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthUpdateLevel.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthUpdateLevel proto.InternalMessageInfo

func (m *MarketDepthUpdateLevel) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthUpdateLevel) GetSide() AtBidOrAskEnum {
	if m != nil {
		return m.Side
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDepthUpdateLevel) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDepthUpdateLevel) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MarketDepthUpdateLevel) GetUpdateType() MarketDepthUpdateTypeEnum {
	if m != nil {
		return m.UpdateType
	}
	return MarketDepthUpdateTypeEnum_DEPTH_UNSET
}

func (m *MarketDepthUpdateLevel) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDepthUpdateLevel) GetNumOrders() uint32 {
	if m != nil {
		return m.NumOrders
	}
	return 0
}

//============================================================================
type MarketDepthUpdateLevel_Int struct {
	SymbolID             uint32                    `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Side                 AtBidOrAskEnum            `protobuf:"varint,2,opt,name=Side,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"Side,omitempty"`
	Price                int32                     `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             int32                     `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	UpdateType           MarketDepthUpdateTypeEnum `protobuf:"varint,5,opt,name=UpdateType,proto3,enum=DTC_PB.MarketDepthUpdateTypeEnum" json:"UpdateType,omitempty"`
	DateTime             float64                   `protobuf:"fixed64,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	NumOrders            uint32                    `protobuf:"varint,7,opt,name=NumOrders,proto3" json:"NumOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MarketDepthUpdateLevel_Int) Reset()         { *m = MarketDepthUpdateLevel_Int{} }
func (m *MarketDepthUpdateLevel_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDepthUpdateLevel_Int) ProtoMessage()    {}
func (*MarketDepthUpdateLevel_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{19}
}

func (m *MarketDepthUpdateLevel_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthUpdateLevel_Int.Unmarshal(m, b)
}
func (m *MarketDepthUpdateLevel_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthUpdateLevel_Int.Marshal(b, m, deterministic)
}
func (m *MarketDepthUpdateLevel_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthUpdateLevel_Int.Merge(m, src)
}
func (m *MarketDepthUpdateLevel_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDepthUpdateLevel_Int.Size(m)
}
func (m *MarketDepthUpdateLevel_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthUpdateLevel_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthUpdateLevel_Int proto.InternalMessageInfo

func (m *MarketDepthUpdateLevel_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthUpdateLevel_Int) GetSide() AtBidOrAskEnum {
	if m != nil {
		return m.Side
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDepthUpdateLevel_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDepthUpdateLevel_Int) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MarketDepthUpdateLevel_Int) GetUpdateType() MarketDepthUpdateTypeEnum {
	if m != nil {
		return m.UpdateType
	}
	return MarketDepthUpdateTypeEnum_DEPTH_UNSET
}

func (m *MarketDepthUpdateLevel_Int) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDepthUpdateLevel_Int) GetNumOrders() uint32 {
	if m != nil {
		return m.NumOrders
	}
	return 0
}

//============================================================================
type MarketDepthUpdateLevelCompact struct {
	SymbolID             uint32                    `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Side                 AtBidOrAskEnum            `protobuf:"varint,2,opt,name=Side,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"Side,omitempty"`
	Price                float32                   `protobuf:"fixed32,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             float32                   `protobuf:"fixed32,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	UpdateType           MarketDepthUpdateTypeEnum `protobuf:"varint,5,opt,name=UpdateType,proto3,enum=DTC_PB.MarketDepthUpdateTypeEnum" json:"UpdateType,omitempty"`
	DateTime             uint32                    `protobuf:"varint,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	NumOrders            uint32                    `protobuf:"varint,7,opt,name=NumOrders,proto3" json:"NumOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MarketDepthUpdateLevelCompact) Reset()         { *m = MarketDepthUpdateLevelCompact{} }
func (m *MarketDepthUpdateLevelCompact) String() string { return proto.CompactTextString(m) }
func (*MarketDepthUpdateLevelCompact) ProtoMessage()    {}
func (*MarketDepthUpdateLevelCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{20}
}

func (m *MarketDepthUpdateLevelCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthUpdateLevelCompact.Unmarshal(m, b)
}
func (m *MarketDepthUpdateLevelCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthUpdateLevelCompact.Marshal(b, m, deterministic)
}
func (m *MarketDepthUpdateLevelCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthUpdateLevelCompact.Merge(m, src)
}
func (m *MarketDepthUpdateLevelCompact) XXX_Size() int {
	return xxx_messageInfo_MarketDepthUpdateLevelCompact.Size(m)
}
func (m *MarketDepthUpdateLevelCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthUpdateLevelCompact.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthUpdateLevelCompact proto.InternalMessageInfo

func (m *MarketDepthUpdateLevelCompact) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthUpdateLevelCompact) GetSide() AtBidOrAskEnum {
	if m != nil {
		return m.Side
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDepthUpdateLevelCompact) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDepthUpdateLevelCompact) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MarketDepthUpdateLevelCompact) GetUpdateType() MarketDepthUpdateTypeEnum {
	if m != nil {
		return m.UpdateType
	}
	return MarketDepthUpdateTypeEnum_DEPTH_UNSET
}

func (m *MarketDepthUpdateLevelCompact) GetDateTime() uint32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDepthUpdateLevelCompact) GetNumOrders() uint32 {
	if m != nil {
		return m.NumOrders
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionSettlement struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty"`
	DateTime             uint32   `protobuf:"varint,3,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionSettlement) Reset()         { *m = MarketDataUpdateSessionSettlement{} }
func (m *MarketDataUpdateSessionSettlement) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionSettlement) ProtoMessage()    {}
func (*MarketDataUpdateSessionSettlement) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{21}
}

func (m *MarketDataUpdateSessionSettlement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionSettlement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionSettlement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionSettlement.Merge(m, src)
}
func (m *MarketDataUpdateSessionSettlement) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement.Size(m)
}
func (m *MarketDataUpdateSessionSettlement) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionSettlement.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionSettlement proto.InternalMessageInfo

func (m *MarketDataUpdateSessionSettlement) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionSettlement) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionSettlement) GetDateTime() uint32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionSettlement_Int struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	DateTime             int32    `protobuf:"varint,3,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionSettlement_Int) Reset()         { *m = MarketDataUpdateSessionSettlement_Int{} }
func (m *MarketDataUpdateSessionSettlement_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionSettlement_Int) ProtoMessage()    {}
func (*MarketDataUpdateSessionSettlement_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{22}
}

func (m *MarketDataUpdateSessionSettlement_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionSettlement_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionSettlement_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionSettlement_Int.Merge(m, src)
}
func (m *MarketDataUpdateSessionSettlement_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionSettlement_Int.Size(m)
}
func (m *MarketDataUpdateSessionSettlement_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionSettlement_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionSettlement_Int proto.InternalMessageInfo

func (m *MarketDataUpdateSessionSettlement_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionSettlement_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionSettlement_Int) GetDateTime() int32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionOpen struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionOpen) Reset()         { *m = MarketDataUpdateSessionOpen{} }
func (m *MarketDataUpdateSessionOpen) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionOpen) ProtoMessage()    {}
func (*MarketDataUpdateSessionOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{23}
}

func (m *MarketDataUpdateSessionOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionOpen.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionOpen.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionOpen.Merge(m, src)
}
func (m *MarketDataUpdateSessionOpen) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionOpen.Size(m)
}
func (m *MarketDataUpdateSessionOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionOpen.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionOpen proto.InternalMessageInfo

func (m *MarketDataUpdateSessionOpen) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionOpen) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionOpen) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionOpen_Int struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionOpen_Int) Reset()         { *m = MarketDataUpdateSessionOpen_Int{} }
func (m *MarketDataUpdateSessionOpen_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionOpen_Int) ProtoMessage()    {}
func (*MarketDataUpdateSessionOpen_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{24}
}

func (m *MarketDataUpdateSessionOpen_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionOpen_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionOpen_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionOpen_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionOpen_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionOpen_Int.Merge(m, src)
}
func (m *MarketDataUpdateSessionOpen_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionOpen_Int.Size(m)
}
func (m *MarketDataUpdateSessionOpen_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionOpen_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionOpen_Int proto.InternalMessageInfo

func (m *MarketDataUpdateSessionOpen_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionOpen_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionOpen_Int) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionNumTrades struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	NumTrades            int32    `protobuf:"varint,2,opt,name=NumTrades,proto3" json:"NumTrades,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionNumTrades) Reset()         { *m = MarketDataUpdateSessionNumTrades{} }
func (m *MarketDataUpdateSessionNumTrades) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionNumTrades) ProtoMessage()    {}
func (*MarketDataUpdateSessionNumTrades) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{25}
}

func (m *MarketDataUpdateSessionNumTrades) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionNumTrades.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionNumTrades) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionNumTrades.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionNumTrades) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionNumTrades.Merge(m, src)
}
func (m *MarketDataUpdateSessionNumTrades) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionNumTrades.Size(m)
}
func (m *MarketDataUpdateSessionNumTrades) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionNumTrades.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionNumTrades proto.InternalMessageInfo

func (m *MarketDataUpdateSessionNumTrades) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionNumTrades) GetNumTrades() int32 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *MarketDataUpdateSessionNumTrades) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateTradingSessionDate struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Date                 uint32   `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateTradingSessionDate) Reset()         { *m = MarketDataUpdateTradingSessionDate{} }
func (m *MarketDataUpdateTradingSessionDate) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateTradingSessionDate) ProtoMessage()    {}
func (*MarketDataUpdateTradingSessionDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{26}
}

func (m *MarketDataUpdateTradingSessionDate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateTradingSessionDate.Unmarshal(m, b)
}
func (m *MarketDataUpdateTradingSessionDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateTradingSessionDate.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateTradingSessionDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateTradingSessionDate.Merge(m, src)
}
func (m *MarketDataUpdateTradingSessionDate) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateTradingSessionDate.Size(m)
}
func (m *MarketDataUpdateTradingSessionDate) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateTradingSessionDate.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateTradingSessionDate proto.InternalMessageInfo

func (m *MarketDataUpdateTradingSessionDate) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateTradingSessionDate) GetDate() uint32 {
	if m != nil {
		return m.Date
	}
	return 0
}

//============================================================================
type MarketDepthReject struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDepthReject) Reset()         { *m = MarketDepthReject{} }
func (m *MarketDepthReject) String() string { return proto.CompactTextString(m) }
func (*MarketDepthReject) ProtoMessage()    {}
func (*MarketDepthReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{27}
}

func (m *MarketDepthReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDepthReject.Unmarshal(m, b)
}
func (m *MarketDepthReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDepthReject.Marshal(b, m, deterministic)
}
func (m *MarketDepthReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDepthReject.Merge(m, src)
}
func (m *MarketDepthReject) XXX_Size() int {
	return xxx_messageInfo_MarketDepthReject.Size(m)
}
func (m *MarketDepthReject) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDepthReject.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDepthReject proto.InternalMessageInfo

func (m *MarketDepthReject) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDepthReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type MarketDataUpdateTrade struct {
	SymbolID             uint32         `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	AtBidOrAsk           AtBidOrAskEnum `protobuf:"varint,2,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"AtBidOrAsk,omitempty"`
	Price                float64        `protobuf:"fixed64,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               float64        `protobuf:"fixed64,4,opt,name=Volume,proto3" json:"Volume,omitempty"`
	DateTime             float64        `protobuf:"fixed64,5,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MarketDataUpdateTrade) Reset()         { *m = MarketDataUpdateTrade{} }
func (m *MarketDataUpdateTrade) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateTrade) ProtoMessage()    {}
func (*MarketDataUpdateTrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{28}
}

func (m *MarketDataUpdateTrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateTrade.Unmarshal(m, b)
}
func (m *MarketDataUpdateTrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateTrade.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateTrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateTrade.Merge(m, src)
}
func (m *MarketDataUpdateTrade) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateTrade.Size(m)
}
func (m *MarketDataUpdateTrade) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateTrade.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateTrade proto.InternalMessageInfo

func (m *MarketDataUpdateTrade) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateTrade) GetAtBidOrAsk() AtBidOrAskEnum {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDataUpdateTrade) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateTrade) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *MarketDataUpdateTrade) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateTrade_Int struct {
	SymbolID             uint32         `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	AtBidOrAsk           AtBidOrAskEnum `protobuf:"varint,2,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"AtBidOrAsk,omitempty"`
	Price                int32          `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               int32          `protobuf:"varint,4,opt,name=Volume,proto3" json:"Volume,omitempty"`
	DateTime             float64        `protobuf:"fixed64,5,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MarketDataUpdateTrade_Int) Reset()         { *m = MarketDataUpdateTrade_Int{} }
func (m *MarketDataUpdateTrade_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateTrade_Int) ProtoMessage()    {}
func (*MarketDataUpdateTrade_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{29}
}

func (m *MarketDataUpdateTrade_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateTrade_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateTrade_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateTrade_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateTrade_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateTrade_Int.Merge(m, src)
}
func (m *MarketDataUpdateTrade_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateTrade_Int.Size(m)
}
func (m *MarketDataUpdateTrade_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateTrade_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateTrade_Int proto.InternalMessageInfo

func (m *MarketDataUpdateTrade_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateTrade_Int) GetAtBidOrAsk() AtBidOrAskEnum {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *MarketDataUpdateTrade_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateTrade_Int) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *MarketDataUpdateTrade_Int) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateTradeWithUnbundledIndicator struct {
	SymbolID                uint32                      `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	AtBidOrAsk              AtBidOrAskEnum8             `protobuf:"varint,2,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum8" json:"AtBidOrAsk,omitempty"`
	UnbundledTradeIndicator UnbundledTradeIndicatorEnum `protobuf:"varint,3,opt,name=UnbundledTradeIndicator,proto3,enum=DTC_PB.UnbundledTradeIndicatorEnum" json:"UnbundledTradeIndicator,omitempty"`
	Price                   float64                     `protobuf:"fixed64,4,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume                  uint32                      `protobuf:"varint,5,opt,name=Volume,proto3" json:"Volume,omitempty"`
	DateTime                float64                     `protobuf:"fixed64,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                    `json:"-"`
	XXX_unrecognized        []byte                      `json:"-"`
	XXX_sizecache           int32                       `json:"-"`
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) Reset() {
	*m = MarketDataUpdateTradeWithUnbundledIndicator{}
}
func (m *MarketDataUpdateTradeWithUnbundledIndicator) String() string {
	return proto.CompactTextString(m)
}
func (*MarketDataUpdateTradeWithUnbundledIndicator) ProtoMessage() {}
func (*MarketDataUpdateTradeWithUnbundledIndicator) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{30}
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator.Unmarshal(m, b)
}
func (m *MarketDataUpdateTradeWithUnbundledIndicator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateTradeWithUnbundledIndicator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator.Merge(m, src)
}
func (m *MarketDataUpdateTradeWithUnbundledIndicator) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator.Size(m)
}
func (m *MarketDataUpdateTradeWithUnbundledIndicator) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateTradeWithUnbundledIndicator proto.InternalMessageInfo

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetAtBidOrAsk() AtBidOrAskEnum8 {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum8_BID_ASK_UNSET_8
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetUnbundledTradeIndicator() UnbundledTradeIndicatorEnum {
	if m != nil {
		return m.UnbundledTradeIndicator
	}
	return UnbundledTradeIndicatorEnum_UNBUNDLED_TRADE_NONE
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetVolume() uint32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *MarketDataUpdateTradeWithUnbundledIndicator) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateBidAsk struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	BidPrice             float64  `protobuf:"fixed64,2,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	BidQuantity          float32  `protobuf:"fixed32,3,opt,name=BidQuantity,proto3" json:"BidQuantity,omitempty"`
	AskPrice             float64  `protobuf:"fixed64,4,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQuantity          float32  `protobuf:"fixed32,5,opt,name=AskQuantity,proto3" json:"AskQuantity,omitempty"`
	DateTime             int32    `protobuf:"fixed32,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateBidAsk) Reset()         { *m = MarketDataUpdateBidAsk{} }
func (m *MarketDataUpdateBidAsk) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateBidAsk) ProtoMessage()    {}
func (*MarketDataUpdateBidAsk) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{31}
}

func (m *MarketDataUpdateBidAsk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateBidAsk.Unmarshal(m, b)
}
func (m *MarketDataUpdateBidAsk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateBidAsk.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateBidAsk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateBidAsk.Merge(m, src)
}
func (m *MarketDataUpdateBidAsk) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateBidAsk.Size(m)
}
func (m *MarketDataUpdateBidAsk) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateBidAsk.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateBidAsk proto.InternalMessageInfo

func (m *MarketDataUpdateBidAsk) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateBidAsk) GetBidPrice() float64 {
	if m != nil {
		return m.BidPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAsk) GetBidQuantity() float32 {
	if m != nil {
		return m.BidQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAsk) GetAskPrice() float64 {
	if m != nil {
		return m.AskPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAsk) GetAskQuantity() float32 {
	if m != nil {
		return m.AskQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAsk) GetDateTime() int32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateBidAsk_Int struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	BidPrice             int32    `protobuf:"varint,2,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	BidQuantity          int32    `protobuf:"varint,3,opt,name=BidQuantity,proto3" json:"BidQuantity,omitempty"`
	AskPrice             int32    `protobuf:"varint,4,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQuantity          int32    `protobuf:"varint,5,opt,name=AskQuantity,proto3" json:"AskQuantity,omitempty"`
	DateTime             int32    `protobuf:"fixed32,6,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateBidAsk_Int) Reset()         { *m = MarketDataUpdateBidAsk_Int{} }
func (m *MarketDataUpdateBidAsk_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateBidAsk_Int) ProtoMessage()    {}
func (*MarketDataUpdateBidAsk_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{32}
}

func (m *MarketDataUpdateBidAsk_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateBidAsk_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateBidAsk_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateBidAsk_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateBidAsk_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateBidAsk_Int.Merge(m, src)
}
func (m *MarketDataUpdateBidAsk_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateBidAsk_Int.Size(m)
}
func (m *MarketDataUpdateBidAsk_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateBidAsk_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateBidAsk_Int proto.InternalMessageInfo

func (m *MarketDataUpdateBidAsk_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateBidAsk_Int) GetBidPrice() int32 {
	if m != nil {
		return m.BidPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAsk_Int) GetBidQuantity() int32 {
	if m != nil {
		return m.BidQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAsk_Int) GetAskPrice() int32 {
	if m != nil {
		return m.AskPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAsk_Int) GetAskQuantity() int32 {
	if m != nil {
		return m.AskQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAsk_Int) GetDateTime() int32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

//============================================================================
type MarketDataUpdateBidAskCompact struct {
	BidPrice             float32  `protobuf:"fixed32,1,opt,name=BidPrice,proto3" json:"BidPrice,omitempty"`
	BidQuantity          float32  `protobuf:"fixed32,2,opt,name=BidQuantity,proto3" json:"BidQuantity,omitempty"`
	AskPrice             float32  `protobuf:"fixed32,3,opt,name=AskPrice,proto3" json:"AskPrice,omitempty"`
	AskQuantity          float32  `protobuf:"fixed32,4,opt,name=AskQuantity,proto3" json:"AskQuantity,omitempty"`
	DateTime             int32    `protobuf:"fixed32,5,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	SymbolID             uint32   `protobuf:"varint,6,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateBidAskCompact) Reset()         { *m = MarketDataUpdateBidAskCompact{} }
func (m *MarketDataUpdateBidAskCompact) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateBidAskCompact) ProtoMessage()    {}
func (*MarketDataUpdateBidAskCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{33}
}

func (m *MarketDataUpdateBidAskCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateBidAskCompact.Unmarshal(m, b)
}
func (m *MarketDataUpdateBidAskCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateBidAskCompact.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateBidAskCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateBidAskCompact.Merge(m, src)
}
func (m *MarketDataUpdateBidAskCompact) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateBidAskCompact.Size(m)
}
func (m *MarketDataUpdateBidAskCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateBidAskCompact.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateBidAskCompact proto.InternalMessageInfo

func (m *MarketDataUpdateBidAskCompact) GetBidPrice() float32 {
	if m != nil {
		return m.BidPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAskCompact) GetBidQuantity() float32 {
	if m != nil {
		return m.BidQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAskCompact) GetAskPrice() float32 {
	if m != nil {
		return m.AskPrice
	}
	return 0
}

func (m *MarketDataUpdateBidAskCompact) GetAskQuantity() float32 {
	if m != nil {
		return m.AskQuantity
	}
	return 0
}

func (m *MarketDataUpdateBidAskCompact) GetDateTime() int32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDataUpdateBidAskCompact) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

//============================================================================
type MarketDataUpdateTradeCompact struct {
	Price                float32        `protobuf:"fixed32,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               float32        `protobuf:"fixed32,2,opt,name=Volume,proto3" json:"Volume,omitempty"`
	DateTime             int32          `protobuf:"fixed32,3,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	SymbolID             uint32         `protobuf:"varint,4,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	AtBidOrAsk           AtBidOrAskEnum `protobuf:"varint,5,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"AtBidOrAsk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MarketDataUpdateTradeCompact) Reset()         { *m = MarketDataUpdateTradeCompact{} }
func (m *MarketDataUpdateTradeCompact) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateTradeCompact) ProtoMessage()    {}
func (*MarketDataUpdateTradeCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{34}
}

func (m *MarketDataUpdateTradeCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateTradeCompact.Unmarshal(m, b)
}
func (m *MarketDataUpdateTradeCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateTradeCompact.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateTradeCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateTradeCompact.Merge(m, src)
}
func (m *MarketDataUpdateTradeCompact) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateTradeCompact.Size(m)
}
func (m *MarketDataUpdateTradeCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateTradeCompact.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateTradeCompact proto.InternalMessageInfo

func (m *MarketDataUpdateTradeCompact) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateTradeCompact) GetVolume() float32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *MarketDataUpdateTradeCompact) GetDateTime() int32 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *MarketDataUpdateTradeCompact) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateTradeCompact) GetAtBidOrAsk() AtBidOrAskEnum {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

//============================================================================
type MarketDataUpdateSessionVolume struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Volume               float64  `protobuf:"fixed64,2,opt,name=Volume,proto3" json:"Volume,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionVolume) Reset()         { *m = MarketDataUpdateSessionVolume{} }
func (m *MarketDataUpdateSessionVolume) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionVolume) ProtoMessage()    {}
func (*MarketDataUpdateSessionVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{35}
}

func (m *MarketDataUpdateSessionVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionVolume.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionVolume.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionVolume.Merge(m, src)
}
func (m *MarketDataUpdateSessionVolume) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionVolume.Size(m)
}
func (m *MarketDataUpdateSessionVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionVolume.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionVolume proto.InternalMessageInfo

func (m *MarketDataUpdateSessionVolume) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionVolume) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *MarketDataUpdateSessionVolume) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateOpenInterest struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	OpenInterest         uint32   `protobuf:"varint,2,opt,name=OpenInterest,proto3" json:"OpenInterest,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateOpenInterest) Reset()         { *m = MarketDataUpdateOpenInterest{} }
func (m *MarketDataUpdateOpenInterest) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateOpenInterest) ProtoMessage()    {}
func (*MarketDataUpdateOpenInterest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{36}
}

func (m *MarketDataUpdateOpenInterest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateOpenInterest.Unmarshal(m, b)
}
func (m *MarketDataUpdateOpenInterest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateOpenInterest.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateOpenInterest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateOpenInterest.Merge(m, src)
}
func (m *MarketDataUpdateOpenInterest) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateOpenInterest.Size(m)
}
func (m *MarketDataUpdateOpenInterest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateOpenInterest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateOpenInterest proto.InternalMessageInfo

func (m *MarketDataUpdateOpenInterest) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateOpenInterest) GetOpenInterest() uint32 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

func (m *MarketDataUpdateOpenInterest) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionHigh struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionHigh) Reset()         { *m = MarketDataUpdateSessionHigh{} }
func (m *MarketDataUpdateSessionHigh) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionHigh) ProtoMessage()    {}
func (*MarketDataUpdateSessionHigh) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{37}
}

func (m *MarketDataUpdateSessionHigh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionHigh.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionHigh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionHigh.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionHigh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionHigh.Merge(m, src)
}
func (m *MarketDataUpdateSessionHigh) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionHigh.Size(m)
}
func (m *MarketDataUpdateSessionHigh) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionHigh.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionHigh proto.InternalMessageInfo

func (m *MarketDataUpdateSessionHigh) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionHigh) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionHigh) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionHigh_Int struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionHigh_Int) Reset()         { *m = MarketDataUpdateSessionHigh_Int{} }
func (m *MarketDataUpdateSessionHigh_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionHigh_Int) ProtoMessage()    {}
func (*MarketDataUpdateSessionHigh_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{38}
}

func (m *MarketDataUpdateSessionHigh_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionHigh_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionHigh_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionHigh_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionHigh_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionHigh_Int.Merge(m, src)
}
func (m *MarketDataUpdateSessionHigh_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionHigh_Int.Size(m)
}
func (m *MarketDataUpdateSessionHigh_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionHigh_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionHigh_Int proto.InternalMessageInfo

func (m *MarketDataUpdateSessionHigh_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionHigh_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionHigh_Int) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionLow struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionLow) Reset()         { *m = MarketDataUpdateSessionLow{} }
func (m *MarketDataUpdateSessionLow) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionLow) ProtoMessage()    {}
func (*MarketDataUpdateSessionLow) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{39}
}

func (m *MarketDataUpdateSessionLow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionLow.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionLow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionLow.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionLow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionLow.Merge(m, src)
}
func (m *MarketDataUpdateSessionLow) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionLow.Size(m)
}
func (m *MarketDataUpdateSessionLow) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionLow.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionLow proto.InternalMessageInfo

func (m *MarketDataUpdateSessionLow) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionLow) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionLow) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateSessionLow_Int struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	Price                int32    `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	TradingSessionDate   uint32   `protobuf:"varint,3,opt,name=TradingSessionDate,proto3" json:"TradingSessionDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateSessionLow_Int) Reset()         { *m = MarketDataUpdateSessionLow_Int{} }
func (m *MarketDataUpdateSessionLow_Int) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateSessionLow_Int) ProtoMessage()    {}
func (*MarketDataUpdateSessionLow_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{40}
}

func (m *MarketDataUpdateSessionLow_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateSessionLow_Int.Unmarshal(m, b)
}
func (m *MarketDataUpdateSessionLow_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateSessionLow_Int.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateSessionLow_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateSessionLow_Int.Merge(m, src)
}
func (m *MarketDataUpdateSessionLow_Int) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateSessionLow_Int.Size(m)
}
func (m *MarketDataUpdateSessionLow_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateSessionLow_Int.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateSessionLow_Int proto.InternalMessageInfo

func (m *MarketDataUpdateSessionLow_Int) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateSessionLow_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MarketDataUpdateSessionLow_Int) GetTradingSessionDate() uint32 {
	if m != nil {
		return m.TradingSessionDate
	}
	return 0
}

//============================================================================
type MarketDataUpdateLastTradeSnapshot struct {
	SymbolID             uint32   `protobuf:"varint,1,opt,name=SymbolID,proto3" json:"SymbolID,omitempty"`
	LastTradePrice       float64  `protobuf:"fixed64,2,opt,name=LastTradePrice,proto3" json:"LastTradePrice,omitempty"`
	LastTradeVolume      float64  `protobuf:"fixed64,3,opt,name=LastTradeVolume,proto3" json:"LastTradeVolume,omitempty"`
	LastTradeDateTime    float64  `protobuf:"fixed64,4,opt,name=LastTradeDateTime,proto3" json:"LastTradeDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketDataUpdateLastTradeSnapshot) Reset()         { *m = MarketDataUpdateLastTradeSnapshot{} }
func (m *MarketDataUpdateLastTradeSnapshot) String() string { return proto.CompactTextString(m) }
func (*MarketDataUpdateLastTradeSnapshot) ProtoMessage()    {}
func (*MarketDataUpdateLastTradeSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{41}
}

func (m *MarketDataUpdateLastTradeSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketDataUpdateLastTradeSnapshot.Unmarshal(m, b)
}
func (m *MarketDataUpdateLastTradeSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketDataUpdateLastTradeSnapshot.Marshal(b, m, deterministic)
}
func (m *MarketDataUpdateLastTradeSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketDataUpdateLastTradeSnapshot.Merge(m, src)
}
func (m *MarketDataUpdateLastTradeSnapshot) XXX_Size() int {
	return xxx_messageInfo_MarketDataUpdateLastTradeSnapshot.Size(m)
}
func (m *MarketDataUpdateLastTradeSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketDataUpdateLastTradeSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_MarketDataUpdateLastTradeSnapshot proto.InternalMessageInfo

func (m *MarketDataUpdateLastTradeSnapshot) GetSymbolID() uint32 {
	if m != nil {
		return m.SymbolID
	}
	return 0
}

func (m *MarketDataUpdateLastTradeSnapshot) GetLastTradePrice() float64 {
	if m != nil {
		return m.LastTradePrice
	}
	return 0
}

func (m *MarketDataUpdateLastTradeSnapshot) GetLastTradeVolume() float64 {
	if m != nil {
		return m.LastTradeVolume
	}
	return 0
}

func (m *MarketDataUpdateLastTradeSnapshot) GetLastTradeDateTime() float64 {
	if m != nil {
		return m.LastTradeDateTime
	}
	return 0
}

//============================================================================
type SubmitNewSingleOrder struct {
	Symbol               string             `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string             `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	TradeAccount         string             `protobuf:"bytes,3,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	ClientOrderID        string             `protobuf:"bytes,4,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	OrderType            OrderTypeEnum      `protobuf:"varint,5,opt,name=OrderType,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType,omitempty"`
	BuySell              BuySellEnum        `protobuf:"varint,6,opt,name=BuySell,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell,omitempty"`
	Price1               float64            `protobuf:"fixed64,7,opt,name=Price1,proto3" json:"Price1,omitempty"`
	Price2               float64            `protobuf:"fixed64,8,opt,name=Price2,proto3" json:"Price2,omitempty"`
	Quantity             float64            `protobuf:"fixed64,9,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	TimeInForce          TimeInForceEnum    `protobuf:"varint,10,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime     int64              `protobuf:"fixed64,11,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	IsAutomatedOrder     uint32             `protobuf:"varint,12,opt,name=IsAutomatedOrder,proto3" json:"IsAutomatedOrder,omitempty"`
	IsParentOrder        uint32             `protobuf:"varint,13,opt,name=IsParentOrder,proto3" json:"IsParentOrder,omitempty"`
	FreeFormText         string             `protobuf:"bytes,14,opt,name=FreeFormText,proto3" json:"FreeFormText,omitempty"`
	OpenOrClose          OpenCloseTradeEnum `protobuf:"varint,15,opt,name=OpenOrClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenOrClose,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubmitNewSingleOrder) Reset()         { *m = SubmitNewSingleOrder{} }
func (m *SubmitNewSingleOrder) String() string { return proto.CompactTextString(m) }
func (*SubmitNewSingleOrder) ProtoMessage()    {}
func (*SubmitNewSingleOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{42}
}

func (m *SubmitNewSingleOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitNewSingleOrder.Unmarshal(m, b)
}
func (m *SubmitNewSingleOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitNewSingleOrder.Marshal(b, m, deterministic)
}
func (m *SubmitNewSingleOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitNewSingleOrder.Merge(m, src)
}
func (m *SubmitNewSingleOrder) XXX_Size() int {
	return xxx_messageInfo_SubmitNewSingleOrder.Size(m)
}
func (m *SubmitNewSingleOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitNewSingleOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitNewSingleOrder proto.InternalMessageInfo

func (m *SubmitNewSingleOrder) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SubmitNewSingleOrder) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SubmitNewSingleOrder) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *SubmitNewSingleOrder) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

func (m *SubmitNewSingleOrder) GetOrderType() OrderTypeEnum {
	if m != nil {
		return m.OrderType
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewSingleOrder) GetBuySell() BuySellEnum {
	if m != nil {
		return m.BuySell
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewSingleOrder) GetPrice1() float64 {
	if m != nil {
		return m.Price1
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetPrice2() float64 {
	if m != nil {
		return m.Price2
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *SubmitNewSingleOrder) GetGoodTillDateTime() int64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetIsAutomatedOrder() uint32 {
	if m != nil {
		return m.IsAutomatedOrder
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetIsParentOrder() uint32 {
	if m != nil {
		return m.IsParentOrder
	}
	return 0
}

func (m *SubmitNewSingleOrder) GetFreeFormText() string {
	if m != nil {
		return m.FreeFormText
	}
	return ""
}

func (m *SubmitNewSingleOrder) GetOpenOrClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenOrClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

//============================================================================
type SubmitNewSingleOrderInt struct {
	Symbol               string             `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string             `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	TradeAccount         string             `protobuf:"bytes,3,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	ClientOrderID        string             `protobuf:"bytes,4,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	OrderType            OrderTypeEnum      `protobuf:"varint,5,opt,name=OrderType,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType,omitempty"`
	BuySell              BuySellEnum        `protobuf:"varint,6,opt,name=BuySell,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell,omitempty"`
	Price1               int64              `protobuf:"varint,7,opt,name=Price1,proto3" json:"Price1,omitempty"`
	Price2               int64              `protobuf:"varint,8,opt,name=Price2,proto3" json:"Price2,omitempty"`
	Divisor              float32            `protobuf:"fixed32,9,opt,name=Divisor,proto3" json:"Divisor,omitempty"`
	Quantity             int64              `protobuf:"varint,10,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	TimeInForce          TimeInForceEnum    `protobuf:"varint,11,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime     int64              `protobuf:"fixed64,12,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	IsAutomatedOrder     uint32             `protobuf:"varint,13,opt,name=IsAutomatedOrder,proto3" json:"IsAutomatedOrder,omitempty"`
	IsParentOrder        uint32             `protobuf:"varint,14,opt,name=IsParentOrder,proto3" json:"IsParentOrder,omitempty"`
	FreeFormText         string             `protobuf:"bytes,15,opt,name=FreeFormText,proto3" json:"FreeFormText,omitempty"`
	OpenOrClose          OpenCloseTradeEnum `protobuf:"varint,16,opt,name=OpenOrClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenOrClose,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubmitNewSingleOrderInt) Reset()         { *m = SubmitNewSingleOrderInt{} }
func (m *SubmitNewSingleOrderInt) String() string { return proto.CompactTextString(m) }
func (*SubmitNewSingleOrderInt) ProtoMessage()    {}
func (*SubmitNewSingleOrderInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{43}
}

func (m *SubmitNewSingleOrderInt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitNewSingleOrderInt.Unmarshal(m, b)
}
func (m *SubmitNewSingleOrderInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitNewSingleOrderInt.Marshal(b, m, deterministic)
}
func (m *SubmitNewSingleOrderInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitNewSingleOrderInt.Merge(m, src)
}
func (m *SubmitNewSingleOrderInt) XXX_Size() int {
	return xxx_messageInfo_SubmitNewSingleOrderInt.Size(m)
}
func (m *SubmitNewSingleOrderInt) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitNewSingleOrderInt.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitNewSingleOrderInt proto.InternalMessageInfo

func (m *SubmitNewSingleOrderInt) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SubmitNewSingleOrderInt) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SubmitNewSingleOrderInt) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *SubmitNewSingleOrderInt) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

func (m *SubmitNewSingleOrderInt) GetOrderType() OrderTypeEnum {
	if m != nil {
		return m.OrderType
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewSingleOrderInt) GetBuySell() BuySellEnum {
	if m != nil {
		return m.BuySell
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewSingleOrderInt) GetPrice1() int64 {
	if m != nil {
		return m.Price1
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetPrice2() int64 {
	if m != nil {
		return m.Price2
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetDivisor() float32 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *SubmitNewSingleOrderInt) GetGoodTillDateTime() int64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetIsAutomatedOrder() uint32 {
	if m != nil {
		return m.IsAutomatedOrder
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetIsParentOrder() uint32 {
	if m != nil {
		return m.IsParentOrder
	}
	return 0
}

func (m *SubmitNewSingleOrderInt) GetFreeFormText() string {
	if m != nil {
		return m.FreeFormText
	}
	return ""
}

func (m *SubmitNewSingleOrderInt) GetOpenOrClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenOrClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

//============================================================================
type CancelReplaceOrder struct {
	ServerOrderID              string          `protobuf:"bytes,1,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	ClientOrderID              string          `protobuf:"bytes,2,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	Price1                     float64         `protobuf:"fixed64,3,opt,name=Price1,proto3" json:"Price1,omitempty"`
	Price2                     float64         `protobuf:"fixed64,4,opt,name=Price2,proto3" json:"Price2,omitempty"`
	Quantity                   float64         `protobuf:"fixed64,5,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Price1IsSet                uint32          `protobuf:"varint,6,opt,name=Price1IsSet,proto3" json:"Price1IsSet,omitempty"`
	Price2IsSet                uint32          `protobuf:"varint,7,opt,name=Price2IsSet,proto3" json:"Price2IsSet,omitempty"`
	TimeInForce                TimeInForceEnum `protobuf:"varint,9,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime           uint64          `protobuf:"varint,10,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	UpdatePrice1OffsetToParent uint32          `protobuf:"varint,11,opt,name=UpdatePrice1OffsetToParent,proto3" json:"UpdatePrice1OffsetToParent,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}        `json:"-"`
	XXX_unrecognized           []byte          `json:"-"`
	XXX_sizecache              int32           `json:"-"`
}

func (m *CancelReplaceOrder) Reset()         { *m = CancelReplaceOrder{} }
func (m *CancelReplaceOrder) String() string { return proto.CompactTextString(m) }
func (*CancelReplaceOrder) ProtoMessage()    {}
func (*CancelReplaceOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{44}
}

func (m *CancelReplaceOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelReplaceOrder.Unmarshal(m, b)
}
func (m *CancelReplaceOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelReplaceOrder.Marshal(b, m, deterministic)
}
func (m *CancelReplaceOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelReplaceOrder.Merge(m, src)
}
func (m *CancelReplaceOrder) XXX_Size() int {
	return xxx_messageInfo_CancelReplaceOrder.Size(m)
}
func (m *CancelReplaceOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelReplaceOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CancelReplaceOrder proto.InternalMessageInfo

func (m *CancelReplaceOrder) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *CancelReplaceOrder) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

func (m *CancelReplaceOrder) GetPrice1() float64 {
	if m != nil {
		return m.Price1
	}
	return 0
}

func (m *CancelReplaceOrder) GetPrice2() float64 {
	if m != nil {
		return m.Price2
	}
	return 0
}

func (m *CancelReplaceOrder) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CancelReplaceOrder) GetPrice1IsSet() uint32 {
	if m != nil {
		return m.Price1IsSet
	}
	return 0
}

func (m *CancelReplaceOrder) GetPrice2IsSet() uint32 {
	if m != nil {
		return m.Price2IsSet
	}
	return 0
}

func (m *CancelReplaceOrder) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *CancelReplaceOrder) GetGoodTillDateTime() uint64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *CancelReplaceOrder) GetUpdatePrice1OffsetToParent() uint32 {
	if m != nil {
		return m.UpdatePrice1OffsetToParent
	}
	return 0
}

//============================================================================
type CancelReplaceOrderInt struct {
	ServerOrderID              string          `protobuf:"bytes,1,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	ClientOrderID              string          `protobuf:"bytes,2,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	Price1                     int64           `protobuf:"varint,3,opt,name=Price1,proto3" json:"Price1,omitempty"`
	Price2                     int64           `protobuf:"varint,4,opt,name=Price2,proto3" json:"Price2,omitempty"`
	Divisor                    float32         `protobuf:"fixed32,5,opt,name=Divisor,proto3" json:"Divisor,omitempty"`
	Quantity                   int64           `protobuf:"varint,6,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Price1IsSet                uint32          `protobuf:"varint,7,opt,name=Price1IsSet,proto3" json:"Price1IsSet,omitempty"`
	Price2IsSet                uint32          `protobuf:"varint,8,opt,name=Price2IsSet,proto3" json:"Price2IsSet,omitempty"`
	TimeInForce                TimeInForceEnum `protobuf:"varint,10,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime           uint64          `protobuf:"varint,11,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	UpdatePrice1OffsetToParent uint32          `protobuf:"varint,12,opt,name=UpdatePrice1OffsetToParent,proto3" json:"UpdatePrice1OffsetToParent,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}        `json:"-"`
	XXX_unrecognized           []byte          `json:"-"`
	XXX_sizecache              int32           `json:"-"`
}

func (m *CancelReplaceOrderInt) Reset()         { *m = CancelReplaceOrderInt{} }
func (m *CancelReplaceOrderInt) String() string { return proto.CompactTextString(m) }
func (*CancelReplaceOrderInt) ProtoMessage()    {}
func (*CancelReplaceOrderInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{45}
}

func (m *CancelReplaceOrderInt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelReplaceOrderInt.Unmarshal(m, b)
}
func (m *CancelReplaceOrderInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelReplaceOrderInt.Marshal(b, m, deterministic)
}
func (m *CancelReplaceOrderInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelReplaceOrderInt.Merge(m, src)
}
func (m *CancelReplaceOrderInt) XXX_Size() int {
	return xxx_messageInfo_CancelReplaceOrderInt.Size(m)
}
func (m *CancelReplaceOrderInt) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelReplaceOrderInt.DiscardUnknown(m)
}

var xxx_messageInfo_CancelReplaceOrderInt proto.InternalMessageInfo

func (m *CancelReplaceOrderInt) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *CancelReplaceOrderInt) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

func (m *CancelReplaceOrderInt) GetPrice1() int64 {
	if m != nil {
		return m.Price1
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetPrice2() int64 {
	if m != nil {
		return m.Price2
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetDivisor() float32 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetPrice1IsSet() uint32 {
	if m != nil {
		return m.Price1IsSet
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetPrice2IsSet() uint32 {
	if m != nil {
		return m.Price2IsSet
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *CancelReplaceOrderInt) GetGoodTillDateTime() uint64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *CancelReplaceOrderInt) GetUpdatePrice1OffsetToParent() uint32 {
	if m != nil {
		return m.UpdatePrice1OffsetToParent
	}
	return 0
}

//============================================================================
type CancelOrder struct {
	ServerOrderID        string   `protobuf:"bytes,1,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	ClientOrderID        string   `protobuf:"bytes,2,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelOrder) Reset()         { *m = CancelOrder{} }
func (m *CancelOrder) String() string { return proto.CompactTextString(m) }
func (*CancelOrder) ProtoMessage()    {}
func (*CancelOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{46}
}

func (m *CancelOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelOrder.Unmarshal(m, b)
}
func (m *CancelOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelOrder.Marshal(b, m, deterministic)
}
func (m *CancelOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelOrder.Merge(m, src)
}
func (m *CancelOrder) XXX_Size() int {
	return xxx_messageInfo_CancelOrder.Size(m)
}
func (m *CancelOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CancelOrder proto.InternalMessageInfo

func (m *CancelOrder) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *CancelOrder) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

//============================================================================
type SubmitNewOCOOrder struct {
	Symbol                     string                  `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange                   string                  `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	ClientOrderID_1            string                  `protobuf:"bytes,3,opt,name=ClientOrderID_1,json=ClientOrderID1,proto3" json:"ClientOrderID_1,omitempty"`
	OrderType_1                OrderTypeEnum           `protobuf:"varint,4,opt,name=OrderType_1,json=OrderType1,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType_1,omitempty"`
	BuySell_1                  BuySellEnum             `protobuf:"varint,5,opt,name=BuySell_1,json=BuySell1,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell_1,omitempty"`
	Price1_1                   float64                 `protobuf:"fixed64,6,opt,name=Price1_1,json=Price11,proto3" json:"Price1_1,omitempty"`
	Price2_1                   float64                 `protobuf:"fixed64,7,opt,name=Price2_1,json=Price21,proto3" json:"Price2_1,omitempty"`
	Quantity_1                 float64                 `protobuf:"fixed64,8,opt,name=Quantity_1,json=Quantity1,proto3" json:"Quantity_1,omitempty"`
	ClientOrderID_2            string                  `protobuf:"bytes,9,opt,name=ClientOrderID_2,json=ClientOrderID2,proto3" json:"ClientOrderID_2,omitempty"`
	OrderType_2                OrderTypeEnum           `protobuf:"varint,10,opt,name=OrderType_2,json=OrderType2,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType_2,omitempty"`
	BuySell_2                  BuySellEnum             `protobuf:"varint,11,opt,name=BuySell_2,json=BuySell2,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell_2,omitempty"`
	Price1_2                   float64                 `protobuf:"fixed64,12,opt,name=Price1_2,json=Price12,proto3" json:"Price1_2,omitempty"`
	Price2_2                   float64                 `protobuf:"fixed64,13,opt,name=Price2_2,json=Price22,proto3" json:"Price2_2,omitempty"`
	Quantity_2                 float64                 `protobuf:"fixed64,14,opt,name=Quantity_2,json=Quantity2,proto3" json:"Quantity_2,omitempty"`
	TimeInForce                TimeInForceEnum         `protobuf:"varint,15,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime           int64                   `protobuf:"fixed64,16,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	TradeAccount               string                  `protobuf:"bytes,17,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	IsAutomatedOrder           uint32                  `protobuf:"varint,18,opt,name=IsAutomatedOrder,proto3" json:"IsAutomatedOrder,omitempty"`
	ParentTriggerClientOrderID string                  `protobuf:"bytes,19,opt,name=ParentTriggerClientOrderID,proto3" json:"ParentTriggerClientOrderID,omitempty"`
	FreeFormText               string                  `protobuf:"bytes,20,opt,name=FreeFormText,proto3" json:"FreeFormText,omitempty"`
	OpenOrClose                OpenCloseTradeEnum      `protobuf:"varint,21,opt,name=OpenOrClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenOrClose,omitempty"`
	PartialFillHandling        PartialFillHandlingEnum `protobuf:"varint,22,opt,name=PartialFillHandling,proto3,enum=DTC_PB.PartialFillHandlingEnum" json:"PartialFillHandling,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                `json:"-"`
	XXX_unrecognized           []byte                  `json:"-"`
	XXX_sizecache              int32                   `json:"-"`
}

func (m *SubmitNewOCOOrder) Reset()         { *m = SubmitNewOCOOrder{} }
func (m *SubmitNewOCOOrder) String() string { return proto.CompactTextString(m) }
func (*SubmitNewOCOOrder) ProtoMessage()    {}
func (*SubmitNewOCOOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{47}
}

func (m *SubmitNewOCOOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitNewOCOOrder.Unmarshal(m, b)
}
func (m *SubmitNewOCOOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitNewOCOOrder.Marshal(b, m, deterministic)
}
func (m *SubmitNewOCOOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitNewOCOOrder.Merge(m, src)
}
func (m *SubmitNewOCOOrder) XXX_Size() int {
	return xxx_messageInfo_SubmitNewOCOOrder.Size(m)
}
func (m *SubmitNewOCOOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitNewOCOOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitNewOCOOrder proto.InternalMessageInfo

func (m *SubmitNewOCOOrder) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetClientOrderID_1() string {
	if m != nil {
		return m.ClientOrderID_1
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetOrderType_1() OrderTypeEnum {
	if m != nil {
		return m.OrderType_1
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewOCOOrder) GetBuySell_1() BuySellEnum {
	if m != nil {
		return m.BuySell_1
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewOCOOrder) GetPrice1_1() float64 {
	if m != nil {
		return m.Price1_1
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetPrice2_1() float64 {
	if m != nil {
		return m.Price2_1
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetQuantity_1() float64 {
	if m != nil {
		return m.Quantity_1
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetClientOrderID_2() string {
	if m != nil {
		return m.ClientOrderID_2
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetOrderType_2() OrderTypeEnum {
	if m != nil {
		return m.OrderType_2
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewOCOOrder) GetBuySell_2() BuySellEnum {
	if m != nil {
		return m.BuySell_2
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewOCOOrder) GetPrice1_2() float64 {
	if m != nil {
		return m.Price1_2
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetPrice2_2() float64 {
	if m != nil {
		return m.Price2_2
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetQuantity_2() float64 {
	if m != nil {
		return m.Quantity_2
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *SubmitNewOCOOrder) GetGoodTillDateTime() int64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetIsAutomatedOrder() uint32 {
	if m != nil {
		return m.IsAutomatedOrder
	}
	return 0
}

func (m *SubmitNewOCOOrder) GetParentTriggerClientOrderID() string {
	if m != nil {
		return m.ParentTriggerClientOrderID
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetFreeFormText() string {
	if m != nil {
		return m.FreeFormText
	}
	return ""
}

func (m *SubmitNewOCOOrder) GetOpenOrClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenOrClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

func (m *SubmitNewOCOOrder) GetPartialFillHandling() PartialFillHandlingEnum {
	if m != nil {
		return m.PartialFillHandling
	}
	return PartialFillHandlingEnum_PARTIAL_FILL_UNSET
}

//============================================================================
type SubmitNewOCOOrderInt struct {
	Symbol                     string                  `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange                   string                  `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	ClientOrderID_1            string                  `protobuf:"bytes,3,opt,name=ClientOrderID_1,json=ClientOrderID1,proto3" json:"ClientOrderID_1,omitempty"`
	OrderType_1                OrderTypeEnum           `protobuf:"varint,4,opt,name=OrderType_1,json=OrderType1,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType_1,omitempty"`
	BuySell_1                  BuySellEnum             `protobuf:"varint,5,opt,name=BuySell_1,json=BuySell1,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell_1,omitempty"`
	Price1_1                   int64                   `protobuf:"varint,6,opt,name=Price1_1,json=Price11,proto3" json:"Price1_1,omitempty"`
	Price2_1                   int64                   `protobuf:"varint,7,opt,name=Price2_1,json=Price21,proto3" json:"Price2_1,omitempty"`
	Quantity_1                 int64                   `protobuf:"varint,8,opt,name=Quantity_1,json=Quantity1,proto3" json:"Quantity_1,omitempty"`
	ClientOrderID_2            string                  `protobuf:"bytes,9,opt,name=ClientOrderID_2,json=ClientOrderID2,proto3" json:"ClientOrderID_2,omitempty"`
	OrderType_2                OrderTypeEnum           `protobuf:"varint,10,opt,name=OrderType_2,json=OrderType2,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType_2,omitempty"`
	BuySell_2                  BuySellEnum             `protobuf:"varint,11,opt,name=BuySell_2,json=BuySell2,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell_2,omitempty"`
	Price1_2                   int64                   `protobuf:"varint,12,opt,name=Price1_2,json=Price12,proto3" json:"Price1_2,omitempty"`
	Price2_2                   int64                   `protobuf:"varint,13,opt,name=Price2_2,json=Price22,proto3" json:"Price2_2,omitempty"`
	Quantity_2                 int64                   `protobuf:"varint,14,opt,name=Quantity_2,json=Quantity2,proto3" json:"Quantity_2,omitempty"`
	TimeInForce                TimeInForceEnum         `protobuf:"varint,15,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime           int64                   `protobuf:"fixed64,16,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	TradeAccount               string                  `protobuf:"bytes,17,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	IsAutomatedOrder           uint32                  `protobuf:"varint,18,opt,name=IsAutomatedOrder,proto3" json:"IsAutomatedOrder,omitempty"`
	ParentTriggerClientOrderID string                  `protobuf:"bytes,19,opt,name=ParentTriggerClientOrderID,proto3" json:"ParentTriggerClientOrderID,omitempty"`
	FreeFormText               string                  `protobuf:"bytes,20,opt,name=FreeFormText,proto3" json:"FreeFormText,omitempty"`
	Divisor                    float32                 `protobuf:"fixed32,21,opt,name=Divisor,proto3" json:"Divisor,omitempty"`
	OpenOrClose                OpenCloseTradeEnum      `protobuf:"varint,22,opt,name=OpenOrClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenOrClose,omitempty"`
	PartialFillHandling        PartialFillHandlingEnum `protobuf:"varint,23,opt,name=PartialFillHandling,proto3,enum=DTC_PB.PartialFillHandlingEnum" json:"PartialFillHandling,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                `json:"-"`
	XXX_unrecognized           []byte                  `json:"-"`
	XXX_sizecache              int32                   `json:"-"`
}

func (m *SubmitNewOCOOrderInt) Reset()         { *m = SubmitNewOCOOrderInt{} }
func (m *SubmitNewOCOOrderInt) String() string { return proto.CompactTextString(m) }
func (*SubmitNewOCOOrderInt) ProtoMessage()    {}
func (*SubmitNewOCOOrderInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{48}
}

func (m *SubmitNewOCOOrderInt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitNewOCOOrderInt.Unmarshal(m, b)
}
func (m *SubmitNewOCOOrderInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitNewOCOOrderInt.Marshal(b, m, deterministic)
}
func (m *SubmitNewOCOOrderInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitNewOCOOrderInt.Merge(m, src)
}
func (m *SubmitNewOCOOrderInt) XXX_Size() int {
	return xxx_messageInfo_SubmitNewOCOOrderInt.Size(m)
}
func (m *SubmitNewOCOOrderInt) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitNewOCOOrderInt.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitNewOCOOrderInt proto.InternalMessageInfo

func (m *SubmitNewOCOOrderInt) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetClientOrderID_1() string {
	if m != nil {
		return m.ClientOrderID_1
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetOrderType_1() OrderTypeEnum {
	if m != nil {
		return m.OrderType_1
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewOCOOrderInt) GetBuySell_1() BuySellEnum {
	if m != nil {
		return m.BuySell_1
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewOCOOrderInt) GetPrice1_1() int64 {
	if m != nil {
		return m.Price1_1
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetPrice2_1() int64 {
	if m != nil {
		return m.Price2_1
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetQuantity_1() int64 {
	if m != nil {
		return m.Quantity_1
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetClientOrderID_2() string {
	if m != nil {
		return m.ClientOrderID_2
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetOrderType_2() OrderTypeEnum {
	if m != nil {
		return m.OrderType_2
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *SubmitNewOCOOrderInt) GetBuySell_2() BuySellEnum {
	if m != nil {
		return m.BuySell_2
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *SubmitNewOCOOrderInt) GetPrice1_2() int64 {
	if m != nil {
		return m.Price1_2
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetPrice2_2() int64 {
	if m != nil {
		return m.Price2_2
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetQuantity_2() int64 {
	if m != nil {
		return m.Quantity_2
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *SubmitNewOCOOrderInt) GetGoodTillDateTime() int64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetIsAutomatedOrder() uint32 {
	if m != nil {
		return m.IsAutomatedOrder
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetParentTriggerClientOrderID() string {
	if m != nil {
		return m.ParentTriggerClientOrderID
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetFreeFormText() string {
	if m != nil {
		return m.FreeFormText
	}
	return ""
}

func (m *SubmitNewOCOOrderInt) GetDivisor() float32 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

func (m *SubmitNewOCOOrderInt) GetOpenOrClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenOrClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

func (m *SubmitNewOCOOrderInt) GetPartialFillHandling() PartialFillHandlingEnum {
	if m != nil {
		return m.PartialFillHandling
	}
	return PartialFillHandlingEnum_PARTIAL_FILL_UNSET
}

//============================================================================
type OpenOrdersRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RequestAllOrders     int32    `protobuf:"varint,2,opt,name=RequestAllOrders,proto3" json:"RequestAllOrders,omitempty"`
	ServerOrderID        string   `protobuf:"bytes,3,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	TradeAccount         string   `protobuf:"bytes,4,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenOrdersRequest) Reset()         { *m = OpenOrdersRequest{} }
func (m *OpenOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*OpenOrdersRequest) ProtoMessage()    {}
func (*OpenOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{49}
}

func (m *OpenOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenOrdersRequest.Unmarshal(m, b)
}
func (m *OpenOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenOrdersRequest.Marshal(b, m, deterministic)
}
func (m *OpenOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenOrdersRequest.Merge(m, src)
}
func (m *OpenOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_OpenOrdersRequest.Size(m)
}
func (m *OpenOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenOrdersRequest proto.InternalMessageInfo

func (m *OpenOrdersRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *OpenOrdersRequest) GetRequestAllOrders() int32 {
	if m != nil {
		return m.RequestAllOrders
	}
	return 0
}

func (m *OpenOrdersRequest) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *OpenOrdersRequest) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

//============================================================================
type HistoricalOrderFillsRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	ServerOrderID        string   `protobuf:"bytes,2,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	NumberOfDays         int32    `protobuf:"varint,3,opt,name=NumberOfDays,proto3" json:"NumberOfDays,omitempty"`
	TradeAccount         string   `protobuf:"bytes,4,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalOrderFillsRequest) Reset()         { *m = HistoricalOrderFillsRequest{} }
func (m *HistoricalOrderFillsRequest) String() string { return proto.CompactTextString(m) }
func (*HistoricalOrderFillsRequest) ProtoMessage()    {}
func (*HistoricalOrderFillsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{50}
}

func (m *HistoricalOrderFillsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalOrderFillsRequest.Unmarshal(m, b)
}
func (m *HistoricalOrderFillsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalOrderFillsRequest.Marshal(b, m, deterministic)
}
func (m *HistoricalOrderFillsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalOrderFillsRequest.Merge(m, src)
}
func (m *HistoricalOrderFillsRequest) XXX_Size() int {
	return xxx_messageInfo_HistoricalOrderFillsRequest.Size(m)
}
func (m *HistoricalOrderFillsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalOrderFillsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalOrderFillsRequest proto.InternalMessageInfo

func (m *HistoricalOrderFillsRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalOrderFillsRequest) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *HistoricalOrderFillsRequest) GetNumberOfDays() int32 {
	if m != nil {
		return m.NumberOfDays
	}
	return 0
}

func (m *HistoricalOrderFillsRequest) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

//============================================================================
type HistoricalOrderFillsReject struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalOrderFillsReject) Reset()         { *m = HistoricalOrderFillsReject{} }
func (m *HistoricalOrderFillsReject) String() string { return proto.CompactTextString(m) }
func (*HistoricalOrderFillsReject) ProtoMessage()    {}
func (*HistoricalOrderFillsReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{51}
}

func (m *HistoricalOrderFillsReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalOrderFillsReject.Unmarshal(m, b)
}
func (m *HistoricalOrderFillsReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalOrderFillsReject.Marshal(b, m, deterministic)
}
func (m *HistoricalOrderFillsReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalOrderFillsReject.Merge(m, src)
}
func (m *HistoricalOrderFillsReject) XXX_Size() int {
	return xxx_messageInfo_HistoricalOrderFillsReject.Size(m)
}
func (m *HistoricalOrderFillsReject) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalOrderFillsReject.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalOrderFillsReject proto.InternalMessageInfo

func (m *HistoricalOrderFillsReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalOrderFillsReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type CurrentPositionsRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	TradeAccount         string   `protobuf:"bytes,2,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentPositionsRequest) Reset()         { *m = CurrentPositionsRequest{} }
func (m *CurrentPositionsRequest) String() string { return proto.CompactTextString(m) }
func (*CurrentPositionsRequest) ProtoMessage()    {}
func (*CurrentPositionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{52}
}

func (m *CurrentPositionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentPositionsRequest.Unmarshal(m, b)
}
func (m *CurrentPositionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentPositionsRequest.Marshal(b, m, deterministic)
}
func (m *CurrentPositionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentPositionsRequest.Merge(m, src)
}
func (m *CurrentPositionsRequest) XXX_Size() int {
	return xxx_messageInfo_CurrentPositionsRequest.Size(m)
}
func (m *CurrentPositionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentPositionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentPositionsRequest proto.InternalMessageInfo

func (m *CurrentPositionsRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *CurrentPositionsRequest) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

//============================================================================
type CurrentPositionsReject struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrentPositionsReject) Reset()         { *m = CurrentPositionsReject{} }
func (m *CurrentPositionsReject) String() string { return proto.CompactTextString(m) }
func (*CurrentPositionsReject) ProtoMessage()    {}
func (*CurrentPositionsReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{53}
}

func (m *CurrentPositionsReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrentPositionsReject.Unmarshal(m, b)
}
func (m *CurrentPositionsReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrentPositionsReject.Marshal(b, m, deterministic)
}
func (m *CurrentPositionsReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrentPositionsReject.Merge(m, src)
}
func (m *CurrentPositionsReject) XXX_Size() int {
	return xxx_messageInfo_CurrentPositionsReject.Size(m)
}
func (m *CurrentPositionsReject) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrentPositionsReject.DiscardUnknown(m)
}

var xxx_messageInfo_CurrentPositionsReject proto.InternalMessageInfo

func (m *CurrentPositionsReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *CurrentPositionsReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type OrderUpdate struct {
	RequestID                   int32                 `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	TotalNumMessages            int32                 `protobuf:"varint,2,opt,name=TotalNumMessages,proto3" json:"TotalNumMessages,omitempty"`
	MessageNumber               int32                 `protobuf:"varint,3,opt,name=MessageNumber,proto3" json:"MessageNumber,omitempty"`
	Symbol                      string                `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange                    string                `protobuf:"bytes,5,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	PreviousServerOrderID       string                `protobuf:"bytes,6,opt,name=PreviousServerOrderID,proto3" json:"PreviousServerOrderID,omitempty"`
	ServerOrderID               string                `protobuf:"bytes,7,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	ClientOrderID               string                `protobuf:"bytes,8,opt,name=ClientOrderID,proto3" json:"ClientOrderID,omitempty"`
	ExchangeOrderID             string                `protobuf:"bytes,9,opt,name=ExchangeOrderID,proto3" json:"ExchangeOrderID,omitempty"`
	OrderStatus                 OrderStatusEnum       `protobuf:"varint,10,opt,name=OrderStatus,proto3,enum=DTC_PB.OrderStatusEnum" json:"OrderStatus,omitempty"`
	OrderUpdateReason           OrderUpdateReasonEnum `protobuf:"varint,11,opt,name=OrderUpdateReason,proto3,enum=DTC_PB.OrderUpdateReasonEnum" json:"OrderUpdateReason,omitempty"`
	OrderType                   OrderTypeEnum         `protobuf:"varint,12,opt,name=OrderType,proto3,enum=DTC_PB.OrderTypeEnum" json:"OrderType,omitempty"`
	BuySell                     BuySellEnum           `protobuf:"varint,13,opt,name=BuySell,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell,omitempty"`
	Price1                      float64               `protobuf:"fixed64,14,opt,name=Price1,proto3" json:"Price1,omitempty"`
	Price2                      float64               `protobuf:"fixed64,15,opt,name=Price2,proto3" json:"Price2,omitempty"`
	TimeInForce                 TimeInForceEnum       `protobuf:"varint,16,opt,name=TimeInForce,proto3,enum=DTC_PB.TimeInForceEnum" json:"TimeInForce,omitempty"`
	GoodTillDateTime            int64                 `protobuf:"fixed64,17,opt,name=GoodTillDateTime,proto3" json:"GoodTillDateTime,omitempty"`
	OrderQuantity               float64               `protobuf:"fixed64,18,opt,name=OrderQuantity,proto3" json:"OrderQuantity,omitempty"`
	FilledQuantity              float64               `protobuf:"fixed64,19,opt,name=FilledQuantity,proto3" json:"FilledQuantity,omitempty"`
	RemainingQuantity           float64               `protobuf:"fixed64,20,opt,name=RemainingQuantity,proto3" json:"RemainingQuantity,omitempty"`
	AverageFillPrice            float64               `protobuf:"fixed64,21,opt,name=AverageFillPrice,proto3" json:"AverageFillPrice,omitempty"`
	LastFillPrice               float64               `protobuf:"fixed64,22,opt,name=LastFillPrice,proto3" json:"LastFillPrice,omitempty"`
	LastFillDateTime            int64                 `protobuf:"fixed64,23,opt,name=LastFillDateTime,proto3" json:"LastFillDateTime,omitempty"`
	LastFillQuantity            float64               `protobuf:"fixed64,24,opt,name=LastFillQuantity,proto3" json:"LastFillQuantity,omitempty"`
	LastFillExecutionID         string                `protobuf:"bytes,25,opt,name=LastFillExecutionID,proto3" json:"LastFillExecutionID,omitempty"`
	TradeAccount                string                `protobuf:"bytes,26,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	InfoText                    string                `protobuf:"bytes,27,opt,name=InfoText,proto3" json:"InfoText,omitempty"`
	NoOrders                    uint32                `protobuf:"varint,28,opt,name=NoOrders,proto3" json:"NoOrders,omitempty"`
	ParentServerOrderID         string                `protobuf:"bytes,29,opt,name=ParentServerOrderID,proto3" json:"ParentServerOrderID,omitempty"`
	OCOLinkedOrderServerOrderID string                `protobuf:"bytes,30,opt,name=OCOLinkedOrderServerOrderID,proto3" json:"OCOLinkedOrderServerOrderID,omitempty"`
	OpenOrClose                 OpenCloseTradeEnum    `protobuf:"varint,31,opt,name=OpenOrClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenOrClose,omitempty"`
	PreviousClientOrderID       string                `protobuf:"bytes,32,opt,name=PreviousClientOrderID,proto3" json:"PreviousClientOrderID,omitempty"`
	FreeFormText                string                `protobuf:"bytes,33,opt,name=FreeFormText,proto3" json:"FreeFormText,omitempty"`
	OrderReceivedDateTime       int64                 `protobuf:"fixed64,34,opt,name=OrderReceivedDateTime,proto3" json:"OrderReceivedDateTime,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}              `json:"-"`
	XXX_unrecognized            []byte                `json:"-"`
	XXX_sizecache               int32                 `json:"-"`
}

func (m *OrderUpdate) Reset()         { *m = OrderUpdate{} }
func (m *OrderUpdate) String() string { return proto.CompactTextString(m) }
func (*OrderUpdate) ProtoMessage()    {}
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{54}
}

func (m *OrderUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUpdate.Unmarshal(m, b)
}
func (m *OrderUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUpdate.Marshal(b, m, deterministic)
}
func (m *OrderUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUpdate.Merge(m, src)
}
func (m *OrderUpdate) XXX_Size() int {
	return xxx_messageInfo_OrderUpdate.Size(m)
}
func (m *OrderUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUpdate proto.InternalMessageInfo

func (m *OrderUpdate) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *OrderUpdate) GetTotalNumMessages() int32 {
	if m != nil {
		return m.TotalNumMessages
	}
	return 0
}

func (m *OrderUpdate) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *OrderUpdate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderUpdate) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *OrderUpdate) GetPreviousServerOrderID() string {
	if m != nil {
		return m.PreviousServerOrderID
	}
	return ""
}

func (m *OrderUpdate) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *OrderUpdate) GetClientOrderID() string {
	if m != nil {
		return m.ClientOrderID
	}
	return ""
}

func (m *OrderUpdate) GetExchangeOrderID() string {
	if m != nil {
		return m.ExchangeOrderID
	}
	return ""
}

func (m *OrderUpdate) GetOrderStatus() OrderStatusEnum {
	if m != nil {
		return m.OrderStatus
	}
	return OrderStatusEnum_ORDER_STATUS_UNSPECIFIED
}

func (m *OrderUpdate) GetOrderUpdateReason() OrderUpdateReasonEnum {
	if m != nil {
		return m.OrderUpdateReason
	}
	return OrderUpdateReasonEnum_ORDER_UPDATE_REASON_UNSET
}

func (m *OrderUpdate) GetOrderType() OrderTypeEnum {
	if m != nil {
		return m.OrderType
	}
	return OrderTypeEnum_ORDER_TYPE_UNSET
}

func (m *OrderUpdate) GetBuySell() BuySellEnum {
	if m != nil {
		return m.BuySell
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *OrderUpdate) GetPrice1() float64 {
	if m != nil {
		return m.Price1
	}
	return 0
}

func (m *OrderUpdate) GetPrice2() float64 {
	if m != nil {
		return m.Price2
	}
	return 0
}

func (m *OrderUpdate) GetTimeInForce() TimeInForceEnum {
	if m != nil {
		return m.TimeInForce
	}
	return TimeInForceEnum_TIF_UNSET
}

func (m *OrderUpdate) GetGoodTillDateTime() int64 {
	if m != nil {
		return m.GoodTillDateTime
	}
	return 0
}

func (m *OrderUpdate) GetOrderQuantity() float64 {
	if m != nil {
		return m.OrderQuantity
	}
	return 0
}

func (m *OrderUpdate) GetFilledQuantity() float64 {
	if m != nil {
		return m.FilledQuantity
	}
	return 0
}

func (m *OrderUpdate) GetRemainingQuantity() float64 {
	if m != nil {
		return m.RemainingQuantity
	}
	return 0
}

func (m *OrderUpdate) GetAverageFillPrice() float64 {
	if m != nil {
		return m.AverageFillPrice
	}
	return 0
}

func (m *OrderUpdate) GetLastFillPrice() float64 {
	if m != nil {
		return m.LastFillPrice
	}
	return 0
}

func (m *OrderUpdate) GetLastFillDateTime() int64 {
	if m != nil {
		return m.LastFillDateTime
	}
	return 0
}

func (m *OrderUpdate) GetLastFillQuantity() float64 {
	if m != nil {
		return m.LastFillQuantity
	}
	return 0
}

func (m *OrderUpdate) GetLastFillExecutionID() string {
	if m != nil {
		return m.LastFillExecutionID
	}
	return ""
}

func (m *OrderUpdate) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *OrderUpdate) GetInfoText() string {
	if m != nil {
		return m.InfoText
	}
	return ""
}

func (m *OrderUpdate) GetNoOrders() uint32 {
	if m != nil {
		return m.NoOrders
	}
	return 0
}

func (m *OrderUpdate) GetParentServerOrderID() string {
	if m != nil {
		return m.ParentServerOrderID
	}
	return ""
}

func (m *OrderUpdate) GetOCOLinkedOrderServerOrderID() string {
	if m != nil {
		return m.OCOLinkedOrderServerOrderID
	}
	return ""
}

func (m *OrderUpdate) GetOpenOrClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenOrClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

func (m *OrderUpdate) GetPreviousClientOrderID() string {
	if m != nil {
		return m.PreviousClientOrderID
	}
	return ""
}

func (m *OrderUpdate) GetFreeFormText() string {
	if m != nil {
		return m.FreeFormText
	}
	return ""
}

func (m *OrderUpdate) GetOrderReceivedDateTime() int64 {
	if m != nil {
		return m.OrderReceivedDateTime
	}
	return 0
}

//============================================================================
type OpenOrdersReject struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenOrdersReject) Reset()         { *m = OpenOrdersReject{} }
func (m *OpenOrdersReject) String() string { return proto.CompactTextString(m) }
func (*OpenOrdersReject) ProtoMessage()    {}
func (*OpenOrdersReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{55}
}

func (m *OpenOrdersReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenOrdersReject.Unmarshal(m, b)
}
func (m *OpenOrdersReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenOrdersReject.Marshal(b, m, deterministic)
}
func (m *OpenOrdersReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenOrdersReject.Merge(m, src)
}
func (m *OpenOrdersReject) XXX_Size() int {
	return xxx_messageInfo_OpenOrdersReject.Size(m)
}
func (m *OpenOrdersReject) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenOrdersReject.DiscardUnknown(m)
}

var xxx_messageInfo_OpenOrdersReject proto.InternalMessageInfo

func (m *OpenOrdersReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *OpenOrdersReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type HistoricalOrderFillResponse struct {
	RequestID            int32              `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	TotalNumberMessages  int32              `protobuf:"varint,2,opt,name=TotalNumberMessages,proto3" json:"TotalNumberMessages,omitempty"`
	MessageNumber        int32              `protobuf:"varint,3,opt,name=MessageNumber,proto3" json:"MessageNumber,omitempty"`
	Symbol               string             `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string             `protobuf:"bytes,5,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	ServerOrderID        string             `protobuf:"bytes,6,opt,name=ServerOrderID,proto3" json:"ServerOrderID,omitempty"`
	BuySell              BuySellEnum        `protobuf:"varint,7,opt,name=BuySell,proto3,enum=DTC_PB.BuySellEnum" json:"BuySell,omitempty"`
	Price                float64            `protobuf:"fixed64,8,opt,name=Price,proto3" json:"Price,omitempty"`
	DateTime             int64              `protobuf:"fixed64,9,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	Quantity             float64            `protobuf:"fixed64,10,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	UniqueExecutionID    string             `protobuf:"bytes,11,opt,name=UniqueExecutionID,proto3" json:"UniqueExecutionID,omitempty"`
	TradeAccount         string             `protobuf:"bytes,12,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	OpenClose            OpenCloseTradeEnum `protobuf:"varint,13,opt,name=OpenClose,proto3,enum=DTC_PB.OpenCloseTradeEnum" json:"OpenClose,omitempty"`
	NoOrderFills         uint32             `protobuf:"varint,14,opt,name=NoOrderFills,proto3" json:"NoOrderFills,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HistoricalOrderFillResponse) Reset()         { *m = HistoricalOrderFillResponse{} }
func (m *HistoricalOrderFillResponse) String() string { return proto.CompactTextString(m) }
func (*HistoricalOrderFillResponse) ProtoMessage()    {}
func (*HistoricalOrderFillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{56}
}

func (m *HistoricalOrderFillResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalOrderFillResponse.Unmarshal(m, b)
}
func (m *HistoricalOrderFillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalOrderFillResponse.Marshal(b, m, deterministic)
}
func (m *HistoricalOrderFillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalOrderFillResponse.Merge(m, src)
}
func (m *HistoricalOrderFillResponse) XXX_Size() int {
	return xxx_messageInfo_HistoricalOrderFillResponse.Size(m)
}
func (m *HistoricalOrderFillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalOrderFillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalOrderFillResponse proto.InternalMessageInfo

func (m *HistoricalOrderFillResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetTotalNumberMessages() int32 {
	if m != nil {
		return m.TotalNumberMessages
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *HistoricalOrderFillResponse) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *HistoricalOrderFillResponse) GetServerOrderID() string {
	if m != nil {
		return m.ServerOrderID
	}
	return ""
}

func (m *HistoricalOrderFillResponse) GetBuySell() BuySellEnum {
	if m != nil {
		return m.BuySell
	}
	return BuySellEnum_BUY_SELL_UNSET
}

func (m *HistoricalOrderFillResponse) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetDateTime() int64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *HistoricalOrderFillResponse) GetUniqueExecutionID() string {
	if m != nil {
		return m.UniqueExecutionID
	}
	return ""
}

func (m *HistoricalOrderFillResponse) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *HistoricalOrderFillResponse) GetOpenClose() OpenCloseTradeEnum {
	if m != nil {
		return m.OpenClose
	}
	return OpenCloseTradeEnum_TRADE_UNSET
}

func (m *HistoricalOrderFillResponse) GetNoOrderFills() uint32 {
	if m != nil {
		return m.NoOrderFills
	}
	return 0
}

//============================================================================
type PositionUpdate struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	TotalNumberMessages  int32    `protobuf:"varint,2,opt,name=TotalNumberMessages,proto3" json:"TotalNumberMessages,omitempty"`
	MessageNumber        int32    `protobuf:"varint,3,opt,name=MessageNumber,proto3" json:"MessageNumber,omitempty"`
	Symbol               string   `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string   `protobuf:"bytes,5,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	Quantity             float64  `protobuf:"fixed64,6,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	AveragePrice         float64  `protobuf:"fixed64,7,opt,name=AveragePrice,proto3" json:"AveragePrice,omitempty"`
	PositionIdentifier   string   `protobuf:"bytes,8,opt,name=PositionIdentifier,proto3" json:"PositionIdentifier,omitempty"`
	TradeAccount         string   `protobuf:"bytes,9,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	NoPositions          uint32   `protobuf:"varint,10,opt,name=NoPositions,proto3" json:"NoPositions,omitempty"`
	Unsolicited          uint32   `protobuf:"varint,11,opt,name=Unsolicited,proto3" json:"Unsolicited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionUpdate) Reset()         { *m = PositionUpdate{} }
func (m *PositionUpdate) String() string { return proto.CompactTextString(m) }
func (*PositionUpdate) ProtoMessage()    {}
func (*PositionUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{57}
}

func (m *PositionUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionUpdate.Unmarshal(m, b)
}
func (m *PositionUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionUpdate.Marshal(b, m, deterministic)
}
func (m *PositionUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionUpdate.Merge(m, src)
}
func (m *PositionUpdate) XXX_Size() int {
	return xxx_messageInfo_PositionUpdate.Size(m)
}
func (m *PositionUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PositionUpdate proto.InternalMessageInfo

func (m *PositionUpdate) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *PositionUpdate) GetTotalNumberMessages() int32 {
	if m != nil {
		return m.TotalNumberMessages
	}
	return 0
}

func (m *PositionUpdate) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *PositionUpdate) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *PositionUpdate) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *PositionUpdate) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *PositionUpdate) GetAveragePrice() float64 {
	if m != nil {
		return m.AveragePrice
	}
	return 0
}

func (m *PositionUpdate) GetPositionIdentifier() string {
	if m != nil {
		return m.PositionIdentifier
	}
	return ""
}

func (m *PositionUpdate) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *PositionUpdate) GetNoPositions() uint32 {
	if m != nil {
		return m.NoPositions
	}
	return 0
}

func (m *PositionUpdate) GetUnsolicited() uint32 {
	if m != nil {
		return m.Unsolicited
	}
	return 0
}

//============================================================================
type TradeAccountsRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeAccountsRequest) Reset()         { *m = TradeAccountsRequest{} }
func (m *TradeAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*TradeAccountsRequest) ProtoMessage()    {}
func (*TradeAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{58}
}

func (m *TradeAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeAccountsRequest.Unmarshal(m, b)
}
func (m *TradeAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeAccountsRequest.Marshal(b, m, deterministic)
}
func (m *TradeAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeAccountsRequest.Merge(m, src)
}
func (m *TradeAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_TradeAccountsRequest.Size(m)
}
func (m *TradeAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradeAccountsRequest proto.InternalMessageInfo

func (m *TradeAccountsRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

//============================================================================
type TradeAccountResponse struct {
	TotalNumberMessages  int32    `protobuf:"varint,1,opt,name=TotalNumberMessages,proto3" json:"TotalNumberMessages,omitempty"`
	MessageNumber        int32    `protobuf:"varint,2,opt,name=MessageNumber,proto3" json:"MessageNumber,omitempty"`
	TradeAccount         string   `protobuf:"bytes,3,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	RequestID            int32    `protobuf:"varint,4,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeAccountResponse) Reset()         { *m = TradeAccountResponse{} }
func (m *TradeAccountResponse) String() string { return proto.CompactTextString(m) }
func (*TradeAccountResponse) ProtoMessage()    {}
func (*TradeAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{59}
}

func (m *TradeAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeAccountResponse.Unmarshal(m, b)
}
func (m *TradeAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeAccountResponse.Marshal(b, m, deterministic)
}
func (m *TradeAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeAccountResponse.Merge(m, src)
}
func (m *TradeAccountResponse) XXX_Size() int {
	return xxx_messageInfo_TradeAccountResponse.Size(m)
}
func (m *TradeAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TradeAccountResponse proto.InternalMessageInfo

func (m *TradeAccountResponse) GetTotalNumberMessages() int32 {
	if m != nil {
		return m.TotalNumberMessages
	}
	return 0
}

func (m *TradeAccountResponse) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *TradeAccountResponse) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *TradeAccountResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

//============================================================================
type ExchangeListRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeListRequest) Reset()         { *m = ExchangeListRequest{} }
func (m *ExchangeListRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeListRequest) ProtoMessage()    {}
func (*ExchangeListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{60}
}

func (m *ExchangeListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeListRequest.Unmarshal(m, b)
}
func (m *ExchangeListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeListRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeListRequest.Merge(m, src)
}
func (m *ExchangeListRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeListRequest.Size(m)
}
func (m *ExchangeListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeListRequest proto.InternalMessageInfo

func (m *ExchangeListRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

//============================================================================
type ExchangeListResponse struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Exchange             string   `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	IsFinalMessage       uint32   `protobuf:"varint,3,opt,name=IsFinalMessage,proto3" json:"IsFinalMessage,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeListResponse) Reset()         { *m = ExchangeListResponse{} }
func (m *ExchangeListResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeListResponse) ProtoMessage()    {}
func (*ExchangeListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{61}
}

func (m *ExchangeListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeListResponse.Unmarshal(m, b)
}
func (m *ExchangeListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeListResponse.Marshal(b, m, deterministic)
}
func (m *ExchangeListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeListResponse.Merge(m, src)
}
func (m *ExchangeListResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeListResponse.Size(m)
}
func (m *ExchangeListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeListResponse proto.InternalMessageInfo

func (m *ExchangeListResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *ExchangeListResponse) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *ExchangeListResponse) GetIsFinalMessage() uint32 {
	if m != nil {
		return m.IsFinalMessage
	}
	return 0
}

func (m *ExchangeListResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

//============================================================================
type SymbolsForExchangeRequest struct {
	RequestID            int32             `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Exchange             string            `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	SecurityType         SecurityTypeEnum  `protobuf:"varint,3,opt,name=SecurityType,proto3,enum=DTC_PB.SecurityTypeEnum" json:"SecurityType,omitempty"`
	RequestAction        RequestActionEnum `protobuf:"varint,4,opt,name=RequestAction,proto3,enum=DTC_PB.RequestActionEnum" json:"RequestAction,omitempty"`
	Symbol               string            `protobuf:"bytes,5,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SymbolsForExchangeRequest) Reset()         { *m = SymbolsForExchangeRequest{} }
func (m *SymbolsForExchangeRequest) String() string { return proto.CompactTextString(m) }
func (*SymbolsForExchangeRequest) ProtoMessage()    {}
func (*SymbolsForExchangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{62}
}

func (m *SymbolsForExchangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymbolsForExchangeRequest.Unmarshal(m, b)
}
func (m *SymbolsForExchangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymbolsForExchangeRequest.Marshal(b, m, deterministic)
}
func (m *SymbolsForExchangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymbolsForExchangeRequest.Merge(m, src)
}
func (m *SymbolsForExchangeRequest) XXX_Size() int {
	return xxx_messageInfo_SymbolsForExchangeRequest.Size(m)
}
func (m *SymbolsForExchangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SymbolsForExchangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SymbolsForExchangeRequest proto.InternalMessageInfo

func (m *SymbolsForExchangeRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SymbolsForExchangeRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SymbolsForExchangeRequest) GetSecurityType() SecurityTypeEnum {
	if m != nil {
		return m.SecurityType
	}
	return SecurityTypeEnum_SECURITY_TYPE_UNSET
}

func (m *SymbolsForExchangeRequest) GetRequestAction() RequestActionEnum {
	if m != nil {
		return m.RequestAction
	}
	return RequestActionEnum_REQUEST_ACTION_UNSET
}

func (m *SymbolsForExchangeRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

//============================================================================
type UnderlyingSymbolsForExchangeRequest struct {
	RequestID            int32            `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Exchange             string           `protobuf:"bytes,2,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	SecurityType         SecurityTypeEnum `protobuf:"varint,3,opt,name=SecurityType,proto3,enum=DTC_PB.SecurityTypeEnum" json:"SecurityType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UnderlyingSymbolsForExchangeRequest) Reset()         { *m = UnderlyingSymbolsForExchangeRequest{} }
func (m *UnderlyingSymbolsForExchangeRequest) String() string { return proto.CompactTextString(m) }
func (*UnderlyingSymbolsForExchangeRequest) ProtoMessage()    {}
func (*UnderlyingSymbolsForExchangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{63}
}

func (m *UnderlyingSymbolsForExchangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnderlyingSymbolsForExchangeRequest.Unmarshal(m, b)
}
func (m *UnderlyingSymbolsForExchangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnderlyingSymbolsForExchangeRequest.Marshal(b, m, deterministic)
}
func (m *UnderlyingSymbolsForExchangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnderlyingSymbolsForExchangeRequest.Merge(m, src)
}
func (m *UnderlyingSymbolsForExchangeRequest) XXX_Size() int {
	return xxx_messageInfo_UnderlyingSymbolsForExchangeRequest.Size(m)
}
func (m *UnderlyingSymbolsForExchangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnderlyingSymbolsForExchangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnderlyingSymbolsForExchangeRequest proto.InternalMessageInfo

func (m *UnderlyingSymbolsForExchangeRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *UnderlyingSymbolsForExchangeRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *UnderlyingSymbolsForExchangeRequest) GetSecurityType() SecurityTypeEnum {
	if m != nil {
		return m.SecurityType
	}
	return SecurityTypeEnum_SECURITY_TYPE_UNSET
}

//============================================================================
type SymbolsForUnderlyingRequest struct {
	RequestID            int32            `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	UnderlyingSymbol     string           `protobuf:"bytes,2,opt,name=UnderlyingSymbol,proto3" json:"UnderlyingSymbol,omitempty"`
	Exchange             string           `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	SecurityType         SecurityTypeEnum `protobuf:"varint,4,opt,name=SecurityType,proto3,enum=DTC_PB.SecurityTypeEnum" json:"SecurityType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SymbolsForUnderlyingRequest) Reset()         { *m = SymbolsForUnderlyingRequest{} }
func (m *SymbolsForUnderlyingRequest) String() string { return proto.CompactTextString(m) }
func (*SymbolsForUnderlyingRequest) ProtoMessage()    {}
func (*SymbolsForUnderlyingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{64}
}

func (m *SymbolsForUnderlyingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymbolsForUnderlyingRequest.Unmarshal(m, b)
}
func (m *SymbolsForUnderlyingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymbolsForUnderlyingRequest.Marshal(b, m, deterministic)
}
func (m *SymbolsForUnderlyingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymbolsForUnderlyingRequest.Merge(m, src)
}
func (m *SymbolsForUnderlyingRequest) XXX_Size() int {
	return xxx_messageInfo_SymbolsForUnderlyingRequest.Size(m)
}
func (m *SymbolsForUnderlyingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SymbolsForUnderlyingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SymbolsForUnderlyingRequest proto.InternalMessageInfo

func (m *SymbolsForUnderlyingRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SymbolsForUnderlyingRequest) GetUnderlyingSymbol() string {
	if m != nil {
		return m.UnderlyingSymbol
	}
	return ""
}

func (m *SymbolsForUnderlyingRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SymbolsForUnderlyingRequest) GetSecurityType() SecurityTypeEnum {
	if m != nil {
		return m.SecurityType
	}
	return SecurityTypeEnum_SECURITY_TYPE_UNSET
}

//============================================================================
type SymbolSearchRequest struct {
	RequestID            int32            `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	SearchText           string           `protobuf:"bytes,2,opt,name=SearchText,proto3" json:"SearchText,omitempty"`
	Exchange             string           `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	SecurityType         SecurityTypeEnum `protobuf:"varint,4,opt,name=SecurityType,proto3,enum=DTC_PB.SecurityTypeEnum" json:"SecurityType,omitempty"`
	SearchType           SearchTypeEnum   `protobuf:"varint,5,opt,name=SearchType,proto3,enum=DTC_PB.SearchTypeEnum" json:"SearchType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SymbolSearchRequest) Reset()         { *m = SymbolSearchRequest{} }
func (m *SymbolSearchRequest) String() string { return proto.CompactTextString(m) }
func (*SymbolSearchRequest) ProtoMessage()    {}
func (*SymbolSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{65}
}

func (m *SymbolSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymbolSearchRequest.Unmarshal(m, b)
}
func (m *SymbolSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymbolSearchRequest.Marshal(b, m, deterministic)
}
func (m *SymbolSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymbolSearchRequest.Merge(m, src)
}
func (m *SymbolSearchRequest) XXX_Size() int {
	return xxx_messageInfo_SymbolSearchRequest.Size(m)
}
func (m *SymbolSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SymbolSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SymbolSearchRequest proto.InternalMessageInfo

func (m *SymbolSearchRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SymbolSearchRequest) GetSearchText() string {
	if m != nil {
		return m.SearchText
	}
	return ""
}

func (m *SymbolSearchRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SymbolSearchRequest) GetSecurityType() SecurityTypeEnum {
	if m != nil {
		return m.SecurityType
	}
	return SecurityTypeEnum_SECURITY_TYPE_UNSET
}

func (m *SymbolSearchRequest) GetSearchType() SearchTypeEnum {
	if m != nil {
		return m.SearchType
	}
	return SearchTypeEnum_SEARCH_TYPE_UNSET
}

//============================================================================
type SecurityDefinitionForSymbolRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange             string   `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityDefinitionForSymbolRequest) Reset()         { *m = SecurityDefinitionForSymbolRequest{} }
func (m *SecurityDefinitionForSymbolRequest) String() string { return proto.CompactTextString(m) }
func (*SecurityDefinitionForSymbolRequest) ProtoMessage()    {}
func (*SecurityDefinitionForSymbolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{66}
}

func (m *SecurityDefinitionForSymbolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityDefinitionForSymbolRequest.Unmarshal(m, b)
}
func (m *SecurityDefinitionForSymbolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityDefinitionForSymbolRequest.Marshal(b, m, deterministic)
}
func (m *SecurityDefinitionForSymbolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityDefinitionForSymbolRequest.Merge(m, src)
}
func (m *SecurityDefinitionForSymbolRequest) XXX_Size() int {
	return xxx_messageInfo_SecurityDefinitionForSymbolRequest.Size(m)
}
func (m *SecurityDefinitionForSymbolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityDefinitionForSymbolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityDefinitionForSymbolRequest proto.InternalMessageInfo

func (m *SecurityDefinitionForSymbolRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SecurityDefinitionForSymbolRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SecurityDefinitionForSymbolRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

//============================================================================
type SecurityDefinitionResponse struct {
	RequestID                    int32                  `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Symbol                       string                 `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange                     string                 `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	SecurityType                 SecurityTypeEnum       `protobuf:"varint,4,opt,name=SecurityType,proto3,enum=DTC_PB.SecurityTypeEnum" json:"SecurityType,omitempty"`
	Description                  string                 `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	MinPriceIncrement            float32                `protobuf:"fixed32,6,opt,name=MinPriceIncrement,proto3" json:"MinPriceIncrement,omitempty"`
	PriceDisplayFormat           PriceDisplayFormatEnum `protobuf:"varint,7,opt,name=PriceDisplayFormat,proto3,enum=DTC_PB.PriceDisplayFormatEnum" json:"PriceDisplayFormat,omitempty"`
	CurrencyValuePerIncrement    float32                `protobuf:"fixed32,8,opt,name=CurrencyValuePerIncrement,proto3" json:"CurrencyValuePerIncrement,omitempty"`
	IsFinalMessage               uint32                 `protobuf:"varint,9,opt,name=IsFinalMessage,proto3" json:"IsFinalMessage,omitempty"`
	FloatToIntPriceMultiplier    float32                `protobuf:"fixed32,10,opt,name=FloatToIntPriceMultiplier,proto3" json:"FloatToIntPriceMultiplier,omitempty"`
	IntToFloatPriceDivisor       float32                `protobuf:"fixed32,11,opt,name=IntToFloatPriceDivisor,proto3" json:"IntToFloatPriceDivisor,omitempty"`
	UnderlyingSymbol             string                 `protobuf:"bytes,12,opt,name=UnderlyingSymbol,proto3" json:"UnderlyingSymbol,omitempty"`
	UpdatesBidAskOnly            uint32                 `protobuf:"varint,13,opt,name=UpdatesBidAskOnly,proto3" json:"UpdatesBidAskOnly,omitempty"`
	StrikePrice                  float32                `protobuf:"fixed32,14,opt,name=StrikePrice,proto3" json:"StrikePrice,omitempty"`
	PutOrCall                    PutCallEnum            `protobuf:"varint,15,opt,name=PutOrCall,proto3,enum=DTC_PB.PutCallEnum" json:"PutOrCall,omitempty"`
	ShortInterest                uint32                 `protobuf:"varint,16,opt,name=ShortInterest,proto3" json:"ShortInterest,omitempty"`
	SecurityExpirationDate       int32                  `protobuf:"fixed32,17,opt,name=SecurityExpirationDate,proto3" json:"SecurityExpirationDate,omitempty"`
	BuyRolloverInterest          float32                `protobuf:"fixed32,18,opt,name=BuyRolloverInterest,proto3" json:"BuyRolloverInterest,omitempty"`
	SellRolloverInterest         float32                `protobuf:"fixed32,19,opt,name=SellRolloverInterest,proto3" json:"SellRolloverInterest,omitempty"`
	EarningsPerShare             float32                `protobuf:"fixed32,20,opt,name=EarningsPerShare,proto3" json:"EarningsPerShare,omitempty"`
	SharesOutstanding            uint32                 `protobuf:"varint,21,opt,name=SharesOutstanding,proto3" json:"SharesOutstanding,omitempty"`
	IntToFloatQuantityDivisor    float32                `protobuf:"fixed32,22,opt,name=IntToFloatQuantityDivisor,proto3" json:"IntToFloatQuantityDivisor,omitempty"`
	HasMarketDepthData           uint32                 `protobuf:"varint,23,opt,name=HasMarketDepthData,proto3" json:"HasMarketDepthData,omitempty"`
	DisplayPriceMultiplier       float32                `protobuf:"fixed32,24,opt,name=DisplayPriceMultiplier,proto3" json:"DisplayPriceMultiplier,omitempty"`
	ExchangeSymbol               string                 `protobuf:"bytes,25,opt,name=ExchangeSymbol,proto3" json:"ExchangeSymbol,omitempty"`
	InitialMarginRequirement     float32                `protobuf:"fixed32,26,opt,name=InitialMarginRequirement,proto3" json:"InitialMarginRequirement,omitempty"`
	MaintenanceMarginRequirement float32                `protobuf:"fixed32,27,opt,name=MaintenanceMarginRequirement,proto3" json:"MaintenanceMarginRequirement,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}               `json:"-"`
	XXX_unrecognized             []byte                 `json:"-"`
	XXX_sizecache                int32                  `json:"-"`
}

func (m *SecurityDefinitionResponse) Reset()         { *m = SecurityDefinitionResponse{} }
func (m *SecurityDefinitionResponse) String() string { return proto.CompactTextString(m) }
func (*SecurityDefinitionResponse) ProtoMessage()    {}
func (*SecurityDefinitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{67}
}

func (m *SecurityDefinitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityDefinitionResponse.Unmarshal(m, b)
}
func (m *SecurityDefinitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityDefinitionResponse.Marshal(b, m, deterministic)
}
func (m *SecurityDefinitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityDefinitionResponse.Merge(m, src)
}
func (m *SecurityDefinitionResponse) XXX_Size() int {
	return xxx_messageInfo_SecurityDefinitionResponse.Size(m)
}
func (m *SecurityDefinitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityDefinitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityDefinitionResponse proto.InternalMessageInfo

func (m *SecurityDefinitionResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SecurityDefinitionResponse) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *SecurityDefinitionResponse) GetSecurityType() SecurityTypeEnum {
	if m != nil {
		return m.SecurityType
	}
	return SecurityTypeEnum_SECURITY_TYPE_UNSET
}

func (m *SecurityDefinitionResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityDefinitionResponse) GetMinPriceIncrement() float32 {
	if m != nil {
		return m.MinPriceIncrement
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetPriceDisplayFormat() PriceDisplayFormatEnum {
	if m != nil {
		return m.PriceDisplayFormat
	}
	return PriceDisplayFormatEnum_PRICE_DISPLAY_FORMAT_DECIMAL_0
}

func (m *SecurityDefinitionResponse) GetCurrencyValuePerIncrement() float32 {
	if m != nil {
		return m.CurrencyValuePerIncrement
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetIsFinalMessage() uint32 {
	if m != nil {
		return m.IsFinalMessage
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetFloatToIntPriceMultiplier() float32 {
	if m != nil {
		return m.FloatToIntPriceMultiplier
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetIntToFloatPriceDivisor() float32 {
	if m != nil {
		return m.IntToFloatPriceDivisor
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetUnderlyingSymbol() string {
	if m != nil {
		return m.UnderlyingSymbol
	}
	return ""
}

func (m *SecurityDefinitionResponse) GetUpdatesBidAskOnly() uint32 {
	if m != nil {
		return m.UpdatesBidAskOnly
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetStrikePrice() float32 {
	if m != nil {
		return m.StrikePrice
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetPutOrCall() PutCallEnum {
	if m != nil {
		return m.PutOrCall
	}
	return PutCallEnum_PC_UNSET
}

func (m *SecurityDefinitionResponse) GetShortInterest() uint32 {
	if m != nil {
		return m.ShortInterest
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetSecurityExpirationDate() int32 {
	if m != nil {
		return m.SecurityExpirationDate
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetBuyRolloverInterest() float32 {
	if m != nil {
		return m.BuyRolloverInterest
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetSellRolloverInterest() float32 {
	if m != nil {
		return m.SellRolloverInterest
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetEarningsPerShare() float32 {
	if m != nil {
		return m.EarningsPerShare
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetSharesOutstanding() uint32 {
	if m != nil {
		return m.SharesOutstanding
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetIntToFloatQuantityDivisor() float32 {
	if m != nil {
		return m.IntToFloatQuantityDivisor
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetHasMarketDepthData() uint32 {
	if m != nil {
		return m.HasMarketDepthData
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetDisplayPriceMultiplier() float32 {
	if m != nil {
		return m.DisplayPriceMultiplier
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetExchangeSymbol() string {
	if m != nil {
		return m.ExchangeSymbol
	}
	return ""
}

func (m *SecurityDefinitionResponse) GetInitialMarginRequirement() float32 {
	if m != nil {
		return m.InitialMarginRequirement
	}
	return 0
}

func (m *SecurityDefinitionResponse) GetMaintenanceMarginRequirement() float32 {
	if m != nil {
		return m.MaintenanceMarginRequirement
	}
	return 0
}

//============================================================================
type SecurityDefinitionReject struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityDefinitionReject) Reset()         { *m = SecurityDefinitionReject{} }
func (m *SecurityDefinitionReject) String() string { return proto.CompactTextString(m) }
func (*SecurityDefinitionReject) ProtoMessage()    {}
func (*SecurityDefinitionReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{68}
}

func (m *SecurityDefinitionReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityDefinitionReject.Unmarshal(m, b)
}
func (m *SecurityDefinitionReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityDefinitionReject.Marshal(b, m, deterministic)
}
func (m *SecurityDefinitionReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityDefinitionReject.Merge(m, src)
}
func (m *SecurityDefinitionReject) XXX_Size() int {
	return xxx_messageInfo_SecurityDefinitionReject.Size(m)
}
func (m *SecurityDefinitionReject) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityDefinitionReject.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityDefinitionReject proto.InternalMessageInfo

func (m *SecurityDefinitionReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *SecurityDefinitionReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type AccountBalanceRequest struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	TradeAccount         string   `protobuf:"bytes,2,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountBalanceRequest) Reset()         { *m = AccountBalanceRequest{} }
func (m *AccountBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*AccountBalanceRequest) ProtoMessage()    {}
func (*AccountBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{69}
}

func (m *AccountBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBalanceRequest.Unmarshal(m, b)
}
func (m *AccountBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBalanceRequest.Marshal(b, m, deterministic)
}
func (m *AccountBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBalanceRequest.Merge(m, src)
}
func (m *AccountBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_AccountBalanceRequest.Size(m)
}
func (m *AccountBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBalanceRequest proto.InternalMessageInfo

func (m *AccountBalanceRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *AccountBalanceRequest) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

//============================================================================
type AccountBalanceReject struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string   `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountBalanceReject) Reset()         { *m = AccountBalanceReject{} }
func (m *AccountBalanceReject) String() string { return proto.CompactTextString(m) }
func (*AccountBalanceReject) ProtoMessage()    {}
func (*AccountBalanceReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{70}
}

func (m *AccountBalanceReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBalanceReject.Unmarshal(m, b)
}
func (m *AccountBalanceReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBalanceReject.Marshal(b, m, deterministic)
}
func (m *AccountBalanceReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBalanceReject.Merge(m, src)
}
func (m *AccountBalanceReject) XXX_Size() int {
	return xxx_messageInfo_AccountBalanceReject.Size(m)
}
func (m *AccountBalanceReject) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBalanceReject.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBalanceReject proto.InternalMessageInfo

func (m *AccountBalanceReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *AccountBalanceReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

//============================================================================
type AccountBalanceUpdate struct {
	RequestID                       int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	CashBalance                     float64  `protobuf:"fixed64,2,opt,name=CashBalance,proto3" json:"CashBalance,omitempty"`
	BalanceAvailableForNewPositions float64  `protobuf:"fixed64,3,opt,name=BalanceAvailableForNewPositions,proto3" json:"BalanceAvailableForNewPositions,omitempty"`
	AccountCurrency                 string   `protobuf:"bytes,4,opt,name=AccountCurrency,proto3" json:"AccountCurrency,omitempty"`
	TradeAccount                    string   `protobuf:"bytes,5,opt,name=TradeAccount,proto3" json:"TradeAccount,omitempty"`
	SecuritiesValue                 float64  `protobuf:"fixed64,6,opt,name=SecuritiesValue,proto3" json:"SecuritiesValue,omitempty"`
	MarginRequirement               float64  `protobuf:"fixed64,7,opt,name=MarginRequirement,proto3" json:"MarginRequirement,omitempty"`
	TotalNumberMessages             int32    `protobuf:"varint,8,opt,name=TotalNumberMessages,proto3" json:"TotalNumberMessages,omitempty"`
	MessageNumber                   int32    `protobuf:"varint,9,opt,name=MessageNumber,proto3" json:"MessageNumber,omitempty"`
	NoAccountBalances               uint32   `protobuf:"varint,10,opt,name=NoAccountBalances,proto3" json:"NoAccountBalances,omitempty"`
	Unsolicited                     uint32   `protobuf:"varint,11,opt,name=Unsolicited,proto3" json:"Unsolicited,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *AccountBalanceUpdate) Reset()         { *m = AccountBalanceUpdate{} }
func (m *AccountBalanceUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountBalanceUpdate) ProtoMessage()    {}
func (*AccountBalanceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{71}
}

func (m *AccountBalanceUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBalanceUpdate.Unmarshal(m, b)
}
func (m *AccountBalanceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBalanceUpdate.Marshal(b, m, deterministic)
}
func (m *AccountBalanceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBalanceUpdate.Merge(m, src)
}
func (m *AccountBalanceUpdate) XXX_Size() int {
	return xxx_messageInfo_AccountBalanceUpdate.Size(m)
}
func (m *AccountBalanceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBalanceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBalanceUpdate proto.InternalMessageInfo

func (m *AccountBalanceUpdate) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *AccountBalanceUpdate) GetCashBalance() float64 {
	if m != nil {
		return m.CashBalance
	}
	return 0
}

func (m *AccountBalanceUpdate) GetBalanceAvailableForNewPositions() float64 {
	if m != nil {
		return m.BalanceAvailableForNewPositions
	}
	return 0
}

func (m *AccountBalanceUpdate) GetAccountCurrency() string {
	if m != nil {
		return m.AccountCurrency
	}
	return ""
}

func (m *AccountBalanceUpdate) GetTradeAccount() string {
	if m != nil {
		return m.TradeAccount
	}
	return ""
}

func (m *AccountBalanceUpdate) GetSecuritiesValue() float64 {
	if m != nil {
		return m.SecuritiesValue
	}
	return 0
}

func (m *AccountBalanceUpdate) GetMarginRequirement() float64 {
	if m != nil {
		return m.MarginRequirement
	}
	return 0
}

func (m *AccountBalanceUpdate) GetTotalNumberMessages() int32 {
	if m != nil {
		return m.TotalNumberMessages
	}
	return 0
}

func (m *AccountBalanceUpdate) GetMessageNumber() int32 {
	if m != nil {
		return m.MessageNumber
	}
	return 0
}

func (m *AccountBalanceUpdate) GetNoAccountBalances() uint32 {
	if m != nil {
		return m.NoAccountBalances
	}
	return 0
}

func (m *AccountBalanceUpdate) GetUnsolicited() uint32 {
	if m != nil {
		return m.Unsolicited
	}
	return 0
}

//============================================================================
type UserMessage struct {
	UserMessage          string   `protobuf:"bytes,1,opt,name=UserMessage,proto3" json:"UserMessage,omitempty"`
	IsPopupMessage       uint32   `protobuf:"varint,2,opt,name=IsPopupMessage,proto3" json:"IsPopupMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMessage) Reset()         { *m = UserMessage{} }
func (m *UserMessage) String() string { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()    {}
func (*UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{72}
}

func (m *UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMessage.Unmarshal(m, b)
}
func (m *UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMessage.Marshal(b, m, deterministic)
}
func (m *UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessage.Merge(m, src)
}
func (m *UserMessage) XXX_Size() int {
	return xxx_messageInfo_UserMessage.Size(m)
}
func (m *UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessage proto.InternalMessageInfo

func (m *UserMessage) GetUserMessage() string {
	if m != nil {
		return m.UserMessage
	}
	return ""
}

func (m *UserMessage) GetIsPopupMessage() uint32 {
	if m != nil {
		return m.IsPopupMessage
	}
	return 0
}

//============================================================================
type GeneralLogMessage struct {
	MessageText          string   `protobuf:"bytes,3,opt,name=MessageText,proto3" json:"MessageText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralLogMessage) Reset()         { *m = GeneralLogMessage{} }
func (m *GeneralLogMessage) String() string { return proto.CompactTextString(m) }
func (*GeneralLogMessage) ProtoMessage()    {}
func (*GeneralLogMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{73}
}

func (m *GeneralLogMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralLogMessage.Unmarshal(m, b)
}
func (m *GeneralLogMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralLogMessage.Marshal(b, m, deterministic)
}
func (m *GeneralLogMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralLogMessage.Merge(m, src)
}
func (m *GeneralLogMessage) XXX_Size() int {
	return xxx_messageInfo_GeneralLogMessage.Size(m)
}
func (m *GeneralLogMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralLogMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralLogMessage proto.InternalMessageInfo

func (m *GeneralLogMessage) GetMessageText() string {
	if m != nil {
		return m.MessageText
	}
	return ""
}

//============================================================================
type HistoricalPriceDataRequest struct {
	RequestID                        int32                      `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Symbol                           string                     `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Exchange                         string                     `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	RecordInterval                   HistoricalDataIntervalEnum `protobuf:"varint,4,opt,name=RecordInterval,proto3,enum=DTC_PB.HistoricalDataIntervalEnum" json:"RecordInterval,omitempty"`
	StartDateTime                    int64                      `protobuf:"fixed64,5,opt,name=StartDateTime,proto3" json:"StartDateTime,omitempty"`
	EndDateTime                      int64                      `protobuf:"fixed64,6,opt,name=EndDateTime,proto3" json:"EndDateTime,omitempty"`
	MaxDaysToReturn                  uint32                     `protobuf:"varint,7,opt,name=MaxDaysToReturn,proto3" json:"MaxDaysToReturn,omitempty"`
	UseZLibCompression               uint32                     `protobuf:"varint,8,opt,name=UseZLibCompression,proto3" json:"UseZLibCompression,omitempty"`
	RequestDividendAdjustedStockData uint32                     `protobuf:"varint,9,opt,name=RequestDividendAdjustedStockData,proto3" json:"RequestDividendAdjustedStockData,omitempty"`
	Flag_1                           uint32                     `protobuf:"varint,10,opt,name=Flag_1,json=Flag1,proto3" json:"Flag_1,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                   `json:"-"`
	XXX_unrecognized                 []byte                     `json:"-"`
	XXX_sizecache                    int32                      `json:"-"`
}

func (m *HistoricalPriceDataRequest) Reset()         { *m = HistoricalPriceDataRequest{} }
func (m *HistoricalPriceDataRequest) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataRequest) ProtoMessage()    {}
func (*HistoricalPriceDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{74}
}

func (m *HistoricalPriceDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataRequest.Unmarshal(m, b)
}
func (m *HistoricalPriceDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataRequest.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataRequest.Merge(m, src)
}
func (m *HistoricalPriceDataRequest) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataRequest.Size(m)
}
func (m *HistoricalPriceDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataRequest proto.InternalMessageInfo

func (m *HistoricalPriceDataRequest) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *HistoricalPriceDataRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *HistoricalPriceDataRequest) GetRecordInterval() HistoricalDataIntervalEnum {
	if m != nil {
		return m.RecordInterval
	}
	return HistoricalDataIntervalEnum_INTERVAL_TICK
}

func (m *HistoricalPriceDataRequest) GetStartDateTime() int64 {
	if m != nil {
		return m.StartDateTime
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetEndDateTime() int64 {
	if m != nil {
		return m.EndDateTime
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetMaxDaysToReturn() uint32 {
	if m != nil {
		return m.MaxDaysToReturn
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetUseZLibCompression() uint32 {
	if m != nil {
		return m.UseZLibCompression
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetRequestDividendAdjustedStockData() uint32 {
	if m != nil {
		return m.RequestDividendAdjustedStockData
	}
	return 0
}

func (m *HistoricalPriceDataRequest) GetFlag_1() uint32 {
	if m != nil {
		return m.Flag_1
	}
	return 0
}

//============================================================================
type HistoricalPriceDataResponseHeader struct {
	RequestID              int32                      `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RecordInterval         HistoricalDataIntervalEnum `protobuf:"varint,2,opt,name=RecordInterval,proto3,enum=DTC_PB.HistoricalDataIntervalEnum" json:"RecordInterval,omitempty"`
	UseZLibCompression     uint32                     `protobuf:"varint,3,opt,name=UseZLibCompression,proto3" json:"UseZLibCompression,omitempty"`
	NoRecordsToReturn      uint32                     `protobuf:"varint,4,opt,name=NoRecordsToReturn,proto3" json:"NoRecordsToReturn,omitempty"`
	IntToFloatPriceDivisor float32                    `protobuf:"fixed32,5,opt,name=IntToFloatPriceDivisor,proto3" json:"IntToFloatPriceDivisor,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *HistoricalPriceDataResponseHeader) Reset()         { *m = HistoricalPriceDataResponseHeader{} }
func (m *HistoricalPriceDataResponseHeader) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataResponseHeader) ProtoMessage()    {}
func (*HistoricalPriceDataResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{75}
}

func (m *HistoricalPriceDataResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataResponseHeader.Unmarshal(m, b)
}
func (m *HistoricalPriceDataResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataResponseHeader.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataResponseHeader.Merge(m, src)
}
func (m *HistoricalPriceDataResponseHeader) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataResponseHeader.Size(m)
}
func (m *HistoricalPriceDataResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataResponseHeader proto.InternalMessageInfo

func (m *HistoricalPriceDataResponseHeader) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataResponseHeader) GetRecordInterval() HistoricalDataIntervalEnum {
	if m != nil {
		return m.RecordInterval
	}
	return HistoricalDataIntervalEnum_INTERVAL_TICK
}

func (m *HistoricalPriceDataResponseHeader) GetUseZLibCompression() uint32 {
	if m != nil {
		return m.UseZLibCompression
	}
	return 0
}

func (m *HistoricalPriceDataResponseHeader) GetNoRecordsToReturn() uint32 {
	if m != nil {
		return m.NoRecordsToReturn
	}
	return 0
}

func (m *HistoricalPriceDataResponseHeader) GetIntToFloatPriceDivisor() float32 {
	if m != nil {
		return m.IntToFloatPriceDivisor
	}
	return 0
}

//============================================================================
type HistoricalPriceDataReject struct {
	RequestID            int32                                   `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	RejectText           string                                  `protobuf:"bytes,2,opt,name=RejectText,proto3" json:"RejectText,omitempty"`
	RejectReasonCode     HistoricalPriceDataRejectReasonCodeEnum `protobuf:"varint,3,opt,name=RejectReasonCode,proto3,enum=DTC_PB.HistoricalPriceDataRejectReasonCodeEnum" json:"RejectReasonCode,omitempty"`
	RetryTimeInSeconds   uint32                                  `protobuf:"varint,4,opt,name=RetryTimeInSeconds,proto3" json:"RetryTimeInSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *HistoricalPriceDataReject) Reset()         { *m = HistoricalPriceDataReject{} }
func (m *HistoricalPriceDataReject) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataReject) ProtoMessage()    {}
func (*HistoricalPriceDataReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{76}
}

func (m *HistoricalPriceDataReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataReject.Unmarshal(m, b)
}
func (m *HistoricalPriceDataReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataReject.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataReject.Merge(m, src)
}
func (m *HistoricalPriceDataReject) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataReject.Size(m)
}
func (m *HistoricalPriceDataReject) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataReject.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataReject proto.InternalMessageInfo

func (m *HistoricalPriceDataReject) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

func (m *HistoricalPriceDataReject) GetRejectReasonCode() HistoricalPriceDataRejectReasonCodeEnum {
	if m != nil {
		return m.RejectReasonCode
	}
	return HistoricalPriceDataRejectReasonCodeEnum_HPDR_UNSET
}

func (m *HistoricalPriceDataReject) GetRetryTimeInSeconds() uint32 {
	if m != nil {
		return m.RetryTimeInSeconds
	}
	return 0
}

//============================================================================
type HistoricalPriceDataRecordResponse struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	StartDateTime        int64    `protobuf:"fixed64,2,opt,name=StartDateTime,proto3" json:"StartDateTime,omitempty"`
	OpenPrice            float64  `protobuf:"fixed64,3,opt,name=OpenPrice,proto3" json:"OpenPrice,omitempty"`
	HighPrice            float64  `protobuf:"fixed64,4,opt,name=HighPrice,proto3" json:"HighPrice,omitempty"`
	LowPrice             float64  `protobuf:"fixed64,5,opt,name=LowPrice,proto3" json:"LowPrice,omitempty"`
	LastPrice            float64  `protobuf:"fixed64,6,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	Volume               float64  `protobuf:"fixed64,7,opt,name=Volume,proto3" json:"Volume,omitempty"`
	NumTrades            uint32   `protobuf:"varint,8,opt,name=NumTrades,proto3" json:"NumTrades,omitempty"`
	BidVolume            float64  `protobuf:"fixed64,9,opt,name=BidVolume,proto3" json:"BidVolume,omitempty"`
	AskVolume            float64  `protobuf:"fixed64,10,opt,name=AskVolume,proto3" json:"AskVolume,omitempty"`
	IsFinalRecord        uint32   `protobuf:"varint,11,opt,name=IsFinalRecord,proto3" json:"IsFinalRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalPriceDataRecordResponse) Reset()         { *m = HistoricalPriceDataRecordResponse{} }
func (m *HistoricalPriceDataRecordResponse) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataRecordResponse) ProtoMessage()    {}
func (*HistoricalPriceDataRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{77}
}

func (m *HistoricalPriceDataRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse.Unmarshal(m, b)
}
func (m *HistoricalPriceDataRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataRecordResponse.Merge(m, src)
}
func (m *HistoricalPriceDataRecordResponse) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse.Size(m)
}
func (m *HistoricalPriceDataRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataRecordResponse proto.InternalMessageInfo

func (m *HistoricalPriceDataRecordResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetStartDateTime() int64 {
	if m != nil {
		return m.StartDateTime
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetOpenPrice() float64 {
	if m != nil {
		return m.OpenPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetHighPrice() float64 {
	if m != nil {
		return m.HighPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetLowPrice() float64 {
	if m != nil {
		return m.LowPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetLastPrice() float64 {
	if m != nil {
		return m.LastPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetNumTrades() uint32 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetBidVolume() float64 {
	if m != nil {
		return m.BidVolume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetAskVolume() float64 {
	if m != nil {
		return m.AskVolume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse) GetIsFinalRecord() uint32 {
	if m != nil {
		return m.IsFinalRecord
	}
	return 0
}

//============================================================================
type HistoricalPriceDataTickRecordResponse struct {
	RequestID            int32          `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	DateTime             float64        `protobuf:"fixed64,2,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	AtBidOrAsk           AtBidOrAskEnum `protobuf:"varint,3,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"AtBidOrAsk,omitempty"`
	Price                float64        `protobuf:"fixed64,4,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               float64        `protobuf:"fixed64,5,opt,name=Volume,proto3" json:"Volume,omitempty"`
	IsFinalRecord        uint32         `protobuf:"varint,6,opt,name=IsFinalRecord,proto3" json:"IsFinalRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HistoricalPriceDataTickRecordResponse) Reset()         { *m = HistoricalPriceDataTickRecordResponse{} }
func (m *HistoricalPriceDataTickRecordResponse) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataTickRecordResponse) ProtoMessage()    {}
func (*HistoricalPriceDataTickRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{78}
}

func (m *HistoricalPriceDataTickRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse.Unmarshal(m, b)
}
func (m *HistoricalPriceDataTickRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataTickRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataTickRecordResponse.Merge(m, src)
}
func (m *HistoricalPriceDataTickRecordResponse) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse.Size(m)
}
func (m *HistoricalPriceDataTickRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataTickRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataTickRecordResponse proto.InternalMessageInfo

func (m *HistoricalPriceDataTickRecordResponse) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse) GetAtBidOrAsk() AtBidOrAskEnum {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *HistoricalPriceDataTickRecordResponse) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse) GetIsFinalRecord() uint32 {
	if m != nil {
		return m.IsFinalRecord
	}
	return 0
}

//============================================================================
type HistoricalPriceDataRecordResponse_Int struct {
	RequestID            int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	StartDateTime        int64    `protobuf:"fixed64,2,opt,name=StartDateTime,proto3" json:"StartDateTime,omitempty"`
	OpenPrice            int32    `protobuf:"varint,3,opt,name=OpenPrice,proto3" json:"OpenPrice,omitempty"`
	HighPrice            int32    `protobuf:"varint,4,opt,name=HighPrice,proto3" json:"HighPrice,omitempty"`
	LowPrice             int32    `protobuf:"varint,5,opt,name=LowPrice,proto3" json:"LowPrice,omitempty"`
	LastPrice            int32    `protobuf:"varint,6,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	Volume               int32    `protobuf:"varint,7,opt,name=Volume,proto3" json:"Volume,omitempty"`
	NumTrades            uint32   `protobuf:"varint,8,opt,name=NumTrades,proto3" json:"NumTrades,omitempty"`
	BidVolume            int32    `protobuf:"varint,9,opt,name=BidVolume,proto3" json:"BidVolume,omitempty"`
	AskVolume            int32    `protobuf:"varint,10,opt,name=AskVolume,proto3" json:"AskVolume,omitempty"`
	IsFinalRecord        uint32   `protobuf:"varint,11,opt,name=IsFinalRecord,proto3" json:"IsFinalRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoricalPriceDataRecordResponse_Int) Reset()         { *m = HistoricalPriceDataRecordResponse_Int{} }
func (m *HistoricalPriceDataRecordResponse_Int) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataRecordResponse_Int) ProtoMessage()    {}
func (*HistoricalPriceDataRecordResponse_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{79}
}

func (m *HistoricalPriceDataRecordResponse_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse_Int.Unmarshal(m, b)
}
func (m *HistoricalPriceDataRecordResponse_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse_Int.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataRecordResponse_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataRecordResponse_Int.Merge(m, src)
}
func (m *HistoricalPriceDataRecordResponse_Int) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataRecordResponse_Int.Size(m)
}
func (m *HistoricalPriceDataRecordResponse_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataRecordResponse_Int.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataRecordResponse_Int proto.InternalMessageInfo

func (m *HistoricalPriceDataRecordResponse_Int) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetStartDateTime() int64 {
	if m != nil {
		return m.StartDateTime
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetOpenPrice() int32 {
	if m != nil {
		return m.OpenPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetHighPrice() int32 {
	if m != nil {
		return m.HighPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetLowPrice() int32 {
	if m != nil {
		return m.LowPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetLastPrice() int32 {
	if m != nil {
		return m.LastPrice
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetNumTrades() uint32 {
	if m != nil {
		return m.NumTrades
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetBidVolume() int32 {
	if m != nil {
		return m.BidVolume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetAskVolume() int32 {
	if m != nil {
		return m.AskVolume
	}
	return 0
}

func (m *HistoricalPriceDataRecordResponse_Int) GetIsFinalRecord() uint32 {
	if m != nil {
		return m.IsFinalRecord
	}
	return 0
}

//============================================================================
type HistoricalPriceDataTickRecordResponse_Int struct {
	RequestID            int32          `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	DateTime             float64        `protobuf:"fixed64,2,opt,name=DateTime,proto3" json:"DateTime,omitempty"`
	Price                int32          `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Volume               int32          `protobuf:"varint,4,opt,name=Volume,proto3" json:"Volume,omitempty"`
	AtBidOrAsk           AtBidOrAskEnum `protobuf:"varint,5,opt,name=AtBidOrAsk,proto3,enum=DTC_PB.AtBidOrAskEnum" json:"AtBidOrAsk,omitempty"`
	IsFinalRecord        uint32         `protobuf:"varint,6,opt,name=IsFinalRecord,proto3" json:"IsFinalRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HistoricalPriceDataTickRecordResponse_Int) Reset() {
	*m = HistoricalPriceDataTickRecordResponse_Int{}
}
func (m *HistoricalPriceDataTickRecordResponse_Int) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataTickRecordResponse_Int) ProtoMessage()    {}
func (*HistoricalPriceDataTickRecordResponse_Int) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{80}
}

func (m *HistoricalPriceDataTickRecordResponse_Int) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int.Unmarshal(m, b)
}
func (m *HistoricalPriceDataTickRecordResponse_Int) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataTickRecordResponse_Int) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int.Merge(m, src)
}
func (m *HistoricalPriceDataTickRecordResponse_Int) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int.Size(m)
}
func (m *HistoricalPriceDataTickRecordResponse_Int) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataTickRecordResponse_Int proto.InternalMessageInfo

func (m *HistoricalPriceDataTickRecordResponse_Int) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse_Int) GetDateTime() float64 {
	if m != nil {
		return m.DateTime
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse_Int) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse_Int) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *HistoricalPriceDataTickRecordResponse_Int) GetAtBidOrAsk() AtBidOrAskEnum {
	if m != nil {
		return m.AtBidOrAsk
	}
	return AtBidOrAskEnum_BID_ASK_UNSET
}

func (m *HistoricalPriceDataTickRecordResponse_Int) GetIsFinalRecord() uint32 {
	if m != nil {
		return m.IsFinalRecord
	}
	return 0
}

//============================================================================
type HistoricalPriceDataResponseTrailer struct {
	RequestID               int32    `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	FinalRecordLastDateTime float64  `protobuf:"fixed64,2,opt,name=FinalRecordLastDateTime,proto3" json:"FinalRecordLastDateTime,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *HistoricalPriceDataResponseTrailer) Reset()         { *m = HistoricalPriceDataResponseTrailer{} }
func (m *HistoricalPriceDataResponseTrailer) String() string { return proto.CompactTextString(m) }
func (*HistoricalPriceDataResponseTrailer) ProtoMessage()    {}
func (*HistoricalPriceDataResponseTrailer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0723bc79e61980b6, []int{81}
}

func (m *HistoricalPriceDataResponseTrailer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricalPriceDataResponseTrailer.Unmarshal(m, b)
}
func (m *HistoricalPriceDataResponseTrailer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricalPriceDataResponseTrailer.Marshal(b, m, deterministic)
}
func (m *HistoricalPriceDataResponseTrailer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricalPriceDataResponseTrailer.Merge(m, src)
}
func (m *HistoricalPriceDataResponseTrailer) XXX_Size() int {
	return xxx_messageInfo_HistoricalPriceDataResponseTrailer.Size(m)
}
func (m *HistoricalPriceDataResponseTrailer) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricalPriceDataResponseTrailer.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricalPriceDataResponseTrailer proto.InternalMessageInfo

func (m *HistoricalPriceDataResponseTrailer) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *HistoricalPriceDataResponseTrailer) GetFinalRecordLastDateTime() float64 {
	if m != nil {
		return m.FinalRecordLastDateTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("DTC_PB.DTCVersion", DTCVersion_name, DTCVersion_value)
	proto.RegisterEnum("DTC_PB.DTCMessageType", DTCMessageType_name, DTCMessageType_value)
	proto.RegisterEnum("DTC_PB.EncodingEnum", EncodingEnum_name, EncodingEnum_value)
	proto.RegisterEnum("DTC_PB.LogonStatusEnum", LogonStatusEnum_name, LogonStatusEnum_value)
	proto.RegisterEnum("DTC_PB.MessageSupportedEnum", MessageSupportedEnum_name, MessageSupportedEnum_value)
	proto.RegisterEnum("DTC_PB.TradeModeEnum", TradeModeEnum_name, TradeModeEnum_value)
	proto.RegisterEnum("DTC_PB.RequestActionEnum", RequestActionEnum_name, RequestActionEnum_value)
	proto.RegisterEnum("DTC_PB.UnbundledTradeIndicatorEnum", UnbundledTradeIndicatorEnum_name, UnbundledTradeIndicatorEnum_value)
	proto.RegisterEnum("DTC_PB.OrderStatusEnum", OrderStatusEnum_name, OrderStatusEnum_value)
	proto.RegisterEnum("DTC_PB.OrderUpdateReasonEnum", OrderUpdateReasonEnum_name, OrderUpdateReasonEnum_value)
	proto.RegisterEnum("DTC_PB.AtBidOrAskEnum", AtBidOrAskEnum_name, AtBidOrAskEnum_value)
	proto.RegisterEnum("DTC_PB.AtBidOrAskEnum8", AtBidOrAskEnum8_name, AtBidOrAskEnum8_value)
	proto.RegisterEnum("DTC_PB.MarketDepthUpdateTypeEnum", MarketDepthUpdateTypeEnum_name, MarketDepthUpdateTypeEnum_value)
	proto.RegisterEnum("DTC_PB.OrderTypeEnum", OrderTypeEnum_name, OrderTypeEnum_value)
	proto.RegisterEnum("DTC_PB.TimeInForceEnum", TimeInForceEnum_name, TimeInForceEnum_value)
	proto.RegisterEnum("DTC_PB.BuySellEnum", BuySellEnum_name, BuySellEnum_value)
	proto.RegisterEnum("DTC_PB.OpenCloseTradeEnum", OpenCloseTradeEnum_name, OpenCloseTradeEnum_value)
	proto.RegisterEnum("DTC_PB.PartialFillHandlingEnum", PartialFillHandlingEnum_name, PartialFillHandlingEnum_value)
	proto.RegisterEnum("DTC_PB.MarketDataFeedStatusEnum", MarketDataFeedStatusEnum_name, MarketDataFeedStatusEnum_value)
	proto.RegisterEnum("DTC_PB.PriceDisplayFormatEnum", PriceDisplayFormatEnum_name, PriceDisplayFormatEnum_value)
	proto.RegisterEnum("DTC_PB.SecurityTypeEnum", SecurityTypeEnum_name, SecurityTypeEnum_value)
	proto.RegisterEnum("DTC_PB.PutCallEnum", PutCallEnum_name, PutCallEnum_value)
	proto.RegisterEnum("DTC_PB.SearchTypeEnum", SearchTypeEnum_name, SearchTypeEnum_value)
	proto.RegisterEnum("DTC_PB.HistoricalDataIntervalEnum", HistoricalDataIntervalEnum_name, HistoricalDataIntervalEnum_value)
	proto.RegisterEnum("DTC_PB.HistoricalPriceDataRejectReasonCodeEnum", HistoricalPriceDataRejectReasonCodeEnum_name, HistoricalPriceDataRejectReasonCodeEnum_value)
	proto.RegisterType((*EncodingRequest)(nil), "DTC_PB.EncodingRequest")
	proto.RegisterType((*EncodingResponse)(nil), "DTC_PB.EncodingResponse")
	proto.RegisterType((*LogonRequest)(nil), "DTC_PB.LogonRequest")
	proto.RegisterType((*LogonResponse)(nil), "DTC_PB.LogonResponse")
	proto.RegisterType((*Logoff)(nil), "DTC_PB.Logoff")
	proto.RegisterType((*Heartbeat)(nil), "DTC_PB.Heartbeat")
	proto.RegisterType((*MarketDataFeedStatus)(nil), "DTC_PB.MarketDataFeedStatus")
	proto.RegisterType((*MarketDataFeedSymbolStatus)(nil), "DTC_PB.MarketDataFeedSymbolStatus")
	proto.RegisterType((*MarketDataRequest)(nil), "DTC_PB.MarketDataRequest")
	proto.RegisterType((*MarketDepthRequest)(nil), "DTC_PB.MarketDepthRequest")
	proto.RegisterType((*MarketDataReject)(nil), "DTC_PB.MarketDataReject")
	proto.RegisterType((*MarketDataSnapshot)(nil), "DTC_PB.MarketDataSnapshot")
	proto.RegisterType((*MarketDataSnapshot_Int)(nil), "DTC_PB.MarketDataSnapshot_Int")
	proto.RegisterType((*DepthEntry)(nil), "DTC_PB.DepthEntry")
	proto.RegisterType((*MarketDepthFullUpdate20)(nil), "DTC_PB.MarketDepthFullUpdate20")
	proto.RegisterType((*MarketDepthFullUpdate10)(nil), "DTC_PB.MarketDepthFullUpdate10")
	proto.RegisterType((*MarketDepthSnapshotLevel)(nil), "DTC_PB.MarketDepthSnapshotLevel")
	proto.RegisterType((*MarketDepthSnapshotLevel_Int)(nil), "DTC_PB.MarketDepthSnapshotLevel_Int")
	proto.RegisterType((*MarketDepthUpdateLevel)(nil), "DTC_PB.MarketDepthUpdateLevel")
	proto.RegisterType((*MarketDepthUpdateLevel_Int)(nil), "DTC_PB.MarketDepthUpdateLevel_Int")
	proto.RegisterType((*MarketDepthUpdateLevelCompact)(nil), "DTC_PB.MarketDepthUpdateLevelCompact")
	proto.RegisterType((*MarketDataUpdateSessionSettlement)(nil), "DTC_PB.MarketDataUpdateSessionSettlement")
	proto.RegisterType((*MarketDataUpdateSessionSettlement_Int)(nil), "DTC_PB.MarketDataUpdateSessionSettlement_Int")
	proto.RegisterType((*MarketDataUpdateSessionOpen)(nil), "DTC_PB.MarketDataUpdateSessionOpen")
	proto.RegisterType((*MarketDataUpdateSessionOpen_Int)(nil), "DTC_PB.MarketDataUpdateSessionOpen_Int")
	proto.RegisterType((*MarketDataUpdateSessionNumTrades)(nil), "DTC_PB.MarketDataUpdateSessionNumTrades")
	proto.RegisterType((*MarketDataUpdateTradingSessionDate)(nil), "DTC_PB.MarketDataUpdateTradingSessionDate")
	proto.RegisterType((*MarketDepthReject)(nil), "DTC_PB.MarketDepthReject")
	proto.RegisterType((*MarketDataUpdateTrade)(nil), "DTC_PB.MarketDataUpdateTrade")
	proto.RegisterType((*MarketDataUpdateTrade_Int)(nil), "DTC_PB.MarketDataUpdateTrade_Int")
	proto.RegisterType((*MarketDataUpdateTradeWithUnbundledIndicator)(nil), "DTC_PB.MarketDataUpdateTradeWithUnbundledIndicator")
	proto.RegisterType((*MarketDataUpdateBidAsk)(nil), "DTC_PB.MarketDataUpdateBidAsk")
	proto.RegisterType((*MarketDataUpdateBidAsk_Int)(nil), "DTC_PB.MarketDataUpdateBidAsk_Int")
	proto.RegisterType((*MarketDataUpdateBidAskCompact)(nil), "DTC_PB.MarketDataUpdateBidAskCompact")
	proto.RegisterType((*MarketDataUpdateTradeCompact)(nil), "DTC_PB.MarketDataUpdateTradeCompact")
	proto.RegisterType((*MarketDataUpdateSessionVolume)(nil), "DTC_PB.MarketDataUpdateSessionVolume")
	proto.RegisterType((*MarketDataUpdateOpenInterest)(nil), "DTC_PB.MarketDataUpdateOpenInterest")
	proto.RegisterType((*MarketDataUpdateSessionHigh)(nil), "DTC_PB.MarketDataUpdateSessionHigh")
	proto.RegisterType((*MarketDataUpdateSessionHigh_Int)(nil), "DTC_PB.MarketDataUpdateSessionHigh_Int")
	proto.RegisterType((*MarketDataUpdateSessionLow)(nil), "DTC_PB.MarketDataUpdateSessionLow")
	proto.RegisterType((*MarketDataUpdateSessionLow_Int)(nil), "DTC_PB.MarketDataUpdateSessionLow_Int")
	proto.RegisterType((*MarketDataUpdateLastTradeSnapshot)(nil), "DTC_PB.MarketDataUpdateLastTradeSnapshot")
	proto.RegisterType((*SubmitNewSingleOrder)(nil), "DTC_PB.SubmitNewSingleOrder")
	proto.RegisterType((*SubmitNewSingleOrderInt)(nil), "DTC_PB.SubmitNewSingleOrderInt")
	proto.RegisterType((*CancelReplaceOrder)(nil), "DTC_PB.CancelReplaceOrder")
	proto.RegisterType((*CancelReplaceOrderInt)(nil), "DTC_PB.CancelReplaceOrderInt")
	proto.RegisterType((*CancelOrder)(nil), "DTC_PB.CancelOrder")
	proto.RegisterType((*SubmitNewOCOOrder)(nil), "DTC_PB.SubmitNewOCOOrder")
	proto.RegisterType((*SubmitNewOCOOrderInt)(nil), "DTC_PB.SubmitNewOCOOrderInt")
	proto.RegisterType((*OpenOrdersRequest)(nil), "DTC_PB.OpenOrdersRequest")
	proto.RegisterType((*HistoricalOrderFillsRequest)(nil), "DTC_PB.HistoricalOrderFillsRequest")
	proto.RegisterType((*HistoricalOrderFillsReject)(nil), "DTC_PB.HistoricalOrderFillsReject")
	proto.RegisterType((*CurrentPositionsRequest)(nil), "DTC_PB.CurrentPositionsRequest")
	proto.RegisterType((*CurrentPositionsReject)(nil), "DTC_PB.CurrentPositionsReject")
	proto.RegisterType((*OrderUpdate)(nil), "DTC_PB.OrderUpdate")
	proto.RegisterType((*OpenOrdersReject)(nil), "DTC_PB.OpenOrdersReject")
	proto.RegisterType((*HistoricalOrderFillResponse)(nil), "DTC_PB.HistoricalOrderFillResponse")
	proto.RegisterType((*PositionUpdate)(nil), "DTC_PB.PositionUpdate")
	proto.RegisterType((*TradeAccountsRequest)(nil), "DTC_PB.TradeAccountsRequest")
	proto.RegisterType((*TradeAccountResponse)(nil), "DTC_PB.TradeAccountResponse")
	proto.RegisterType((*ExchangeListRequest)(nil), "DTC_PB.ExchangeListRequest")
	proto.RegisterType((*ExchangeListResponse)(nil), "DTC_PB.ExchangeListResponse")
	proto.RegisterType((*SymbolsForExchangeRequest)(nil), "DTC_PB.SymbolsForExchangeRequest")
	proto.RegisterType((*UnderlyingSymbolsForExchangeRequest)(nil), "DTC_PB.UnderlyingSymbolsForExchangeRequest")
	proto.RegisterType((*SymbolsForUnderlyingRequest)(nil), "DTC_PB.SymbolsForUnderlyingRequest")
	proto.RegisterType((*SymbolSearchRequest)(nil), "DTC_PB.SymbolSearchRequest")
	proto.RegisterType((*SecurityDefinitionForSymbolRequest)(nil), "DTC_PB.SecurityDefinitionForSymbolRequest")
	proto.RegisterType((*SecurityDefinitionResponse)(nil), "DTC_PB.SecurityDefinitionResponse")
	proto.RegisterType((*SecurityDefinitionReject)(nil), "DTC_PB.SecurityDefinitionReject")
	proto.RegisterType((*AccountBalanceRequest)(nil), "DTC_PB.AccountBalanceRequest")
	proto.RegisterType((*AccountBalanceReject)(nil), "DTC_PB.AccountBalanceReject")
	proto.RegisterType((*AccountBalanceUpdate)(nil), "DTC_PB.AccountBalanceUpdate")
	proto.RegisterType((*UserMessage)(nil), "DTC_PB.UserMessage")
	proto.RegisterType((*GeneralLogMessage)(nil), "DTC_PB.GeneralLogMessage")
	proto.RegisterType((*HistoricalPriceDataRequest)(nil), "DTC_PB.HistoricalPriceDataRequest")
	proto.RegisterType((*HistoricalPriceDataResponseHeader)(nil), "DTC_PB.HistoricalPriceDataResponseHeader")
	proto.RegisterType((*HistoricalPriceDataReject)(nil), "DTC_PB.HistoricalPriceDataReject")
	proto.RegisterType((*HistoricalPriceDataRecordResponse)(nil), "DTC_PB.HistoricalPriceDataRecordResponse")
	proto.RegisterType((*HistoricalPriceDataTickRecordResponse)(nil), "DTC_PB.HistoricalPriceDataTickRecordResponse")
	proto.RegisterType((*HistoricalPriceDataRecordResponse_Int)(nil), "DTC_PB.HistoricalPriceDataRecordResponse_Int")
	proto.RegisterType((*HistoricalPriceDataTickRecordResponse_Int)(nil), "DTC_PB.HistoricalPriceDataTickRecordResponse_Int")
	proto.RegisterType((*HistoricalPriceDataResponseTrailer)(nil), "DTC_PB.HistoricalPriceDataResponseTrailer")
}

func init() { proto.RegisterFile("DTCProtocol.GPBV3.proto", fileDescriptor_0723bc79e61980b6) }

var fileDescriptor_0723bc79e61980b6 = []byte{
	// 7173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x5b, 0x8c, 0x24, 0xc9,
	0x55, 0xe8, 0x66, 0xd6, 0xa3, 0xbb, 0x4f, 0x4f, 0x77, 0x67, 0xc7, 0xf4, 0x6b, 0x7a, 0x1e, 0xdb,
	0x5b, 0xfb, 0x9a, 0x2d, 0xaf, 0xc7, 0xd3, 0x35, 0xb3, 0xe3, 0xf1, 0xbd, 0xab, 0xbd, 0x37, 0xab,
	0x2a, 0x6b, 0x3a, 0x77, 0xab, 0x2b, 0x6b, 0x33, 0xb3, 0x66, 0x77, 0x6c, 0xdd, 0x5b, 0xca, 0xe9,
	0xca, 0xe9, 0x49, 0x4f, 0x75, 0x55, 0x6f, 0x66, 0xd6, 0xec, 0xf6, 0xbd, 0xc6, 0x36, 0xb6, 0x31,
	0xfe, 0xb0, 0xc0, 0x36, 0x02, 0x24, 0x4b, 0x48, 0x80, 0x6d, 0x10, 0x02, 0x8c, 0x01, 0xf3, 0x81,
	0x64, 0xcb, 0x42, 0x96, 0x3f, 0x10, 0xb6, 0xb1, 0xb0, 0x84, 0x0c, 0x1f, 0xc0, 0x87, 0x81, 0x1f,
	0x40, 0x02, 0x61, 0xf3, 0x32, 0x02, 0xc5, 0x23, 0xdf, 0x99, 0x55, 0xd5, 0x33, 0xb3, 0xbb, 0xb6,
	0xa1, 0xbf, 0x2a, 0xcf, 0x39, 0x11, 0x71, 0xe2, 0xbc, 0x23, 0x32, 0x22, 0x1b, 0xd6, 0xeb, 0x7a,
	0xad, 0x6d, 0x0f, 0xdd, 0xe1, 0xde, 0xb0, 0x7f, 0xe1, 0x5a, 0xbb, 0x7a, 0xfd, 0xd2, 0x85, 0x43,
	0xfc, 0x88, 0x8a, 0x75, 0xbd, 0xd6, 0x6d, 0x57, 0x4b, 0x1f, 0xe7, 0x60, 0x49, 0x1a, 0xec, 0x0d,
	0x7b, 0xd6, 0x60, 0x5f, 0x35, 0x5f, 0x19, 0x99, 0x8e, 0x8b, 0xce, 0xc3, 0x92, 0xd7, 0xe6, 0xba,
	0x69, 0x3b, 0xd6, 0x70, 0xb0, 0xc1, 0x6d, 0x71, 0xe7, 0x0b, 0x6a, 0x1c, 0x8c, 0x2e, 0xc2, 0xac,
	0xd7, 0x78, 0x83, 0xdf, 0xe2, 0xce, 0x2f, 0x56, 0x56, 0x2e, 0xd0, 0x8e, 0x2f, 0x78, 0x70, 0x69,
	0x30, 0x3a, 0x50, 0x7d, 0x2a, 0x54, 0x82, 0x13, 0x5e, 0x27, 0xfa, 0xd1, 0xa1, 0xb9, 0x91, 0xdb,
	0xe2, 0xce, 0xcf, 0xa9, 0x11, 0x58, 0xe9, 0x13, 0x1c, 0x08, 0x01, 0x4f, 0xce, 0xe1, 0x70, 0xe0,
	0x98, 0x6f, 0x3a, 0x53, 0x5f, 0xcc, 0xc1, 0x89, 0xe6, 0x70, 0x7f, 0x38, 0x38, 0xbe, 0x94, 0x36,
	0x61, 0xb6, 0xe3, 0x98, 0xf6, 0xc0, 0x38, 0x30, 0x09, 0x43, 0x73, 0xaa, 0xff, 0x8c, 0x71, 0x6d,
	0xc3, 0x71, 0x5e, 0x1d, 0xda, 0x3d, 0x36, 0xac, 0xff, 0x8c, 0x47, 0xb8, 0x66, 0x0e, 0x4c, 0xdb,
	0xe8, 0xeb, 0xe6, 0x6b, 0x6e, 0xdd, 0x70, 0x8d, 0x8d, 0x3c, 0x21, 0x89, 0x83, 0xd1, 0x69, 0x98,
	0x93, 0x07, 0xae, 0xb9, 0x6f, 0xda, 0xdd, 0xed, 0x8d, 0x02, 0xe1, 0x62, 0x96, 0x01, 0xb6, 0xc3,
	0xc8, 0xca, 0x46, 0x31, 0x82, 0xac, 0xa0, 0xe7, 0x60, 0x73, 0xc7, 0x34, 0x6c, 0xf7, 0xa6, 0x69,
	0xb8, 0x18, 0x68, 0xdf, 0x35, 0xfa, 0xf2, 0x40, 0x33, 0xf7, 0x86, 0x83, 0x9e, 0xb3, 0x31, 0x43,
	0xa8, 0xc7, 0x50, 0xa0, 0x4b, 0x30, 0xa7, 0xdb, 0x46, 0xcf, 0xdc, 0x1d, 0xf6, 0xcc, 0x8d, 0x59,
	0x22, 0xed, 0x55, 0x4f, 0xda, 0x3e, 0x82, 0x88, 0x3b, 0xa0, 0xc3, 0xf2, 0x26, 0x0f, 0xe2, 0xde,
	0xde, 0x70, 0x34, 0x70, 0x37, 0xe6, 0xa8, 0xbc, 0xc3, 0x30, 0x74, 0x01, 0xd0, 0x8e, 0x61, 0xf7,
	0x5e, 0x35, 0x6c, 0x53, 0xee, 0x99, 0x03, 0xd7, 0xba, 0x65, 0x99, 0xf6, 0x06, 0x10, 0xca, 0x14,
	0x0c, 0x3a, 0x07, 0x50, 0xeb, 0x5b, 0xe6, 0xc0, 0x6d, 0x61, 0x31, 0xcf, 0x13, 0xba, 0x10, 0xa4,
	0xf4, 0x99, 0x39, 0x58, 0x60, 0xfa, 0x3b, 0xb6, 0x45, 0xbd, 0x0d, 0x8a, 0xaa, 0xe9, 0x8c, 0xfa,
	0x2e, 0xb3, 0xa7, 0x75, 0x6f, 0x86, 0xa4, 0x43, 0xcd, 0x35, 0xdc, 0x91, 0x43, 0xe6, 0xc8, 0xc8,
	0x30, 0x33, 0xf4, 0x17, 0xd6, 0x10, 0xd3, 0x6b, 0x08, 0x82, 0xca, 0x20, 0xa8, 0x58, 0x80, 0x03,
	0x73, 0xcf, 0x15, 0x7b, 0x3d, 0xdb, 0x74, 0x1c, 0xa6, 0xda, 0x04, 0x7c, 0xbc, 0x6e, 0xcf, 0x01,
	0x68, 0xa6, 0x7d, 0xd7, 0xb4, 0xc9, 0xac, 0x8b, 0x74, 0xa0, 0x00, 0x82, 0x76, 0xe0, 0xe1, 0x5d,
	0xc3, 0xbe, 0x63, 0xba, 0x75, 0xf3, 0xd0, 0xbd, 0xdd, 0x39, 0xec, 0x19, 0xae, 0xe9, 0x54, 0x4d,
	0xc7, 0xad, 0x5a, 0x3d, 0x71, 0xd0, 0x13, 0x9d, 0x3b, 0x44, 0xc7, 0x0b, 0xea, 0x24, 0x32, 0xac,
	0x0f, 0xac, 0x1f, 0x6b, 0xb0, 0x2f, 0x3b, 0xda, 0xe8, 0xf0, 0x70, 0x68, 0xbb, 0x66, 0x8f, 0x68,
	0x7c, 0x41, 0x4d, 0xc1, 0x60, 0x7a, 0xa5, 0xa6, 0x28, 0x76, 0xcf, 0xb4, 0x43, 0xf4, 0x73, 0x94,
	0x3e, 0x89, 0x41, 0xff, 0x1b, 0x4e, 0x13, 0x50, 0xcd, 0x18, 0xec, 0x99, 0x7d, 0xd5, 0x3c, 0xec,
	0x1b, 0x7b, 0x66, 0xd0, 0x10, 0x48, 0xc3, 0x71, 0x24, 0xe8, 0x2a, 0xac, 0x6b, 0x47, 0x07, 0x37,
	0x87, 0x7d, 0xe9, 0xb5, 0xbd, 0xdb, 0xc6, 0x60, 0xdf, 0xac, 0x9b, 0x7d, 0xeb, 0xc0, 0x72, 0x4d,
	0x9b, 0x99, 0x43, 0x16, 0x1a, 0x55, 0xe1, 0x8c, 0x66, 0xee, 0x8d, 0x6c, 0xcb, 0x3d, 0xaa, 0x9b,
	0xb7, 0xac, 0x81, 0xe5, 0x5a, 0xc3, 0x41, 0x88, 0xeb, 0x13, 0x64, 0xf0, 0xb1, 0x34, 0xb8, 0x8f,
	0x1d, 0xcb, 0x71, 0x87, 0xb6, 0xb5, 0x67, 0xf4, 0xdb, 0xb6, 0xb5, 0x67, 0x62, 0xcf, 0x0c, 0xfa,
	0x58, 0xa0, 0x7d, 0x8c, 0xa3, 0x41, 0xd7, 0xe1, 0x09, 0x6c, 0x24, 0x37, 0x9d, 0x3d, 0xdb, 0xba,
	0x69, 0xbe, 0x74, 0xdb, 0x1c, 0x30, 0xad, 0x18, 0xae, 0xd1, 0x30, 0xcd, 0x9e, 0x78, 0xd7, 0xb0,
	0xfa, 0xc6, 0xcd, 0xbe, 0xb9, 0xb1, 0x48, 0x7a, 0x9b, 0x92, 0x1a, 0x5d, 0x81, 0xb5, 0x90, 0x7a,
	0xc3, 0xfa, 0x5b, 0x22, 0xfd, 0x64, 0x60, 0xd1, 0xff, 0x85, 0xb2, 0x32, 0x30, 0x53, 0x58, 0x66,
	0x31, 0xb0, 0x6d, 0xda, 0x35, 0x6a, 0xac, 0xd8, 0x79, 0x04, 0xd2, 0xd7, 0x31, 0x5a, 0x60, 0xbe,
	0xaa, 0xb6, 0xb1, 0x77, 0xc7, 0x74, 0xe3, 0x76, 0xb2, 0x4c, 0xf9, 0x4a, 0xc7, 0x62, 0x59, 0x77,
	0x1c, 0x93, 0x39, 0x01, 0x19, 0x82, 0x50, 0xec, 0x9a, 0x8e, 0x63, 0xec, 0x9b, 0xce, 0x06, 0xa2,
	0xb2, 0x1e, 0x47, 0x83, 0x7a, 0xf0, 0xd6, 0x8e, 0x63, 0x3a, 0xbb, 0xa3, 0xbe, 0x6b, 0x1d, 0xf6,
	0xcd, 0xf6, 0xd0, 0xa1, 0x1a, 0x6d, 0x9b, 0x36, 0x35, 0x13, 0x71, 0xd0, 0x8b, 0x04, 0xa9, 0x93,
	0xa4, 0xd3, 0xe3, 0x35, 0x42, 0x17, 0xe1, 0x64, 0xa0, 0x94, 0x60, 0x7a, 0x2b, 0xa4, 0xaf, 0x34,
	0x54, 0x69, 0x07, 0x8a, 0x38, 0xaa, 0xdc, 0xba, 0x85, 0xd6, 0x70, 0xd4, 0x31, 0x1c, 0x16, 0x96,
	0xe6, 0x54, 0xf6, 0x84, 0x9e, 0x80, 0xc5, 0xfa, 0xb0, 0x35, 0x74, 0xfd, 0x48, 0x41, 0xa2, 0xd2,
	0x82, 0x1a, 0x83, 0x96, 0x4c, 0x98, 0xf3, 0x03, 0x37, 0x76, 0xc7, 0xd6, 0xe8, 0xa0, 0x6e, 0x0f,
	0x0f, 0x0f, 0xcd, 0x9e, 0x2f, 0x28, 0x8e, 0xba, 0x63, 0x12, 0x83, 0x83, 0x63, 0x6d, 0x64, 0xdb,
	0xe6, 0x00, 0xb3, 0x67, 0xea, 0x16, 0x4b, 0x5d, 0x82, 0x1a, 0x07, 0x97, 0xda, 0xb0, 0x12, 0xb5,
	0x3b, 0x1a, 0x0f, 0xd1, 0x55, 0x28, 0xd2, 0x5f, 0x64, 0x94, 0xc5, 0xca, 0x96, 0x17, 0x34, 0xd3,
	0xa8, 0x69, 0xf4, 0xa4, 0xbf, 0x4b, 0x36, 0x6c, 0xc6, 0x68, 0x88, 0x6c, 0x59, 0xbf, 0x9b, 0x30,
	0x4b, 0x9f, 0xe5, 0x3a, 0xe3, 0xdf, 0x7f, 0x0e, 0x8d, 0xc9, 0x1f, 0x73, 0xcc, 0x4f, 0x73, 0xb0,
	0x1c, 0x10, 0x79, 0x39, 0xfe, 0x7f, 0xc1, 0x02, 0xfb, 0x29, 0x52, 0x1b, 0xa7, 0x53, 0x39, 0xe5,
	0x75, 0x1b, 0x41, 0x92, 0xfe, 0xa2, 0xf4, 0x11, 0x66, 0xf9, 0x18, 0xb3, 0x6b, 0x50, 0xa4, 0xbf,
	0x59, 0x82, 0x60, 0x4f, 0xb8, 0x8d, 0x17, 0xa2, 0x58, 0x52, 0xf0, 0x9f, 0x4b, 0x5f, 0xe6, 0x00,
	0x85, 0x9c, 0xf5, 0xfb, 0x95, 0x4f, 0x74, 0x06, 0xe6, 0x5a, 0xa3, 0x83, 0xa6, 0x79, 0xd7, 0xec,
	0x3b, 0x2c, 0x69, 0x05, 0x80, 0x52, 0x0b, 0x84, 0xb0, 0xac, 0xdf, 0x6d, 0xee, 0xb9, 0x63, 0xd5,
	0x4a, 0xd2, 0x29, 0xa6, 0x22, 0xe9, 0x94, 0xf7, 0xd2, 0xa9, 0x07, 0x29, 0xfd, 0x43, 0xc1, 0x97,
	0x0a, 0xf6, 0xa5, 0x81, 0x71, 0xe8, 0xdc, 0x1e, 0x8e, 0xef, 0xf2, 0x0a, 0xac, 0x69, 0xa6, 0x83,
	0xb3, 0xbb, 0x66, 0xba, 0x6e, 0xdf, 0x3c, 0x30, 0x07, 0x2e, 0x89, 0x12, 0xa4, 0x7b, 0x4e, 0xcd,
	0xc0, 0xe2, 0xcc, 0xcd, 0x30, 0xca, 0xa1, 0x39, 0xa0, 0x2d, 0x72, 0xa4, 0x45, 0x02, 0x1e, 0xa2,
	0xdd, 0xb1, 0xf6, 0x6f, 0x53, 0xda, 0x7c, 0x84, 0xd6, 0x87, 0x63, 0x7f, 0x63, 0xb0, 0xe6, 0xf0,
	0x55, 0x4a, 0x5a, 0x20, 0xa4, 0x71, 0x30, 0x7a, 0x0c, 0x16, 0x18, 0xe8, 0xfa, 0xb0, 0x3f, 0x62,
	0x59, 0x9f, 0x53, 0xa3, 0xc0, 0xd0, 0xd8, 0xad, 0xd1, 0x01, 0x09, 0x49, 0x0e, 0xcb, 0xf4, 0x09,
	0x38, 0x2e, 0xc7, 0x30, 0xd3, 0xa4, 0xb8, 0x33, 0x1d, 0x97, 0x25, 0xf5, 0x08, 0x0c, 0xcb, 0xb2,
	0x6a, 0xf5, 0x28, 0x63, 0x73, 0x64, 0x40, 0xff, 0x19, 0xe3, 0x44, 0xe7, 0x0e, 0xc5, 0x01, 0xc5,
	0x79, 0xcf, 0x68, 0x0b, 0xe6, 0x45, 0xe7, 0xce, 0x8b, 0x23, 0x63, 0xe0, 0x5a, 0xee, 0x11, 0x49,
	0xc4, 0x9c, 0x1a, 0x06, 0x61, 0x8a, 0xaa, 0xd5, 0xf3, 0x29, 0x4e, 0x50, 0x8a, 0x10, 0x08, 0x07,
	0xbc, 0xa6, 0xe1, 0xb8, 0x84, 0x5b, 0x3a, 0xca, 0x02, 0x21, 0x8a, 0x41, 0xb1, 0x0c, 0x7d, 0x08,
	0x93, 0xcd, 0x22, 0x95, 0x61, 0x0c, 0x8c, 0x9e, 0x86, 0x65, 0x1f, 0xe4, 0xc7, 0xb7, 0x25, 0x42,
	0x9b, 0x44, 0xe0, 0xf1, 0x71, 0x1d, 0xe4, 0xdc, 0xf1, 0x49, 0x05, 0x3a, 0x7e, 0x14, 0x8a, 0x9e,
	0x85, 0x53, 0x09, 0xab, 0xf1, 0x9b, 0xd0, 0x8c, 0x96, 0x4d, 0x10, 0x2a, 0xb0, 0x18, 0x0d, 0xc6,
	0xb0, 0x54, 0x96, 0x82, 0x29, 0x7d, 0xb7, 0xe0, 0x67, 0xf5, 0x90, 0xd1, 0x77, 0xe5, 0xc1, 0xfd,
	0x18, 0x7e, 0xe1, 0xd8, 0x86, 0x5f, 0x38, 0x86, 0xe1, 0x17, 0xa6, 0x37, 0xfc, 0xc2, 0x94, 0x86,
	0x5f, 0x78, 0xa3, 0x0d, 0xbf, 0x30, 0xc6, 0xf0, 0x0b, 0xe3, 0x0d, 0xbf, 0x30, 0xd1, 0xf0, 0x0b,
	0xd3, 0x18, 0x7e, 0x61, 0x5a, 0xc3, 0x2f, 0xfc, 0x70, 0x1a, 0xfe, 0x73, 0x00, 0x24, 0xf9, 0x49,
	0x03, 0xd7, 0x3e, 0x42, 0x2b, 0x50, 0xa0, 0xa2, 0xe1, 0x08, 0x6b, 0x05, 0x5f, 0x33, 0x11, 0xc1,
	0xf2, 0xaa, 0xff, 0x5c, 0xfa, 0x69, 0x0e, 0xd6, 0x43, 0x39, 0xb4, 0x31, 0xea, 0xf7, 0xe9, 0x8a,
	0xa7, 0x72, 0x71, 0xac, 0xe7, 0x5c, 0x20, 0x96, 0x40, 0xda, 0x6c, 0xf0, 0x5b, 0xb9, 0xf3, 0xf3,
	0x15, 0xe4, 0xe5, 0xd7, 0x80, 0x1f, 0xd5, 0xa7, 0xc1, 0xf4, 0x58, 0x48, 0x84, 0x3e, 0x97, 0x4d,
	0xef, 0xd1, 0x64, 0xf3, 0xb5, 0xfd, 0xe6, 0xf2, 0xf5, 0x75, 0x1e, 0x36, 0x42, 0x7c, 0x79, 0x91,
	0x86, 0xe4, 0xf2, 0xb1, 0x8c, 0x95, 0x21, 0xaf, 0x59, 0x3d, 0x93, 0xd5, 0x62, 0x6b, 0xde, 0x20,
	0x22, 0x5e, 0x55, 0x2a, 0xb6, 0xe8, 0xdc, 0x21, 0x95, 0x08, 0xa1, 0x09, 0xd4, 0x98, 0xcb, 0x52,
	0x23, 0xcd, 0x9c, 0xfe, 0x33, 0x6e, 0x41, 0x58, 0x20, 0xe1, 0x62, 0x41, 0xa5, 0x0f, 0xe8, 0x32,
	0xac, 0xca, 0x4e, 0xc3, 0xb2, 0x1d, 0x97, 0x95, 0xb2, 0xf2, 0xa0, 0x6a, 0xb8, 0x7b, 0xb7, 0x49,
	0xb0, 0x58, 0x50, 0xd3, 0x91, 0xa8, 0x02, 0x2b, 0xb2, 0x83, 0xed, 0x3f, 0xd6, 0x88, 0x06, 0x8e,
	0x54, 0x1c, 0xe6, 0xcd, 0xb7, 0xf1, 0x59, 0xca, 0x9b, 0x6f, 0xd2, 0xb4, 0xfc, 0xa1, 0xcb, 0x16,
	0xb6, 0xe6, 0x0d, 0x00, 0xa5, 0x3f, 0xe2, 0xe1, 0x4c, 0x96, 0x40, 0x27, 0xc6, 0xef, 0x7b, 0x16,
	0x6a, 0x21, 0x4b, 0xa8, 0x85, 0x1f, 0x0a, 0xa1, 0xfe, 0x24, 0x1f, 0x59, 0xe4, 0x52, 0xcf, 0x79,
	0xb3, 0x6d, 0x54, 0x04, 0xa0, 0x8c, 0x90, 0x6d, 0xc5, 0x02, 0x19, 0xe3, 0x91, 0xd8, 0x9a, 0x24,
	0xe0, 0x16, 0x13, 0x91, 0xe1, 0x42, 0x8d, 0x22, 0x12, 0x29, 0x8e, 0x93, 0xc8, 0x4c, 0x5c, 0x22,
	0x3f, 0xc5, 0xfb, 0xeb, 0xa8, 0x98, 0x44, 0xde, 0x64, 0x23, 0x7b, 0x53, 0xa5, 0xf2, 0x33, 0x3c,
	0x9c, 0x4d, 0x97, 0x4a, 0x6d, 0x78, 0x70, 0x68, 0xec, 0xbd, 0x4e, 0x82, 0xe1, 0xb3, 0x04, 0xc3,
	0xbf, 0xbe, 0x82, 0x59, 0x98, 0x5a, 0x30, 0xaf, 0xc0, 0x23, 0x41, 0x39, 0x49, 0x7b, 0x4c, 0xe4,
	0xec, 0xb1, 0xb2, 0xf1, 0xe7, 0xcb, 0xc7, 0xdc, 0xc3, 0x67, 0x28, 0x17, 0x65, 0xa8, 0x34, 0x82,
	0xc7, 0x27, 0x0e, 0x39, 0xd1, 0x56, 0x23, 0xc3, 0x16, 0xb2, 0x86, 0x2d, 0x84, 0x86, 0x7d, 0x1f,
	0x9c, 0xce, 0x18, 0x16, 0x57, 0x7e, 0xf7, 0x30, 0xc7, 0xf4, 0x0a, 0x26, 0x97, 0x59, 0xc1, 0x7c,
	0x90, 0xf3, 0xb7, 0x65, 0xd3, 0x38, 0xb8, 0xc7, 0x29, 0x1f, 0x97, 0x8b, 0x8f, 0x72, 0xb0, 0x95,
	0xc1, 0x45, 0x50, 0x22, 0x8f, 0x63, 0x83, 0xda, 0x13, 0xab, 0xb1, 0x79, 0x7f, 0x91, 0xcf, 0x5a,
	0x1e, 0x97, 0x1d, 0x1d, 0x4a, 0x71, 0x6e, 0x92, 0x54, 0x63, 0xf9, 0x41, 0x90, 0x27, 0x63, 0xd0,
	0x0d, 0x0c, 0xf2, 0xbb, 0xa4, 0xf8, 0xdb, 0x3a, 0x74, 0xbf, 0xe4, 0xbe, 0xf7, 0x1a, 0x7e, 0x87,
	0x83, 0xd5, 0x34, 0x3e, 0xcd, 0x09, 0xab, 0x2e, 0x08, 0x62, 0xc4, 0x84, 0xe8, 0x11, 0xa2, 0xcc,
	0x48, 0x39, 0x6b, 0x50, 0x64, 0x65, 0x3e, 0x4d, 0x38, 0xec, 0x29, 0x62, 0xf4, 0x85, 0x68, 0x54,
	0x2c, 0xfd, 0x2e, 0x07, 0xa7, 0x52, 0xf9, 0x9e, 0x62, 0xc5, 0xf8, 0x00, 0x78, 0x2f, 0xa4, 0xf3,
	0x5e, 0x98, 0x8a, 0xf7, 0x5f, 0xe5, 0xe1, 0x2d, 0xa9, 0xbc, 0xbf, 0x64, 0xb9, 0xb7, 0x3b, 0x83,
	0x9b, 0xa3, 0x41, 0xaf, 0x6f, 0xf6, 0xe4, 0x41, 0xcf, 0xda, 0x33, 0xdc, 0xa1, 0x3d, 0x76, 0x36,
	0x6f, 0x4f, 0x99, 0xcd, 0x7a, 0xfa, 0x6c, 0xae, 0x46, 0xa6, 0xf3, 0x7f, 0x60, 0xdd, 0x1f, 0x8a,
	0x0c, 0xee, 0x8f, 0x47, 0x26, 0xb8, 0x58, 0x79, 0xd4, 0xeb, 0x25, 0x83, 0x8c, 0x08, 0x28, 0xab,
	0x8f, 0x40, 0x5a, 0xf9, 0x74, 0x4d, 0xd3, 0x82, 0x2c, 0x4d, 0x5a, 0xb1, 0xfc, 0x57, 0xfa, 0x2a,
	0x17, 0xde, 0x18, 0xa0, 0xd2, 0xa2, 0x0b, 0xb6, 0xb1, 0x82, 0x09, 0x2f, 0x74, 0xf9, 0xd8, 0x0e,
	0x4f, 0x6c, 0xa9, 0x4a, 0x13, 0x5a, 0x64, 0xa9, 0x1a, 0x5e, 0x0a, 0xe7, 0xc7, 0xef, 0x01, 0x15,
	0x68, 0xeb, 0xf0, 0x52, 0x38, 0x3e, 0x9d, 0xa5, 0xd0, 0x74, 0xbe, 0xc1, 0x85, 0xb7, 0x83, 0xc3,
	0xd3, 0x99, 0x68, 0xb9, 0xf1, 0x29, 0x15, 0xc6, 0x4f, 0xa9, 0x30, 0x7e, 0x4a, 0x85, 0xf1, 0x53,
	0x2a, 0x4c, 0x3f, 0xa5, 0x6f, 0x72, 0x7e, 0x0d, 0x12, 0x9b, 0x52, 0xa8, 0x06, 0xf1, 0x39, 0xe7,
	0x68, 0x95, 0x90, 0xc5, 0x39, 0x3f, 0x5e, 0x19, 0x54, 0x57, 0x99, 0x9c, 0xe7, 0xc7, 0x2b, 0xa3,
	0x10, 0xe5, 0x3c, 0x22, 0xed, 0x62, 0x54, 0xda, 0xa5, 0x2f, 0x70, 0xfe, 0xb2, 0x26, 0xea, 0xa5,
	0xde, 0xa4, 0x22, 0x4b, 0x75, 0x3e, 0x69, 0xe2, 0x74, 0x26, 0x69, 0x26, 0x9e, 0x1b, 0xc3, 0x46,
	0x7e, 0x6c, 0xb8, 0x2a, 0x4c, 0x1b, 0xae, 0x70, 0x52, 0x3e, 0x9b, 0x91, 0x0e, 0x03, 0x8e, 0x32,
	0x4d, 0x2d, 0x3a, 0x8b, 0x20, 0x24, 0x1f, 0x37, 0x0b, 0xfe, 0x44, 0x8a, 0x10, 0xe3, 0xfb, 0x51,
	0x99, 0x4c, 0xc4, 0xf7, 0xb3, 0xf8, 0x94, 0xfd, 0xac, 0xe3, 0x32, 0x94, 0x5d, 0x2c, 0xed, 0x58,
	0xfb, 0xb7, 0xdf, 0xdc, 0x62, 0x09, 0x73, 0xf0, 0x06, 0x15, 0x4b, 0xef, 0x4d, 0x06, 0xa1, 0x60,
	0x7f, 0xf2, 0x0d, 0x90, 0xc2, 0x07, 0x38, 0x38, 0x97, 0xcd, 0xc0, 0x1b, 0x24, 0x84, 0x2f, 0x71,
	0xc9, 0x35, 0x82, 0xbf, 0x6b, 0x38, 0xd5, 0x6b, 0x97, 0xe4, 0x8e, 0x26, 0x3f, 0xed, 0x56, 0x7e,
	0xee, 0x18, 0x5b, 0xf9, 0xf9, 0x8c, 0x1d, 0xcd, 0xd2, 0x9f, 0xe7, 0x61, 0x45, 0x1b, 0xdd, 0x3c,
	0xb0, 0xdc, 0x96, 0xf9, 0xaa, 0x66, 0x0d, 0xf6, 0xfb, 0xf4, 0xb5, 0x70, 0xe8, 0x25, 0x17, 0x97,
	0xf9, 0x92, 0x8b, 0x8f, 0xbd, 0xe4, 0x8a, 0x1f, 0x63, 0xc9, 0xa5, 0x1c, 0x63, 0x79, 0x0c, 0x16,
	0xe8, 0x21, 0x14, 0x32, 0x0c, 0x0b, 0x57, 0x73, 0x6a, 0x14, 0x88, 0x2e, 0xc1, 0x1c, 0xf9, 0x19,
	0x5a, 0xf7, 0xf9, 0xa7, 0x68, 0x7c, 0x04, 0x3d, 0x45, 0xe3, 0x3f, 0xa2, 0xb7, 0xc2, 0x4c, 0x75,
	0x74, 0xa4, 0x99, 0xfd, 0x3e, 0x09, 0xc5, 0x8b, 0x95, 0x93, 0x5e, 0x13, 0x06, 0x26, 0x0d, 0x3c,
	0x1a, 0x3c, 0x43, 0x22, 0xdb, 0x6d, 0xb2, 0xf4, 0xe3, 0x54, 0xf6, 0xe4, 0xc3, 0x2b, 0x6c, 0xc3,
	0x85, 0x3d, 0x45, 0x16, 0xaa, 0x73, 0xb1, 0x7d, 0x8d, 0x77, 0xc0, 0x3c, 0x16, 0xa7, 0x3c, 0x68,
	0x0c, 0x6d, 0xb6, 0xf7, 0x1d, 0xaa, 0xa2, 0x42, 0x28, 0xc2, 0x42, 0x98, 0x16, 0x95, 0x41, 0xb8,
	0x36, 0x1c, 0xf6, 0x74, 0xab, 0xdf, 0xf7, 0xd5, 0x35, 0x4f, 0xde, 0x2c, 0x27, 0xe0, 0x98, 0x56,
	0x76, 0xc4, 0x91, 0x3b, 0x3c, 0x30, 0x5c, 0xb3, 0x47, 0x66, 0xce, 0xce, 0x62, 0x24, 0xe0, 0x58,
	0xd0, 0xb2, 0xd3, 0x36, 0x6c, 0x4f, 0xaa, 0xec, 0xc0, 0x45, 0x14, 0x88, 0x55, 0xd6, 0xb0, 0x4d,
	0xb3, 0x31, 0xb4, 0x0f, 0x48, 0x7d, 0xbf, 0x48, 0x55, 0x16, 0x86, 0xa1, 0x67, 0x61, 0x1e, 0x47,
	0x4c, 0xc5, 0xae, 0xf5, 0x87, 0x0e, 0xdd, 0x1d, 0x5f, 0xac, 0x6c, 0xfa, 0xea, 0x38, 0x34, 0x07,
	0x04, 0x41, 0xd4, 0x4c, 0xe7, 0x17, 0x22, 0x2f, 0x7d, 0x2f, 0x0f, 0xeb, 0x69, 0x16, 0x86, 0x3d,
	0xf4, 0xbf, 0x9a, 0x91, 0xe5, 0x32, 0x8c, 0x2c, 0xe7, 0x1b, 0xd9, 0x06, 0xcc, 0xd4, 0xad, 0xbb,
	0x96, 0x33, 0xb4, 0x89, 0x8d, 0xf1, 0xaa, 0xf7, 0x18, 0x31, 0x3f, 0x20, 0x6d, 0x32, 0xcd, 0x6f,
	0xfe, 0x3e, 0xcd, 0xef, 0xc4, 0x31, 0xcc, 0x6f, 0x61, 0x5a, 0xf3, 0x5b, 0x9c, 0xc6, 0xfc, 0x96,
	0x26, 0x9b, 0x9f, 0x70, 0x3c, 0xf3, 0xfb, 0xd9, 0x1c, 0xa0, 0xc8, 0xf9, 0x28, 0x9f, 0x3d, 0x7a,
	0x2a, 0xcc, 0xb3, 0x10, 0x6a, 0x80, 0x51, 0x60, 0xd2, 0x8e, 0xf8, 0x34, 0x3b, 0x0a, 0x74, 0x9c,
	0xcb, 0x08, 0x24, 0xf9, 0xcc, 0x40, 0x52, 0x88, 0x05, 0x92, 0x2d, 0x98, 0xa7, 0xad, 0x65, 0x47,
	0x33, 0x5d, 0x56, 0x52, 0x86, 0x41, 0x3e, 0x45, 0x85, 0x52, 0xcc, 0x84, 0x28, 0x28, 0x28, 0x6e,
	0x0d, 0x73, 0xf7, 0x69, 0x0d, 0xd8, 0xd8, 0xf2, 0x29, 0xd6, 0xf0, 0x1c, 0x6c, 0xd2, 0x8c, 0x47,
	0xb9, 0x53, 0x6e, 0xdd, 0x72, 0x4c, 0x57, 0x1f, 0x52, 0xf5, 0x12, 0x1b, 0x5c, 0x50, 0xc7, 0x50,
	0x94, 0x3e, 0x9f, 0x83, 0xd5, 0xa4, 0x66, 0x64, 0xea, 0xbe, 0xaf, 0x93, 0x72, 0x72, 0x19, 0xca,
	0x49, 0x75, 0xc0, 0x42, 0xb6, 0x03, 0x16, 0x63, 0x0e, 0x18, 0x53, 0xdb, 0xcc, 0x44, 0xb5, 0xcd,
	0x4e, 0x54, 0xdb, 0x83, 0xc8, 0x21, 0xc7, 0x57, 0xdb, 0x89, 0x89, 0x6a, 0xbb, 0x01, 0xf3, 0x54,
	0x6b, 0x0f, 0xdc, 0x91, 0x4a, 0x5f, 0x9e, 0x81, 0x65, 0x3f, 0x55, 0x78, 0x47, 0x22, 0xef, 0x29,
	0x49, 0x3c, 0x09, 0x4b, 0x91, 0xae, 0xbb, 0xdb, 0x2c, 0x4f, 0x2c, 0x46, 0xc0, 0xdb, 0xe8, 0x0a,
	0xcc, 0xfb, 0xb1, 0xbd, 0xbb, 0x4d, 0x6c, 0x21, 0x33, 0x0b, 0x80, 0xff, 0xb8, 0x8d, 0x2e, 0xc2,
	0x1c, 0x0b, 0xf1, 0xec, 0x10, 0x6a, 0x46, 0x22, 0x98, 0x65, 0x0f, 0xdb, 0xe8, 0x14, 0xcc, 0x52,
	0x79, 0x76, 0xb7, 0xd9, 0x0e, 0xc5, 0x0c, 0x7d, 0x0e, 0x50, 0x95, 0xae, 0x57, 0x8b, 0x50, 0x54,
	0x65, 0x1b, 0x9d, 0x05, 0xf0, 0x8c, 0xac, 0xbb, 0xcd, 0x0a, 0x92, 0x39, 0x0f, 0xb2, 0x9d, 0x9c,
	0x67, 0x85, 0x9d, 0x1d, 0x8e, 0xce, 0xb3, 0x12, 0x9d, 0x67, 0x85, 0x19, 0xd7, 0xc4, 0x79, 0x56,
	0xc2, 0xf3, 0xac, 0xb0, 0xbc, 0x32, 0x76, 0x9e, 0x95, 0xd0, 0x3c, 0x2b, 0xec, 0xec, 0x0a, 0x9b,
	0x67, 0x25, 0x34, 0xcf, 0x0a, 0x3b, 0xb1, 0xc2, 0xe6, 0x59, 0x89, 0xcc, 0xb3, 0xc2, 0x4e, 0xa9,
	0xf8, 0xf3, 0xac, 0xc4, 0x7d, 0x63, 0xe9, 0x3e, 0x7d, 0x43, 0xc8, 0x48, 0x70, 0xf1, 0xda, 0x62,
	0x39, 0xa5, 0xb6, 0x48, 0x4b, 0x82, 0x28, 0x23, 0x09, 0x3e, 0x07, 0x9b, 0xd4, 0x6b, 0x74, 0xdb,
	0xda, 0xdf, 0x37, 0xed, 0xa8, 0x0f, 0x9c, 0x24, 0xbd, 0x8f, 0xa1, 0x48, 0xa4, 0xc7, 0x95, 0xc9,
	0xe9, 0x71, 0xf5, 0x58, 0xe9, 0x11, 0xbd, 0x08, 0x27, 0xdb, 0x86, 0xed, 0x5a, 0x46, 0xbf, 0x61,
	0xf5, 0xfb, 0x3b, 0xc6, 0xa0, 0xd7, 0xb7, 0x06, 0xfb, 0x1b, 0x6b, 0xa4, 0x97, 0x87, 0xbd, 0x5e,
	0x52, 0x48, 0x48, 0x57, 0x69, 0x6d, 0x4b, 0x7f, 0x31, 0x13, 0x5a, 0x52, 0x78, 0x5e, 0x7c, 0xaf,
	0xd5, 0xde, 0x0f, 0x80, 0x23, 0xe7, 0xb2, 0x1d, 0x39, 0x37, 0xce, 0x91, 0x73, 0x3f, 0x60, 0x8e,
	0x9c, 0xcb, 0x76, 0xe4, 0xdc, 0x38, 0x47, 0xce, 0xfd, 0xb7, 0x23, 0x4f, 0xe5, 0xc8, 0xa1, 0xca,
	0x63, 0x35, 0x5a, 0x79, 0xc4, 0x5c, 0x7c, 0xed, 0x81, 0xb8, 0xf8, 0xfa, 0x7d, 0xb8, 0xf8, 0x2f,
	0x73, 0xb0, 0x4c, 0x87, 0xe8, 0x99, 0xb6, 0xe3, 0x1d, 0xba, 0x3d, 0x03, 0x73, 0xec, 0x27, 0x2b,
	0x03, 0x0a, 0x6a, 0x00, 0xa0, 0x57, 0x3c, 0xe8, 0x11, 0xdb, 0x7e, 0x9f, 0xbd, 0x73, 0xa5, 0x9b,
	0x2f, 0x09, 0x78, 0xb2, 0xa8, 0xc8, 0xa5, 0x15, 0x15, 0x71, 0x25, 0xe7, 0x93, 0x4a, 0x2e, 0xfd,
	0x0a, 0x07, 0xa7, 0x83, 0xd3, 0xf7, 0xa4, 0x25, 0x9e, 0xc9, 0x94, 0x3c, 0x27, 0xf8, 0xe0, 0x33,
	0xf8, 0x68, 0x8d, 0x0e, 0x6e, 0x9a, 0xb6, 0x72, 0xab, 0x6e, 0x1c, 0x39, 0x6c, 0xeb, 0x3c, 0x02,
	0x9b, 0x8a, 0xd7, 0x77, 0xc2, 0x66, 0x3a, 0xab, 0xe4, 0x1d, 0xdd, 0x78, 0x4e, 0x27, 0xbd, 0xa5,
	0x7b, 0x17, 0xac, 0xb3, 0x73, 0xea, 0xfe, 0x19, 0xfd, 0xe9, 0x44, 0x10, 0x67, 0x9c, 0x4f, 0x61,
	0xfc, 0x3a, 0xac, 0x25, 0x3b, 0x7f, 0x00, 0x4c, 0xff, 0xf1, 0x3c, 0x0b, 0x76, 0xb4, 0x1c, 0x9d,
	0x6c, 0x60, 0xfa, 0xd0, 0x35, 0xfa, 0xad, 0xd1, 0x81, 0x7f, 0x9e, 0x9f, 0x19, 0x58, 0x1c, 0x8e,
	0x15, 0xcb, 0x7e, 0x53, 0x2d, 0x31, 0x9d, 0x45, 0x81, 0xa1, 0x84, 0x95, 0xcf, 0x4c, 0x58, 0x85,
	0x58, 0xc2, 0xba, 0x0c, 0xab, 0x6d, 0xdb, 0xbc, 0x6b, 0x0d, 0x47, 0x4e, 0xd4, 0x74, 0xe8, 0x5d,
	0xa4, 0x74, 0x64, 0xd2, 0xd0, 0x66, 0xa6, 0xaa, 0xa2, 0x67, 0xd3, 0x56, 0x3c, 0xe7, 0x61, 0xc9,
	0xe3, 0xc6, 0xa3, 0xa3, 0xa9, 0x24, 0x0e, 0xc6, 0xc1, 0x98, 0xfc, 0x64, 0x57, 0x04, 0x62, 0x2b,
	0x8e, 0x10, 0x8a, 0x05, 0x95, 0x00, 0x80, 0x5e, 0x80, 0xe5, 0x90, 0x66, 0xd8, 0xb5, 0x0c, 0x9a,
	0x56, 0xce, 0x46, 0x3a, 0x08, 0x13, 0x90, 0x6e, 0x92, 0xed, 0xa2, 0x1b, 0x31, 0x27, 0x8e, 0xbf,
	0x11, 0xb3, 0x70, 0xac, 0x8d, 0x98, 0xc5, 0x8c, 0x45, 0xfa, 0x52, 0x64, 0x91, 0x1e, 0x4b, 0x54,
	0xc2, 0x7d, 0x26, 0xaa, 0xe5, 0x8c, 0x44, 0xf5, 0x18, 0x2c, 0x90, 0x29, 0xf9, 0x2b, 0x4b, 0x44,
	0x0f, 0xaf, 0x47, 0x80, 0xe8, 0x09, 0x58, 0xc4, 0xa1, 0xc0, 0x0c, 0x5e, 0x72, 0x9d, 0xa4, 0xbb,
	0xc4, 0x51, 0x28, 0x7a, 0x1a, 0x96, 0x55, 0xf3, 0xc0, 0xb0, 0x06, 0xd6, 0x60, 0xdf, 0x27, 0x5d,
	0xa1, 0x7b, 0xbf, 0x09, 0x04, 0xe6, 0x53, 0xbc, 0x6b, 0xda, 0xc6, 0xbe, 0x89, 0xbb, 0xa1, 0xbb,
	0xcf, 0xab, 0xf4, 0x38, 0x7e, 0x1c, 0x8e, 0xf9, 0x6c, 0x1a, 0x8e, 0x1b, 0x10, 0xae, 0x51, 0x3e,
	0x23, 0x40, 0xdc, 0xa3, 0x07, 0xf0, 0x67, 0xbe, 0x4e, 0x67, 0x1e, 0x87, 0x87, 0x69, 0x7d, 0x56,
	0x37, 0xe8, 0xe8, 0x71, 0x38, 0xba, 0x08, 0x27, 0x3d, 0x98, 0xf4, 0x9a, 0xb9, 0x37, 0xc2, 0x21,
	0x46, 0xae, 0x6f, 0x9c, 0x22, 0x66, 0x9d, 0x86, 0x4a, 0x84, 0xad, 0xcd, 0x94, 0x02, 0x60, 0x13,
	0x66, 0xe5, 0xc1, 0xad, 0x21, 0x09, 0x3e, 0xa7, 0xa9, 0x1b, 0x7b, 0xcf, 0x18, 0xd7, 0x1a, 0xb2,
	0x2c, 0x75, 0x86, 0xee, 0xd9, 0x7b, 0xcf, 0x98, 0x1b, 0x9a, 0xea, 0xa3, 0x2e, 0x7b, 0x96, 0x72,
	0x93, 0x82, 0x22, 0x77, 0xf9, 0x6a, 0x4a, 0xd3, 0x1a, 0xdc, 0x61, 0x05, 0x45, 0xb4, 0xe5, 0x39,
	0xd2, 0x72, 0x1c, 0x49, 0xbc, 0x04, 0x78, 0xf8, 0x78, 0x25, 0x40, 0x28, 0x28, 0x45, 0x03, 0xc8,
	0x56, 0x34, 0x28, 0x8d, 0x2f, 0x5a, 0x1e, 0x49, 0x29, 0x5a, 0x2e, 0xc3, 0x2a, 0x21, 0x57, 0xcd,
	0x3d, 0xd3, 0xba, 0x6b, 0xf6, 0x7c, 0xb5, 0x97, 0x88, 0xda, 0xd3, 0x91, 0xa5, 0x36, 0x08, 0xe1,
	0xf2, 0xe1, 0x01, 0xa4, 0x8a, 0x4f, 0xe6, 0x53, 0xf3, 0xbc, 0x7f, 0xb7, 0x75, 0x7c, 0xef, 0x17,
	0xe1, 0xa4, 0x97, 0x22, 0x6e, 0x86, 0xae, 0xcd, 0xd1, 0xec, 0x91, 0x86, 0x7a, 0x1d, 0x13, 0x48,
	0x22, 0x15, 0x14, 0xd3, 0x52, 0x41, 0x28, 0xfa, 0xcd, 0x4c, 0x11, 0xfd, 0xfc, 0xd7, 0x5d, 0xb3,
	0x59, 0x47, 0xd1, 0xe6, 0x88, 0xbe, 0x22, 0x6f, 0x94, 0x23, 0xdb, 0xcd, 0xe1, 0x4d, 0xca, 0xa7,
	0x61, 0xb9, 0x33, 0xb0, 0x5e, 0x19, 0x99, 0x61, 0x67, 0xa4, 0x57, 0x4a, 0x93, 0x88, 0x84, 0x2b,
	0x9e, 0x48, 0x71, 0xc5, 0xab, 0x30, 0xe7, 0xdb, 0x30, 0x0b, 0xe7, 0xe3, 0x8c, 0x3b, 0x20, 0x26,
	0xc5, 0xd7, 0x30, 0x28, 0x96, 0xd8, 0x36, 0x73, 0x04, 0x56, 0xfa, 0x44, 0x0e, 0x16, 0xbd, 0xca,
	0x64, 0xaa, 0x52, 0xe2, 0xfb, 0xc9, 0x1e, 0xe2, 0xdb, 0x8e, 0x61, 0x45, 0x94, 0xe0, 0x04, 0x8b,
	0xd4, 0x54, 0xbb, 0x74, 0xf3, 0x28, 0x02, 0x43, 0x17, 0x00, 0x79, 0x73, 0x0f, 0xdd, 0x1b, 0xa7,
	0x95, 0x43, 0x0a, 0x66, 0xaa, 0xbb, 0xe8, 0x5b, 0x30, 0xdf, 0x1a, 0xfa, 0xb5, 0x1e, 0xbb, 0x8b,
	0x1c, 0x06, 0x61, 0x8a, 0xce, 0xc0, 0x19, 0xf6, 0xad, 0x3d, 0xcb, 0x35, 0x7b, 0x6c, 0x37, 0x38,
	0x0c, 0x2a, 0x5d, 0x86, 0x95, 0x70, 0x9f, 0xd3, 0x95, 0xa3, 0xa5, 0xcf, 0x71, 0xd1, 0x66, 0xbe,
	0x83, 0x67, 0xa8, 0x8c, 0x3b, 0x86, 0xca, 0xf8, 0x34, 0x95, 0x4d, 0xf3, 0xba, 0x29, 0xc2, 0x72,
	0x3e, 0xce, 0xf2, 0x25, 0x38, 0xe9, 0x29, 0xb3, 0x69, 0x39, 0xee, 0x74, 0xf3, 0xfc, 0x24, 0x07,
	0x2b, 0xd1, 0x56, 0x53, 0x05, 0xb2, 0x71, 0x5b, 0x29, 0x4f, 0xc0, 0xa2, 0xec, 0x34, 0xac, 0x81,
	0xd1, 0x67, 0x33, 0x64, 0x2f, 0xb6, 0x63, 0x50, 0xac, 0xba, 0xba, 0xe9, 0xec, 0xd9, 0xd6, 0x21,
	0xb9, 0x39, 0x49, 0x2d, 0x35, 0x0c, 0x2a, 0xfd, 0x0d, 0x07, 0xa7, 0xa8, 0xe5, 0x3a, 0x8d, 0xa1,
	0xed, 0x0d, 0x30, 0xdd, 0x7a, 0x62, 0x1c, 0x87, 0xcf, 0xc2, 0x09, 0xef, 0x4a, 0xb9, 0xff, 0xd9,
	0x89, 0xc5, 0xca, 0x86, 0x17, 0x08, 0xc2, 0x38, 0x12, 0x06, 0x22, 0xd4, 0xc9, 0x3b, 0x9f, 0xf9,
	0x63, 0xde, 0xf9, 0x0c, 0xbc, 0xb3, 0x10, 0xf6, 0xce, 0xd2, 0xcf, 0x71, 0xf0, 0x68, 0x67, 0xd0,
	0x33, 0xed, 0xfe, 0x91, 0x35, 0xd8, 0xff, 0xbe, 0x9b, 0x78, 0xe9, 0xf7, 0x38, 0x38, 0x1d, 0x70,
	0x15, 0x70, 0x3a, 0xf5, 0xba, 0x3c, 0x3e, 0x39, 0xc6, 0x5f, 0x02, 0x1e, 0x99, 0x43, 0x6e, 0xc2,
	0x1c, 0xf2, 0xc7, 0x9a, 0xc3, 0x5f, 0x72, 0x70, 0x92, 0xdd, 0x6a, 0x36, 0x0d, 0x7b, 0xef, 0xf6,
	0x74, 0xbc, 0x93, 0xaf, 0x3d, 0x60, 0xf2, 0x70, 0x55, 0x10, 0x40, 0x5e, 0x3f, 0x7e, 0xd1, 0x15,
	0x7f, 0xe4, 0xe0, 0xe5, 0xf1, 0x5a, 0xd0, 0xd6, 0xc3, 0xd0, 0x6d, 0xb8, 0xe0, 0xb9, 0x74, 0x17,
	0x4a, 0xc9, 0xaf, 0x26, 0x34, 0x86, 0xec, 0xb6, 0xfc, 0x74, 0xb3, 0x0e, 0xec, 0x94, 0xcf, 0xcc,
	0x22, 0xb9, 0xf8, 0x3d, 0x69, 0x80, 0xcd, 0xe4, 0xc0, 0x53, 0x46, 0x95, 0x7b, 0x18, 0xf0, 0x3e,
	0xc5, 0x1b, 0x8b, 0x41, 0x85, 0x44, 0x0c, 0xc2, 0x35, 0xc8, 0xae, 0x45, 0xaf, 0x57, 0xca, 0x83,
	0x3d, 0x9b, 0x1c, 0x8d, 0x27, 0xf9, 0x91, 0x57, 0x93, 0x08, 0xd4, 0x02, 0x44, 0xbf, 0xbc, 0x60,
	0x39, 0x87, 0x7d, 0xe3, 0x08, 0x97, 0xaf, 0x86, 0xcb, 0x2a, 0xa7, 0x73, 0xfe, 0x16, 0x58, 0x82,
	0x82, 0x70, 0x96, 0xd2, 0x12, 0x3d, 0x0b, 0xa7, 0xe8, 0x8e, 0xc7, 0xde, 0xd1, 0x75, 0xa3, 0x3f,
	0x32, 0xdb, 0xa6, 0x1d, 0x70, 0x31, 0x4b, 0xb8, 0xc8, 0x26, 0x48, 0x89, 0xc4, 0x73, 0xa9, 0x91,
	0xf8, 0x59, 0x38, 0xd5, 0xe8, 0x0f, 0x0d, 0x57, 0x1f, 0xca, 0xec, 0xd6, 0x29, 0xfb, 0xd0, 0x82,
	0xf7, 0xe5, 0x17, 0x5e, 0xcd, 0x26, 0x40, 0x57, 0x60, 0x4d, 0x1e, 0xb8, 0xfa, 0x90, 0x50, 0xb0,
	0x39, 0xd0, 0xed, 0xc5, 0x79, 0xd2, 0x34, 0x03, 0x9b, 0x1a, 0x10, 0x4e, 0x64, 0x04, 0x04, 0x5c,
	0x09, 0xb2, 0x8f, 0xa3, 0x90, 0xe3, 0x9a, 0xca, 0xa0, 0x7f, 0xc4, 0x8e, 0x04, 0x24, 0x11, 0x58,
	0xab, 0x9a, 0x6b, 0x5b, 0x77, 0x58, 0xb5, 0xb2, 0x48, 0x8f, 0x5a, 0x86, 0x40, 0x68, 0x1b, 0xe6,
	0xda, 0x23, 0x57, 0xb1, 0x6b, 0x46, 0xbf, 0xcf, 0x36, 0x87, 0xfd, 0xc2, 0xb6, 0x3d, 0x72, 0x31,
	0x98, 0x16, 0x80, 0x3e, 0x15, 0xa9, 0x97, 0x6f, 0x0f, 0x6d, 0xd7, 0x3f, 0xe4, 0x47, 0x3f, 0xbb,
	0x11, 0x05, 0xd2, 0x5b, 0xbe, 0xd4, 0xc0, 0xa4, 0xd7, 0x0e, 0x2d, 0xdb, 0x70, 0xbd, 0xd3, 0x5d,
	0xcb, 0xe4, 0x28, 0x65, 0x06, 0x16, 0x97, 0x15, 0xd5, 0xd1, 0x91, 0x3a, 0xec, 0xf7, 0x87, 0x77,
	0xc9, 0x5b, 0x0c, 0x3a, 0x06, 0x22, 0xac, 0xa7, 0xa1, 0x50, 0x05, 0x56, 0x70, 0xc9, 0x9d, 0x68,
	0x72, 0x92, 0x34, 0x49, 0xc5, 0x61, 0x91, 0x4b, 0x86, 0x8d, 0x17, 0xe7, 0xe4, 0xcb, 0x19, 0xb7,
	0x0d, 0xdb, 0x24, 0xcb, 0x76, 0x5e, 0x4d, 0xc0, 0xb1, 0xc8, 0xc9, 0x0f, 0x47, 0x19, 0xb9, 0x8e,
	0x6b, 0x0c, 0xc8, 0x67, 0x9d, 0x56, 0xa9, 0xc8, 0x13, 0x08, 0x6c, 0x42, 0x81, 0x9a, 0xbd, 0xba,
	0xd1, 0xb3, 0x83, 0x35, 0x6a, 0x42, 0x99, 0x04, 0xf4, 0x9b, 0x43, 0x4e, 0xe8, 0xbe, 0x00, 0xf9,
	0xe6, 0xd2, 0x3a, 0x3d, 0x0f, 0x97, 0xc4, 0x60, 0x29, 0x33, 0x3f, 0x89, 0x5b, 0xeb, 0x06, 0x35,
	0xb9, 0x74, 0x2c, 0x76, 0x08, 0x2f, 0x70, 0x30, 0x83, 0xa3, 0x4b, 0xfb, 0x18, 0x14, 0xfd, 0x0f,
	0xd8, 0x90, 0x71, 0xe4, 0x32, 0xfa, 0xbb, 0x86, 0xbd, 0x6f, 0x91, 0x4f, 0x4f, 0x59, 0xcc, 0xeb,
	0x36, 0xc9, 0x08, 0x99, 0x78, 0x54, 0x85, 0x33, 0xbb, 0x86, 0x35, 0x70, 0xcd, 0x81, 0x31, 0xd8,
	0x33, 0x93, 0xed, 0x4f, 0x93, 0xf6, 0x63, 0x69, 0x4a, 0x2f, 0xc3, 0x46, 0x5a, 0x10, 0x7d, 0x00,
	0xeb, 0xd7, 0x1b, 0xb0, 0xca, 0xaa, 0xc9, 0xaa, 0xd1, 0xc7, 0x83, 0x3f, 0xb8, 0xdd, 0x59, 0x1d,
	0x56, 0xe2, 0x5d, 0x3f, 0x00, 0x86, 0xff, 0x2e, 0x17, 0xef, 0x76, 0xaa, 0x95, 0xd5, 0x16, 0xcc,
	0xd7, 0x0c, 0xe7, 0x36, 0x6b, 0xc2, 0x0e, 0x3b, 0x86, 0x41, 0x68, 0x07, 0x1e, 0x66, 0x3f, 0xfd,
	0xef, 0xf5, 0x34, 0x86, 0x76, 0xcb, 0x7c, 0x35, 0x58, 0x6f, 0xd0, 0x63, 0x36, 0x93, 0xc8, 0xd0,
	0x79, 0x58, 0x62, 0x1c, 0x7a, 0xa1, 0xd8, 0xfb, 0x5c, 0x58, 0x0c, 0x9c, 0x10, 0x63, 0x21, 0xa5,
	0xc8, 0x27, 0xf7, 0xf2, 0x89, 0xee, 0x2d, 0xd3, 0x21, 0x31, 0x9d, 0x2d, 0xc7, 0xe2, 0x60, 0x92,
	0x9a, 0x12, 0xe6, 0x45, 0x97, 0x66, 0x49, 0x44, 0xd6, 0xc2, 0x65, 0xf6, 0x18, 0x0b, 0x97, 0xb9,
	0xb4, 0x85, 0xcb, 0xd3, 0xb0, 0xdc, 0x1a, 0x46, 0x35, 0xe4, 0xad, 0xd4, 0x92, 0x88, 0x29, 0xd6,
	0x6b, 0x2f, 0xc1, 0x7c, 0xc7, 0xf1, 0xb9, 0x20, 0x0d, 0x82, 0x47, 0xf6, 0x46, 0x37, 0x42, 0x41,
	0xb2, 0x5c, 0x7b, 0x78, 0x38, 0x3a, 0xf4, 0x88, 0x78, 0x2f, 0xcb, 0x85, 0xa1, 0xa5, 0x67, 0x60,
	0x99, 0x7d, 0xbe, 0xad, 0x39, 0xdc, 0x0f, 0x75, 0xcf, 0x7e, 0x86, 0xbe, 0x18, 0x16, 0x06, 0x95,
	0xbe, 0x94, 0x0b, 0xbf, 0x2e, 0x89, 0x7f, 0x57, 0xe9, 0x75, 0xa8, 0x68, 0x9e, 0x87, 0x45, 0xd5,
	0xdc, 0x1b, 0xda, 0x3d, 0xef, 0xa3, 0x6f, 0xac, 0xa6, 0x29, 0x79, 0x09, 0x2a, 0xe0, 0x06, 0x33,
	0xe2, 0x51, 0x91, 0x7c, 0x15, 0x6b, 0x49, 0x92, 0x96, 0x6b, 0xd8, 0x6e, 0xe4, 0x5e, 0x81, 0xa0,
	0x46, 0x81, 0x58, 0x08, 0xd2, 0xa0, 0x17, 0xb9, 0x35, 0x21, 0xa8, 0x61, 0x10, 0x36, 0xca, 0x5d,
	0xe3, 0xb5, 0xba, 0x71, 0xe4, 0xe8, 0x43, 0xd5, 0x74, 0x47, 0xf6, 0x80, 0x9d, 0x3d, 0x8a, 0x83,
	0x71, 0x28, 0xef, 0x38, 0xe6, 0x3b, 0x9b, 0xd6, 0xcd, 0xda, 0xf0, 0xe0, 0xd0, 0xa6, 0x87, 0x98,
	0xbd, 0xcf, 0x95, 0x25, 0x31, 0xe8, 0x79, 0xd8, 0x62, 0xe2, 0xc2, 0xc9, 0xa0, 0x67, 0x0e, 0x7a,
	0x62, 0xef, 0xdd, 0x23, 0xc7, 0x35, 0x7b, 0x9a, 0x3b, 0xdc, 0xbb, 0x43, 0x12, 0x01, 0xad, 0x5a,
	0x26, 0xd2, 0xa1, 0x55, 0x28, 0x36, 0xfa, 0xc6, 0x7e, 0x77, 0x9b, 0xd9, 0x5f, 0x01, 0x3f, 0x6d,
	0x97, 0x3e, 0xc5, 0xc3, 0x23, 0xa9, 0x1a, 0xa4, 0x45, 0xe9, 0x8e, 0x69, 0xf4, 0x4c, 0x7b, 0x82,
	0x22, 0x93, 0x4a, 0xe1, 0xef, 0x59, 0x29, 0xe9, 0x22, 0xca, 0x65, 0x8a, 0x88, 0x78, 0x18, 0xed,
	0x23, 0x10, 0x7f, 0xde, 0xf3, 0xb0, 0x18, 0x62, 0x4c, 0x39, 0x56, 0x18, 0x57, 0x8e, 0x95, 0xfe,
	0x8a, 0x83, 0x53, 0xa9, 0x52, 0xba, 0xff, 0x20, 0x8e, 0xde, 0x05, 0x02, 0x7d, 0xa2, 0x2f, 0x62,
	0x6a, 0xc3, 0x9e, 0xb7, 0xf6, 0x7c, 0x5b, 0x52, 0x7e, 0xb1, 0xa1, 0x83, 0x26, 0x44, 0x98, 0x89,
	0x8e, 0xb0, 0x38, 0x55, 0xd3, 0xb5, 0x8f, 0xe8, 0xab, 0x11, 0xef, 0x0b, 0x8a, 0x54, 0x3e, 0x29,
	0x98, 0xd2, 0x77, 0xb2, 0xcc, 0x01, 0xcb, 0x71, 0xca, 0x95, 0x4a, 0xc2, 0xaf, 0xf8, 0x34, 0xbf,
	0x3a, 0x43, 0x77, 0x1b, 0xc3, 0x17, 0x09, 0x03, 0x00, 0xc6, 0xc6, 0x3f, 0x4f, 0x14, 0x00, 0x70,
	0x84, 0x88, 0x7d, 0x90, 0xc8, 0x7f, 0xc6, 0x2d, 0x9b, 0x86, 0xc3, 0xbe, 0x1e, 0x43, 0x93, 0x43,
	0x00, 0x08, 0xdd, 0x88, 0x99, 0x89, 0xdc, 0x88, 0x89, 0xdc, 0x1a, 0x9d, 0xf5, 0x6f, 0x21, 0xb3,
	0x5b, 0xa3, 0x67, 0x60, 0xae, 0x6a, 0xf5, 0x58, 0x43, 0x7a, 0xec, 0x3c, 0x00, 0x60, 0xac, 0xe8,
	0xdc, 0x61, 0x58, 0xba, 0x4d, 0x1b, 0x00, 0xe8, 0x19, 0x5c, 0xb2, 0xa2, 0xa0, 0x42, 0x64, 0x61,
	0x3d, 0x0a, 0x2c, 0xfd, 0x2d, 0x07, 0x8f, 0xa7, 0xc8, 0x5d, 0xb7, 0xf6, 0xee, 0x1c, 0x4b, 0xf6,
	0xe1, 0xdd, 0x64, 0x3e, 0x76, 0x05, 0x3d, 0x7a, 0x07, 0x29, 0x77, 0xfc, 0x2b, 0x93, 0x63, 0x2e,
	0x01, 0x06, 0x92, 0x4c, 0xcc, 0xb7, 0x98, 0x36, 0xdf, 0x7f, 0xe1, 0x53, 0xe7, 0x1b, 0x9d, 0x2b,
	0xb9, 0x40, 0xf2, 0xba, 0xd8, 0x5a, 0x61, 0xac, 0xad, 0x15, 0xc6, 0xd9, 0x5a, 0x61, 0x9c, 0xad,
	0x15, 0xb2, 0x6d, 0xad, 0x70, 0xaf, 0xb6, 0x56, 0x18, 0x6b, 0x6b, 0x85, 0xe3, 0xdb, 0xda, 0xdf,
	0x73, 0xf0, 0xd4, 0x54, 0xb6, 0x36, 0x85, 0xfc, 0xc7, 0xd9, 0xdb, 0xf1, 0xae, 0xda, 0xde, 0xe3,
	0x0d, 0xb9, 0x29, 0xed, 0xed, 0x3d, 0x50, 0x1a, 0x93, 0xe5, 0x74, 0xdb, 0xb0, 0xfa, 0x13, 0xd3,
	0xdc, 0x55, 0x58, 0x0f, 0x75, 0x89, 0xf5, 0x1c, 0x9b, 0x7a, 0x16, 0xba, 0x7c, 0x15, 0xa0, 0xae,
	0xd7, 0xbc, 0x0f, 0xb7, 0xae, 0xc2, 0x32, 0x9e, 0xd6, 0x75, 0x49, 0xd5, 0x64, 0xa5, 0xd5, 0xed,
	0xb4, 0x34, 0x49, 0x17, 0x1e, 0x42, 0x27, 0x61, 0xa9, 0xd6, 0x51, 0x55, 0xa9, 0xa5, 0x7b, 0x28,
	0x61, 0xb6, 0xfc, 0xcd, 0x15, 0x58, 0xac, 0xeb, 0x35, 0xaf, 0xe6, 0x3a, 0x3a, 0xc4, 0x02, 0x44,
	0xbb, 0x92, 0xa6, 0x89, 0xd7, 0xa4, 0xae, 0x7e, 0xa3, 0x2d, 0xf9, 0xed, 0x97, 0x61, 0xa1, 0xa9,
	0x5c, 0x53, 0x5a, 0x5d, 0x55, 0x7a, 0xb1, 0x23, 0x69, 0xba, 0xc0, 0x21, 0x04, 0x8b, 0x1e, 0x48,
	0x6b, 0x2b, 0x2d, 0x4d, 0x12, 0x78, 0xb4, 0x00, 0x73, 0x3b, 0x92, 0xa8, 0xea, 0x55, 0x49, 0xd4,
	0x85, 0x1c, 0x02, 0x28, 0x62, 0x92, 0x46, 0x43, 0x28, 0xa0, 0x15, 0x10, 0xa4, 0x56, 0x4d, 0xa9,
	0xcb, 0xad, 0x6b, 0x7e, 0x27, 0x45, 0xcc, 0x6e, 0x08, 0xca, 0xfa, 0x99, 0x41, 0xeb, 0x70, 0x72,
	0x57, 0x54, 0x5f, 0x90, 0xf4, 0x6e, 0x5d, 0xd4, 0x45, 0x9f, 0x9e, 0xf2, 0x17, 0x41, 0x3c, 0x2f,
	0xd5, 0x74, 0x61, 0x1f, 0x6d, 0xc0, 0x4a, 0x18, 0xae, 0xb5, 0xc4, 0xb6, 0xb6, 0xa3, 0xe8, 0xc2,
	0x6d, 0x74, 0x06, 0x36, 0xd2, 0x30, 0x5d, 0xb9, 0xa5, 0x0b, 0x3f, 0x12, 0xc7, 0x76, 0xda, 0x75,
	0x51, 0x97, 0xba, 0xba, 0x2a, 0xd6, 0x25, 0x01, 0xab, 0x7f, 0x2b, 0x0b, 0xdb, 0xad, 0x29, 0xbb,
	0x6d, 0xb1, 0xa6, 0x0b, 0x87, 0x68, 0x0b, 0xce, 0x64, 0x52, 0xe1, 0x51, 0xde, 0x8b, 0xde, 0x02,
	0x4f, 0xa4, 0x50, 0x34, 0x45, 0x4d, 0x67, 0x64, 0x3e, 0xbf, 0x1f, 0xe6, 0xd0, 0x39, 0xd8, 0x4c,
	0x21, 0xae, 0xca, 0xf5, 0xae, 0xa8, 0xbd, 0x20, 0xf4, 0xd1, 0x13, 0x50, 0xca, 0xc6, 0xfb, 0x6c,
	0x8d, 0x50, 0x09, 0xce, 0x8d, 0xa1, 0xc3, 0x8c, 0xbd, 0x0f, 0x3d, 0x0a, 0x0f, 0xa7, 0xd0, 0x68,
	0x92, 0x46, 0x8c, 0x47, 0x69, 0x4b, 0x2d, 0xe1, 0x35, 0x74, 0x1e, 0x1e, 0x9d, 0x40, 0x44, 0x7a,
	0x7b, 0x3f, 0x37, 0xa1, 0xbb, 0x1d, 0xf9, 0xda, 0x8e, 0x60, 0x4f, 0xe8, 0x0e, 0x13, 0x91, 0xee,
	0x7e, 0x94, 0xcb, 0x98, 0x81, 0x47, 0xd9, 0x54, 0x5e, 0x12, 0x1c, 0xf4, 0x64, 0xaa, 0x34, 0x42,
	0x34, 0xa4, 0xb3, 0x0f, 0x70, 0xe8, 0x71, 0x78, 0x64, 0x0c, 0xe1, 0x75, 0xa5, 0xd9, 0xd9, 0x95,
	0x84, 0x57, 0x32, 0x54, 0xee, 0x4d, 0x52, 0x52, 0xb1, 0x19, 0xbe, 0x07, 0x3d, 0x05, 0x8f, 0x8f,
	0xe9, 0x4c, 0x93, 0x74, 0xbd, 0x29, 0xed, 0x4a, 0x2d, 0x5d, 0x78, 0x15, 0x5d, 0x80, 0xa7, 0xa6,
	0x22, 0x25, 0x7c, 0x7e, 0x90, 0x43, 0xe5, 0xb1, 0x5d, 0xb7, 0x3a, 0xbb, 0xd4, 0x64, 0x34, 0xe1,
	0xc7, 0x39, 0xf4, 0x34, 0x3c, 0x99, 0x61, 0x79, 0xd8, 0x9f, 0xbc, 0x36, 0x18, 0x28, 0x7c, 0x84,
	0x0b, 0xfb, 0x88, 0xd4, 0xd6, 0x77, 0x7c, 0xaf, 0xba, 0x15, 0x76, 0x37, 0x86, 0x21, 0x6e, 0x75,
	0x84, 0x1e, 0x86, 0xd3, 0x11, 0x84, 0xef, 0x3d, 0x4d, 0xe9, 0xba, 0xd4, 0x14, 0xfe, 0x1f, 0x7a,
	0x2c, 0xd0, 0x78, 0x0a, 0x01, 0x99, 0xd3, 0x87, 0x38, 0x74, 0x16, 0x4e, 0x45, 0xa8, 0x3c, 0x07,
	0x20, 0x9d, 0xbc, 0x3b, 0xac, 0x9a, 0x04, 0xda, 0x37, 0xe8, 0xbb, 0xa8, 0x04, 0x67, 0xb3, 0xc9,
	0xf0, 0x48, 0x3f, 0xc6, 0x25, 0x18, 0x6e, 0x74, 0x9a, 0x4d, 0x8f, 0x70, 0xfb, 0xa2, 0xf0, 0xff,
	0xc7, 0x12, 0x54, 0x2e, 0x0a, 0x16, 0x3a, 0x0d, 0xeb, 0x61, 0x99, 0x36, 0x24, 0xa9, 0xde, 0xd5,
	0x74, 0x51, 0xef, 0x68, 0x42, 0x2f, 0x6e, 0x91, 0x14, 0x79, 0x63, 0xb7, 0xaa, 0x34, 0x3d, 0x1a,
	0x9c, 0xd3, 0xd6, 0xb5, 0x4e, 0x75, 0x57, 0xd6, 0xbb, 0x2d, 0xe9, 0xa5, 0xae, 0x26, 0xb7, 0xae,
	0x35, 0xa5, 0xae, 0xa2, 0xd6, 0x25, 0x55, 0xf8, 0x06, 0x87, 0xb6, 0xe0, 0x74, 0x06, 0x96, 0x4c,
	0xe1, 0xeb, 0x1c, 0x3a, 0x05, 0x2b, 0x21, 0x0a, 0xa5, 0xa6, 0xb0, 0xc6, 0xbf, 0x8f, 0xe5, 0xb8,
	0x91, 0x86, 0x22, 0x2d, 0xff, 0x90, 0x43, 0xcb, 0x70, 0xa2, 0x26, 0xb6, 0x6a, 0x52, 0x93, 0xb5,
	0xf8, 0x03, 0xd2, 0x19, 0x03, 0xa9, 0x52, 0xbb, 0x29, 0xd6, 0x3c, 0x4e, 0xbe, 0x4a, 0x3a, 0x4b,
	0x43, 0x91, 0xce, 0xbe, 0x86, 0xad, 0xe5, 0x24, 0xb1, 0x7a, 0x02, 0xd4, 0x7c, 0x63, 0xf9, 0x35,
	0x1e, 0xad, 0x03, 0x8a, 0x62, 0x88, 0xb1, 0x7c, 0x96, 0xc7, 0xe3, 0xd3, 0x2e, 0xa8, 0x3c, 0x85,
	0x5f, 0xe7, 0xd1, 0xa3, 0x70, 0x6e, 0x47, 0xd6, 0x74, 0x45, 0x95, 0x6b, 0x22, 0x63, 0xab, 0xdb,
	0x90, 0x9b, 0xcd, 0xa0, 0xc3, 0xdf, 0xc8, 0x26, 0x0a, 0x32, 0xc2, 0xe7, 0x78, 0xac, 0xfd, 0xcc,
	0x9e, 0x08, 0x03, 0x9f, 0xe7, 0xd1, 0x39, 0x38, 0xe5, 0x65, 0xb9, 0xb6, 0xa2, 0xc9, 0xba, 0xac,
	0xb4, 0x82, 0x81, 0x7e, 0x93, 0x27, 0x53, 0x4e, 0xc1, 0x93, 0xe6, 0xbf, 0xcd, 0xa3, 0x15, 0x58,
	0xf2, 0xc0, 0xde, 0x14, 0x7e, 0x8b, 0x47, 0xa7, 0x61, 0x8d, 0x06, 0x69, 0xb1, 0x56, 0x53, 0x3a,
	0x2d, 0x3d, 0xe8, 0xf1, 0x63, 0xb9, 0x04, 0x32, 0x60, 0xf9, 0xe3, 0x39, 0xb4, 0x09, 0xab, 0xd2,
	0xcb, 0xb5, 0x1d, 0xb1, 0x75, 0x4d, 0xea, 0x36, 0x65, 0x4d, 0xf7, 0x1b, 0xfe, 0x23, 0x69, 0x18,
	0xc7, 0xb1, 0x86, 0xdf, 0xc9, 0xa1, 0x47, 0xe0, 0x0c, 0xb5, 0x2a, 0xad, 0xdb, 0x50, 0xd4, 0xae,
	0x4f, 0xe8, 0xb5, 0xff, 0x6e, 0x0e, 0xbb, 0x7e, 0xa7, 0x55, 0x97, 0xd4, 0xe6, 0x0d, 0xe2, 0xea,
	0xe3, 0xa8, 0xff, 0x29, 0x87, 0x25, 0x1c, 0x26, 0x09, 0xb5, 0xf4, 0x88, 0xfe, 0x39, 0x87, 0xb3,
	0x94, 0x26, 0xd5, 0x3a, 0xaa, 0xac, 0xdf, 0xe8, 0xd6, 0xa5, 0x86, 0xdc, 0xa2, 0x92, 0xc0, 0x0d,
	0x98, 0x8d, 0x7b, 0xc4, 0xff, 0x4a, 0x59, 0x4c, 0x21, 0xf6, 0x67, 0xf1, 0x6f, 0x64, 0xfa, 0x9e,
	0x6f, 0x48, 0xa2, 0x5a, 0x0b, 0x02, 0xce, 0xf7, 0x72, 0xe8, 0x61, 0xd8, 0x4c, 0x6f, 0x4e, 0x74,
	0xf1, 0xef, 0x39, 0xec, 0x45, 0x9e, 0x48, 0xab, 0x62, 0x13, 0xdb, 0xa9, 0xdf, 0xfc, 0x4f, 0xf2,
	0x58, 0x7a, 0x49, 0x2c, 0x69, 0xfa, 0xa7, 0xa9, 0x48, 0xa6, 0xcd, 0x6f, 0xe5, 0xb1, 0x8d, 0x76,
	0x34, 0x49, 0xed, 0xb2, 0x2a, 0x47, 0xf8, 0x42, 0x01, 0x5b, 0xfa, 0x35, 0xa9, 0x25, 0xa9, 0x62,
	0xb3, 0xdb, 0x54, 0xae, 0xf9, 0x98, 0x2f, 0x16, 0x62, 0x36, 0xd7, 0x56, 0xe5, 0x9a, 0x14, 0x2d,
	0x48, 0x7e, 0xbe, 0x88, 0xe3, 0x75, 0x16, 0x0d, 0x15, 0x45, 0x77, 0x47, 0x12, 0xb1, 0xcb, 0xfd,
	0x42, 0x11, 0x0b, 0x2d, 0x8b, 0x96, 0x30, 0xff, 0x8b, 0x63, 0xbb, 0xab, 0x29, 0x6a, 0x3d, 0x10,
	0xf0, 0xa7, 0x8a, 0xe8, 0x6d, 0x50, 0x4e, 0xa7, 0xd5, 0xe5, 0xda, 0x0b, 0x89, 0x06, 0x9f, 0x2e,
	0xe2, 0x5c, 0x34, 0x55, 0xe7, 0x24, 0x06, 0x7c, 0xa6, 0x88, 0x2e, 0xc1, 0x85, 0xe9, 0x07, 0x20,
	0x8d, 0x7e, 0xa9, 0x58, 0xfe, 0x18, 0x07, 0x27, 0xc2, 0xff, 0x75, 0x02, 0xd7, 0x9e, 0x55, 0xb9,
	0x25, 0xaa, 0x37, 0xba, 0x5e, 0xa9, 0x27, 0x3c, 0x84, 0x9e, 0x84, 0x47, 0x19, 0xf0, 0x25, 0x59,
	0xdf, 0xe9, 0x5e, 0x17, 0x55, 0x59, 0xac, 0x36, 0x71, 0x34, 0x6f, 0x5d, 0xc3, 0x79, 0x44, 0x57,
	0xe5, 0xd6, 0x35, 0x4d, 0xc0, 0x41, 0x6d, 0xe1, 0x79, 0x4d, 0x69, 0x05, 0x6d, 0x79, 0x74, 0x0a,
	0x56, 0x09, 0x88, 0xa5, 0x86, 0x00, 0x95, 0xc3, 0x55, 0x66, 0x5b, 0x55, 0x74, 0xa5, 0xa6, 0x34,
	0xbb, 0xd5, 0x4e, 0xa3, 0x21, 0xa9, 0x9a, 0x90, 0x2f, 0x7f, 0x94, 0x83, 0xa5, 0xd8, 0x3f, 0x2e,
	0xc0, 0x95, 0x24, 0x2d, 0x5f, 0x69, 0xe0, 0x4e, 0x56, 0xba, 0x5a, 0xa7, 0x56, 0x93, 0x34, 0xcc,
	0xc2, 0x12, 0xcc, 0x53, 0x90, 0xa4, 0xaa, 0x8a, 0x2a, 0xf0, 0xb8, 0x6a, 0x0c, 0x01, 0xba, 0x2d,
	0x85, 0xc8, 0xa2, 0xd5, 0xc2, 0x3a, 0xc4, 0xb6, 0x7d, 0xda, 0x2b, 0x8c, 0x19, 0x90, 0x84, 0x6b,
	0xb1, 0x5e, 0x57, 0x71, 0x7f, 0xf9, 0x72, 0x03, 0x56, 0x58, 0xcd, 0xed, 0x7f, 0x04, 0x9d, 0xb0,
	0x84, 0xd3, 0x30, 0x2b, 0xbe, 0x3b, 0x2d, 0xad, 0xd3, 0x6e, 0x2b, 0xaa, 0x2e, 0xd5, 0x85, 0x87,
	0x70, 0x95, 0xec, 0x21, 0x02, 0x30, 0x57, 0xb6, 0x60, 0x21, 0xf2, 0x0f, 0x27, 0xf0, 0xec, 0x69,
	0x34, 0xda, 0x55, 0xea, 0x52, 0xb8, 0xf6, 0x0f, 0x41, 0xeb, 0xd2, 0xae, 0x22, 0x90, 0x62, 0x20,
	0x04, 0xd4, 0xe4, 0xdd, 0x4e, 0x53, 0xc4, 0xbd, 0xf2, 0x31, 0xf2, 0xa6, 0x7c, 0x5d, 0x12, 0x72,
	0xe5, 0x77, 0xc1, 0x72, 0xe2, 0x74, 0x05, 0xee, 0x83, 0x39, 0x42, 0x57, 0xac, 0xe9, 0xe1, 0xe5,
	0xc6, 0x02, 0xcc, 0x69, 0x9d, 0xaa, 0x56, 0x53, 0xe5, 0xaa, 0x44, 0x05, 0x88, 0x27, 0xe4, 0x01,
	0x78, 0x74, 0x02, 0x66, 0xfd, 0x92, 0x37, 0x57, 0xfe, 0x30, 0x07, 0xa7, 0xc7, 0x7c, 0x41, 0x08,
	0x8f, 0xd3, 0x69, 0x55, 0x3b, 0xad, 0x7a, 0x53, 0xaa, 0xb3, 0x82, 0xb9, 0xa5, 0xb4, 0x24, 0xe1,
	0x21, 0x5c, 0x0b, 0x37, 0x64, 0x55, 0xd3, 0xbb, 0x5a, 0xa7, 0xca, 0x30, 0x4a, 0xa3, 0x1b, 0x23,
	0x16, 0x48, 0xf1, 0x47, 0xaa, 0xed, 0xb1, 0x64, 0x7c, 0xf9, 0xcf, 0x78, 0x58, 0x8a, 0x1d, 0x8a,
	0xc6, 0xba, 0xa6, 0xc9, 0x26, 0xb0, 0x93, 0xb6, 0x54, 0x93, 0x1b, 0x32, 0xd1, 0xcc, 0x69, 0x58,
	0x8f, 0x60, 0xd9, 0x03, 0x2e, 0xfd, 0x48, 0xd9, 0x13, 0x41, 0xb6, 0xa5, 0x16, 0x29, 0xcc, 0x48,
	0x5d, 0x8d, 0xb3, 0xd5, 0x66, 0x2a, 0xba, 0xb6, 0x23, 0x37, 0xeb, 0x42, 0x0e, 0x6b, 0x3d, 0xda,
	0x37, 0x6e, 0x96, 0xc7, 0x9e, 0x93, 0xde, 0x2c, 0x92, 0xcc, 0x85, 0x02, 0xb6, 0xc3, 0x31, 0x84,
	0x42, 0x11, 0xdb, 0x5b, 0x84, 0x00, 0xa7, 0x53, 0xa9, 0x2e, 0xcc, 0x60, 0x07, 0x8b, 0x20, 0x68,
	0x0b, 0xa9, 0x2e, 0xcc, 0x26, 0x50, 0x34, 0x72, 0x49, 0x75, 0x61, 0x0e, 0x3d, 0x02, 0x67, 0xa3,
	0xe3, 0x89, 0xaa, 0x2e, 0x8b, 0xcd, 0xe6, 0x0d, 0xaf, 0x63, 0x28, 0x7f, 0x85, 0x67, 0xa7, 0x49,
	0xe3, 0x87, 0xc6, 0x03, 0x59, 0xb1, 0x5a, 0x4c, 0x95, 0x44, 0x2d, 0x64, 0x50, 0x5b, 0x70, 0x26,
	0xa5, 0x1a, 0x09, 0x82, 0x1b, 0x87, 0xfd, 0x99, 0x14, 0x45, 0xa4, 0x13, 0xb1, 0x56, 0x93, 0xda,
	0xd4, 0x9c, 0x37, 0x60, 0xc5, 0x8b, 0xee, 0x91, 0xe2, 0x24, 0x87, 0x04, 0xaf, 0x5c, 0x61, 0xec,
	0xe5, 0xd1, 0x26, 0xac, 0x85, 0x21, 0xc1, 0x0c, 0x84, 0x02, 0x5e, 0xee, 0x52, 0x9c, 0x2f, 0x8c,
	0x62, 0x30, 0xe3, 0x58, 0x21, 0x85, 0x03, 0x53, 0x53, 0xd2, 0xf1, 0x4a, 0x36, 0xc2, 0x96, 0x2f,
	0xac, 0x90, 0x1c, 0xfd, 0xa6, 0x49, 0x39, 0xc6, 0x7a, 0xf5, 0x49, 0xa0, 0xfc, 0x3f, 0x61, 0x31,
	0xba, 0x6b, 0x81, 0xc3, 0x96, 0xb7, 0xb4, 0xf3, 0x64, 0x06, 0x50, 0x14, 0x75, 0xbc, 0xe0, 0x13,
	0x38, 0xf6, 0x1b, 0x2f, 0x20, 0xf9, 0x72, 0x15, 0x96, 0x62, 0x5f, 0xfd, 0xa2, 0x21, 0x3a, 0xd4,
	0xba, 0x7b, 0x55, 0x78, 0x08, 0x3b, 0x29, 0x6d, 0xdf, 0xbd, 0x2a, 0x70, 0xec, 0x09, 0x53, 0x5c,
	0x15, 0xf8, 0xf2, 0x2b, 0xfe, 0xa7, 0xd5, 0x92, 0x5f, 0x67, 0xc4, 0xee, 0xce, 0x2a, 0x74, 0xc6,
	0x49, 0x68, 0x51, 0x45, 0xe0, 0x72, 0x4b, 0x93, 0x54, 0x3d, 0xba, 0x0c, 0x48, 0xae, 0x12, 0xea,
	0x12, 0x96, 0x21, 0x43, 0xf3, 0xe5, 0xaf, 0x70, 0xec, 0x24, 0xbd, 0x3f, 0xce, 0x0a, 0x08, 0x54,
	0x50, 0x91, 0xad, 0x0a, 0xdf, 0x6d, 0x08, 0x94, 0xf6, 0x28, 0x70, 0x31, 0xe2, 0xa6, 0xbc, 0x2b,
	0xeb, 0x34, 0xd8, 0x85, 0xa0, 0x9a, 0xae, 0xb4, 0x85, 0x5c, 0xa0, 0x1b, 0x1f, 0xc8, 0xe8, 0xf3,
	0xc4, 0x0e, 0xe3, 0x9d, 0x77, 0xe5, 0x46, 0x57, 0x57, 0x3a, 0xb5, 0x1d, 0xa9, 0x1e, 0xf6, 0xba,
	0x60, 0x9c, 0x30, 0x41, 0xb1, 0xfc, 0x59, 0x0e, 0x96, 0x62, 0xb7, 0x0b, 0x70, 0xbc, 0xd4, 0xe5,
	0x86, 0x3f, 0x85, 0x79, 0x98, 0xc1, 0x8f, 0x75, 0xf1, 0x86, 0xc0, 0x61, 0xa3, 0xc4, 0x0f, 0xd7,
	0x14, 0xa5, 0xde, 0xd5, 0x71, 0x55, 0xec, 0x1b, 0x20, 0xae, 0x4d, 0xd7, 0xa3, 0x38, 0xba, 0x00,
	0x94, 0x77, 0xb1, 0x7d, 0x33, 0xa4, 0xbc, 0xbb, 0x2b, 0xd5, 0x65, 0xb2, 0x8a, 0xf5, 0x4c, 0x4a,
	0xc8, 0x93, 0x28, 0x2f, 0x37, 0xba, 0x62, 0x13, 0xbb, 0x05, 0x0d, 0xa7, 0x64, 0x8f, 0x06, 0x03,
	0x49, 0xed, 0xad, 0xa8, 0xdd, 0x17, 0xe4, 0x66, 0x53, 0x28, 0x96, 0x2f, 0xc3, 0x7c, 0xe8, 0xc8,
	0x31, 0x76, 0x84, 0x6a, 0xe7, 0x46, 0x57, 0x93, 0xf0, 0xc2, 0x89, 0x31, 0x3c, 0x03, 0xb9, 0x6a,
	0x07, 0x33, 0x3b, 0x0b, 0x79, 0x8c, 0x10, 0xf8, 0x72, 0x03, 0x50, 0xf2, 0x5c, 0x2f, 0x36, 0x0d,
	0x1a, 0x7f, 0xbd, 0x96, 0x8b, 0x00, 0x2c, 0x20, 0xe3, 0xe8, 0xc6, 0x05, 0x04, 0xb5, 0xa6, 0xa2,
	0xe1, 0x98, 0xfc, 0x11, 0x0e, 0xd6, 0x33, 0xae, 0xae, 0x61, 0xe7, 0x62, 0x2e, 0x4a, 0x79, 0xf6,
	0x3a, 0x7d, 0x0a, 0x1e, 0x8f, 0xc0, 0x77, 0xc4, 0x56, 0xbd, 0x49, 0xab, 0xdd, 0x7a, 0xa7, 0x26,
	0x75, 0x5f, 0xec, 0x88, 0x2d, 0x5d, 0xd6, 0x31, 0xc3, 0x65, 0x78, 0x22, 0x9d, 0x34, 0x10, 0x1b,
	0x93, 0x19, 0x5f, 0x7e, 0x9f, 0xff, 0x55, 0xe8, 0xc4, 0x7f, 0xd5, 0xc0, 0x4e, 0x9b, 0xb1, 0x6c,
	0x0c, 0xc7, 0xb0, 0x04, 0x49, 0xa7, 0x25, 0x5e, 0x17, 0xe5, 0x26, 0x2e, 0x7d, 0x84, 0xc4, 0xd6,
	0x0f, 0xa1, 0x08, 0xf0, 0x7c, 0xf9, 0x5b, 0x45, 0x58, 0x4b, 0x3f, 0xc3, 0x84, 0x57, 0xa6, 0xac,
	0x3e, 0x93, 0xb5, 0x76, 0x53, 0xbc, 0x81, 0xcb, 0xf6, 0x5d, 0x11, 0xbb, 0x52, 0x4d, 0xde, 0x15,
	0x9b, 0xdd, 0x8b, 0xc2, 0x43, 0x13, 0x69, 0xb6, 0x05, 0x6e, 0x22, 0x4d, 0x45, 0xe0, 0x27, 0xd2,
	0x5c, 0x12, 0x72, 0x13, 0x69, 0x2e, 0x0b, 0xf9, 0x89, 0x34, 0xcf, 0x08, 0x85, 0x89, 0x34, 0x57,
	0x84, 0xe2, 0x44, 0x9a, 0xb7, 0x0b, 0x33, 0x13, 0x69, 0xae, 0x0a, 0xb3, 0x13, 0x69, 0xde, 0x21,
	0xcc, 0xa1, 0xa7, 0xe0, 0xb1, 0x0c, 0x9a, 0x96, 0xb2, 0x2b, 0xb7, 0x44, 0x5d, 0x51, 0xbb, 0x95,
	0x67, 0xae, 0x08, 0xdf, 0xe6, 0xa7, 0x22, 0xdd, 0xae, 0x5c, 0x15, 0xbe, 0xcd, 0xa1, 0xf3, 0xf0,
	0xe8, 0x44, 0xd2, 0x2b, 0x97, 0x85, 0x4f, 0x73, 0x68, 0x1b, 0x9e, 0x9e, 0x48, 0x79, 0xa9, 0x82,
	0x2d, 0x5c, 0xd5, 0x71, 0xf1, 0xfb, 0x11, 0x0e, 0x2f, 0x13, 0xa6, 0x69, 0xb2, 0x23, 0x36, 0xaf,
	0x4b, 0x9a, 0xf0, 0xe1, 0xe9, 0xb8, 0xb9, 0x54, 0x11, 0x3e, 0xc4, 0xe1, 0x5a, 0x64, 0xf2, 0x14,
	0xaf, 0x08, 0x2e, 0x2e, 0xd4, 0x26, 0x12, 0x5e, 0xa5, 0x9b, 0x9b, 0x13, 0xe9, 0x2e, 0x0b, 0xb7,
	0xa7, 0xa2, 0xab, 0x08, 0xb7, 0xd0, 0x93, 0xb0, 0x99, 0x4a, 0x47, 0x7d, 0xf2, 0x3f, 0xbc, 0x3f,
	0xae, 0xfc, 0x35, 0x1e, 0x84, 0xf8, 0x91, 0x45, 0x5c, 0x20, 0xf9, 0xab, 0xd4, 0x48, 0x8e, 0xd9,
	0x80, 0x95, 0x28, 0xa2, 0xd1, 0xd1, 0x3b, 0x2a, 0x76, 0xe1, 0x44, 0x13, 0x4d, 0x57, 0x6a, 0x2f,
	0x08, 0x7c, 0x12, 0xd1, 0x50, 0x54, 0xe9, 0x65, 0x21, 0x97, 0x44, 0xc8, 0xad, 0xba, 0xf4, 0x32,
	0x75, 0x8f, 0xb4, 0x41, 0x34, 0xbc, 0x38, 0x12, 0x75, 0xe9, 0x1a, 0xae, 0x4a, 0xb6, 0x42, 0xcb,
	0xf0, 0x08, 0x8d, 0xd2, 0xc6, 0x05, 0xb9, 0x30, 0x83, 0x63, 0x4a, 0x0a, 0x43, 0x1e, 0xbe, 0x98,
	0xc4, 0x93, 0xe1, 0x3d, 0xfc, 0x2c, 0x8e, 0xb1, 0x51, 0x7c, 0x55, 0x69, 0xe1, 0x2a, 0xe5, 0x2c,
	0x9c, 0x8a, 0xc2, 0x77, 0x3b, 0x7a, 0x07, 0x47, 0xd1, 0x4e, 0x0b, 0x57, 0x28, 0x97, 0x61, 0x3e,
	0x74, 0x9c, 0x0f, 0x57, 0x0f, 0xed, 0x5a, 0x38, 0xbf, 0xb5, 0x6b, 0xdd, 0x9a, 0xd8, 0x6c, 0xd2,
	0xd2, 0xa4, 0x5d, 0xeb, 0xb6, 0x3b, 0xba, 0xc0, 0x97, 0x6f, 0xc2, 0x62, 0xf4, 0x68, 0x2d, 0xce,
	0xe6, 0x6c, 0xf7, 0x20, 0xa2, 0x80, 0x53, 0xb0, 0x1a, 0x06, 0x57, 0x6f, 0xb0, 0x2d, 0x0a, 0x1a,
	0x44, 0x63, 0xa8, 0xba, 0x84, 0x17, 0x1e, 0x74, 0x42, 0x7c, 0xf9, 0x43, 0x7c, 0xf8, 0x58, 0x49,
	0xfc, 0xcc, 0x00, 0x2e, 0xa4, 0xc8, 0x46, 0xef, 0x75, 0xb1, 0x49, 0x96, 0xb9, 0xb4, 0xa2, 0xf0,
	0x41, 0xdb, 0x5d, 0x0d, 0xaf, 0xea, 0xea, 0xb4, 0xe2, 0xf4, 0xc1, 0x15, 0x06, 0xd6, 0x04, 0x3e,
	0x02, 0xbf, 0xec, 0xc3, 0xf3, 0x11, 0xf8, 0x33, 0x3e, 0xbc, 0x80, 0x0d, 0x20, 0xe8, 0xfe, 0xa2,
	0x8f, 0x80, 0x08, 0xe2, 0x52, 0x80, 0x38, 0x17, 0x63, 0x68, 0x57, 0x6e, 0x75, 0x74, 0x49, 0x78,
	0x16, 0xad, 0xc0, 0x62, 0x08, 0x8c, 0xab, 0x87, 0xf7, 0x7f, 0xaa, 0x80, 0x56, 0x61, 0x29, 0x04,
	0x7d, 0x49, 0x92, 0x5e, 0x10, 0xde, 0xff, 0x9d, 0xc7, 0xca, 0x7f, 0xcd, 0xc1, 0x93, 0x53, 0xbe,
	0xfa, 0xc7, 0x49, 0x7a, 0xa7, 0x5d, 0x57, 0xc3, 0xf9, 0x95, 0x3d, 0x93, 0x35, 0xbb, 0xae, 0x74,
	0x35, 0x49, 0xbd, 0xee, 0xef, 0x25, 0xe8, 0xea, 0x8d, 0x2e, 0x5e, 0x4d, 0xaa, 0x34, 0xbf, 0x66,
	0x93, 0xd6, 0x95, 0x6e, 0x4b, 0xd1, 0x69, 0x0b, 0x81, 0x47, 0x57, 0xa0, 0x42, 0x68, 0xc3, 0x5b,
	0x2c, 0x5d, 0xa5, 0xa3, 0x6b, 0x72, 0x1d, 0x9b, 0x5d, 0xa7, 0x55, 0xd7, 0xf0, 0xba, 0xcd, 0xcf,
	0x88, 0x84, 0x50, 0xc8, 0x61, 0x53, 0x24, 0xed, 0xbc, 0x3a, 0x9f, 0x16, 0xca, 0x6c, 0xb5, 0x9e,
	0xbf, 0x59, 0x24, 0xff, 0xff, 0xf3, 0xd2, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x15, 0xe3, 0x72,
	0x9b, 0x1a, 0x74, 0x00, 0x00,
}
